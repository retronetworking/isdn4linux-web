<HTML>

<!-- Generated by c2html-1.0, Copyright 1998 by Dave Whittington -->
<HEAD>
<TITLE>sportster.c</TITLE>
<!--#include virtual="/ssi/js.shtml" -->
<!--#include virtual="/ssi/buttondefs.shtml" -->
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<TABLE WIDTH="100%">
<TR>
<TD ALIGN=LEFT WIDTH="90"><!--#include virtual="/ssi/b_home.shtml" --></TD>
<TD ALIGN=RIGHT WIDTH="90"><!--#include virtual="/ssi/b_index.shtml" --></TD>
</TR>
</TABLE>
<CENTER><H1>sportster.c</H1></CENTER>

<HR>
<PRE>
<FONT COLOR=#0000FF>/* $Id$

 * sportster.c     low level stuff for USR Sportster internal TA
 *
 * Author       Karsten Keil (keil@temic-ech.spacenet.de)
 *
 * Thanks to Christian "naddy" Weisgerber (3Com, US Robotics) for documentation
 *
 * $Log$
 * Revision 1.6  1998/04/15 16:44:35  keil
 * new init code
 *
 * Revision 1.5  1998/02/02 13:29:46  keil
 * fast io
 *
 * Revision 1.4  1997/11/08 21:35:52  keil
 * new l1 init
 *
 * Revision 1.3  1997/11/06 17:09:29  keil
 * New 2.1 init code
 *
 * Revision 1.2  1997/10/29 18:51:18  keil
 * New files
 *
 * Revision 1.1.2.1  1997/10/17 22:10:58  keil
 * new files on 2.0
 *
 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#__NO_VERSION__">__NO_VERSION__</A>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"hisax.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"isac.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"hscx.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"isdnl1.h"</FONT>

<FONT COLOR="#298C52">extern</FONT> <FONT COLOR="#298C52">const</FONT> <FONT COLOR="#298C52">char</FONT> *CardType[];
<FONT COLOR="#298C52">const</FONT> <FONT COLOR="#298C52">char</FONT> *sportster_revision = <FONT COLOR="#FF0000">"$Revision$"</FONT>;

<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#byteout">byteout</A>(addr,val) outb(val,addr)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#bytein">bytein</A>(addr) inb(addr)

<FONT COLOR=#A521F7>#define</FONT>	 SPORTSTER_ISAC		0xC000
<FONT COLOR=#A521F7>#define</FONT>	 SPORTSTER_HSCXA	0x0000
<FONT COLOR=#A521F7>#define</FONT>	 SPORTSTER_HSCXB	0x4000
<FONT COLOR=#A521F7>#define</FONT>	 SPORTSTER_RES_IRQ	0x8000
<FONT COLOR=#A521F7>#define</FONT>	 SPORTSTER_RESET	0x80
<FONT COLOR=#A521F7>#define</FONT>	 SPORTSTER_INTE		0x40

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> <FONT COLOR="#298C52">int</FONT>
calc_off(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> base, <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> off)
{
	<FONT COLOR="#298C52">return</FONT>(base + ((off &amp; 0xfc)&lt;&lt;8) + ((off &amp; 3)&lt;&lt;1));
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> <FONT COLOR="#298C52">void</FONT>
read_fifo(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	insb(adr, data, size);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
write_fifo(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	outsb(adr, data, size);
}

<FONT COLOR=#0000FF>/* Interface functions */</FONT>

<FONT COLOR="#298C52">static</FONT> u_char
<A HREF="asuscom.c.shtml#ReadISAC">ReadISAC</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char offset)
{
	<FONT COLOR="#298C52">return</FONT> (<A HREF="asuscom.c.shtml#bytein">bytein</A>(calc_off(cs-&gt;hw.spt.isac, offset)));
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#WriteISAC">WriteISAC</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char offset, u_char value)
{
	<A HREF="asuscom.c.shtml#byteout">byteout</A>(calc_off(cs-&gt;hw.spt.isac, offset), value);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#ReadISACfifo">ReadISACfifo</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	read_fifo(cs-&gt;hw.spt.isac, data, size);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#WriteISACfifo">WriteISACfifo</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	write_fifo(cs-&gt;hw.spt.isac, data, size);
}

<FONT COLOR="#298C52">static</FONT> u_char
<A HREF="asuscom.c.shtml#ReadHSCX">ReadHSCX</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, <FONT COLOR="#298C52">int</FONT> hscx, u_char offset)
{
	<FONT COLOR="#298C52">return</FONT> (<A HREF="asuscom.c.shtml#bytein">bytein</A>(calc_off(cs-&gt;hw.spt.hscx[hscx], offset)));
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#WriteHSCX">WriteHSCX</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, <FONT COLOR="#298C52">int</FONT> hscx, u_char offset, u_char value)
{
	<A HREF="asuscom.c.shtml#byteout">byteout</A>(calc_off(cs-&gt;hw.spt.hscx[hscx], offset), value);
}

<FONT COLOR=#0000FF>/*
 * fast interrupt HSCX stuff goes here
 */</FONT>

<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#READHSCX">READHSCX</A>(cs, nr, reg) <A HREF="asuscom.c.shtml#bytein">bytein</A>(calc_off(cs-&gt;hw.spt.hscx[nr], reg))
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#WRITEHSCX">WRITEHSCX</A>(cs, nr, reg, data) <A HREF="asuscom.c.shtml#byteout">byteout</A>(calc_off(cs-&gt;hw.spt.hscx[nr], reg), data)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#READHSCXFIFO">READHSCXFIFO</A>(cs, nr, ptr, cnt) read_fifo(cs-&gt;hw.spt.hscx[nr], ptr, cnt)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#WRITEHSCXFIFO">WRITEHSCXFIFO</A>(cs, nr, ptr, cnt) write_fifo(cs-&gt;hw.spt.hscx[nr], ptr, cnt)

<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"hscx_irq.c"</FONT>

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
sportster_interrupt(<FONT COLOR="#298C52">int</FONT> intno, <FONT COLOR="#298C52">void</FONT> *dev_id, <FONT COLOR="#298C52">struct</FONT> pt_regs *regs)
{
	<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs = dev_id;
	u_char val;

	<FONT COLOR="#298C52">if</FONT> (!cs) {
		printk(KERN_WARNING <FONT COLOR="#FF0000">"Sportster: Spurious interrupt!\n"</FONT>);
		<FONT COLOR="#298C52">return</FONT>;
	}
	val = <A HREF="asuscom.c.shtml#READHSCX">READHSCX</A>(cs, 1, <A HREF="hscx.h.shtml#HSCX_ISTA">HSCX_ISTA</A>);
      Start_HSCX:
	<FONT COLOR="#298C52">if</FONT> (val)
		<A HREF="hscx_irq.c.shtml#hscx_int_main">hscx_int_main</A>(cs, val);
	val = <A HREF="asuscom.c.shtml#ReadISAC">ReadISAC</A>(cs, <A HREF="isac.h.shtml#ISAC_ISTA">ISAC_ISTA</A>);
      Start_ISAC:
	<FONT COLOR="#298C52">if</FONT> (val)
		<A HREF="isac.c.shtml#isac_interrupt">isac_interrupt</A>(cs, val);
	val = <A HREF="asuscom.c.shtml#READHSCX">READHSCX</A>(cs, 1, <A HREF="hscx.h.shtml#HSCX_ISTA">HSCX_ISTA</A>);
	<FONT COLOR="#298C52">if</FONT> (val) {
		<FONT COLOR="#298C52">if</FONT> (cs-&gt;debug &amp; <A HREF="isdnl1.h.shtml#L1_DEB_HSCX">L1_DEB_HSCX</A>)
			<A HREF="isdnl1.c.shtml#debugl1">debugl1</A>(cs, <FONT COLOR="#FF0000">"HSCX IntStat after IntRoutine"</FONT>);
		<FONT COLOR="#298C52">goto</FONT> Start_HSCX;
	}
	val = <A HREF="asuscom.c.shtml#ReadISAC">ReadISAC</A>(cs, <A HREF="isac.h.shtml#ISAC_ISTA">ISAC_ISTA</A>);
	<FONT COLOR="#298C52">if</FONT> (val) {
		<FONT COLOR="#298C52">if</FONT> (cs-&gt;debug &amp; <A HREF="isdnl1.h.shtml#L1_DEB_ISAC">L1_DEB_ISAC</A>)
			<A HREF="isdnl1.c.shtml#debugl1">debugl1</A>(cs, <FONT COLOR="#FF0000">"ISAC IntStat after IntRoutine"</FONT>);
		<FONT COLOR="#298C52">goto</FONT> Start_ISAC;
	}
	<FONT COLOR=#0000FF>/* get a new irq impulse if there any pending */</FONT>
	<A HREF="asuscom.c.shtml#bytein">bytein</A>(cs-&gt;hw.spt.cfg_reg + SPORTSTER_RES_IRQ +1);
}

<FONT COLOR="#298C52">void</FONT>
release_io_sportster(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs)
{
	<FONT COLOR="#298C52">int</FONT> i, adr;

	<A HREF="asuscom.c.shtml#byteout">byteout</A>(cs-&gt;hw.spt.cfg_reg + SPORTSTER_RES_IRQ, 0);
	<FONT COLOR="#298C52">for</FONT> (i=0; i&lt;64; i++) {
		adr = cs-&gt;hw.spt.cfg_reg + i *1024;
		release_region(adr, 8);
	}
}

<FONT COLOR="#298C52">void</FONT>
reset_sportster(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs)
{
	<FONT COLOR="#298C52">long</FONT> flags;

	cs-&gt;hw.spt.res_irq |= SPORTSTER_RESET; <FONT COLOR=#0000FF>/* Reset On */</FONT>
	<A HREF="asuscom.c.shtml#byteout">byteout</A>(cs-&gt;hw.spt.cfg_reg + SPORTSTER_RES_IRQ, cs-&gt;hw.spt.res_irq);
	save_flags(flags);
	sti();
	current-&gt;state = TASK_INTERRUPTIBLE;
	current-&gt;timeout = jiffies + 1;
	schedule();
	cs-&gt;hw.spt.res_irq &amp;= ~SPORTSTER_RESET; <FONT COLOR=#0000FF>/* Reset Off */</FONT>
	<A HREF="asuscom.c.shtml#byteout">byteout</A>(cs-&gt;hw.spt.cfg_reg + SPORTSTER_RES_IRQ, cs-&gt;hw.spt.res_irq);
	current-&gt;state = TASK_INTERRUPTIBLE;
	current-&gt;timeout = jiffies + 1;
	schedule();
	restore_flags(flags);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">int</FONT>
Sportster_card_msg(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, <FONT COLOR="#298C52">int</FONT> mt, <FONT COLOR="#298C52">void</FONT> *arg)
{
	<FONT COLOR="#298C52">switch</FONT> (mt) {
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_RESET">CARD_RESET</A>:
			reset_sportster(cs);
			<FONT COLOR="#298C52">return</FONT>(0);
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_RELEASE">CARD_RELEASE</A>:
			release_io_sportster(cs);
			<FONT COLOR="#298C52">return</FONT>(0);
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_SETIRQ">CARD_SETIRQ</A>:
			<FONT COLOR="#298C52">return</FONT>(request_irq(cs-&gt;irq, &amp;sportster_interrupt,
					<A HREF="hisax.h.shtml#I4L_IRQ_FLAG">I4L_IRQ_FLAG</A>, <FONT COLOR="#FF0000">"HiSax"</FONT>, cs));
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_INIT">CARD_INIT</A>:
			inithscxisac(cs, 1);
			cs-&gt;hw.spt.res_irq |= SPORTSTER_INTE; <FONT COLOR=#0000FF>/* IRQ On */</FONT>
			<A HREF="asuscom.c.shtml#byteout">byteout</A>(cs-&gt;hw.spt.cfg_reg + SPORTSTER_RES_IRQ, cs-&gt;hw.spt.res_irq);
			inithscxisac(cs, 2);
			<FONT COLOR="#298C52">return</FONT>(0);
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_TEST">CARD_TEST</A>:
			<FONT COLOR="#298C52">return</FONT>(0);
	}
	<FONT COLOR="#298C52">return</FONT>(0);
}

<A HREF="asuscom.c.shtml#__initfunc">__initfunc</A>(<FONT COLOR="#298C52">int</FONT>
get_io_range(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs))
{
	<FONT COLOR="#298C52">int</FONT> i, j, adr;
	
	<FONT COLOR="#298C52">for</FONT> (i=0;i&lt;64;i++) {
		adr = cs-&gt;hw.spt.cfg_reg + i *1024;
		<FONT COLOR="#298C52">if</FONT> (check_region(adr, 8)) {
			printk(KERN_WARNING
				<FONT COLOR="#FF0000">"HiSax: %s config port %x-%x already in use\n"</FONT>,
				CardType[cs-&gt;typ], adr, adr + 8);
			<FONT COLOR="#298C52">break</FONT>;
		} <FONT COLOR="#298C52">else</FONT>
			request_region(adr, 8, <FONT COLOR="#FF0000">"sportster"</FONT>);
	}
	<FONT COLOR="#298C52">if</FONT> (i==64)
		<FONT COLOR="#298C52">return</FONT>(1);
	<FONT COLOR="#298C52">else</FONT> {
		<FONT COLOR="#298C52">for</FONT> (j=0; j&lt;i; j++) {
			adr = cs-&gt;hw.spt.cfg_reg + j *1024;
			release_region(adr, 8);
		}
		<FONT COLOR="#298C52">return</FONT>(0);
	}
}

<A HREF="asuscom.c.shtml#__initfunc">__initfunc</A>(<FONT COLOR="#298C52">int</FONT>
setup_sportster(<FONT COLOR="#298C52">struct</FONT> IsdnCard *card))
{
	<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs = card-&gt;cs;
	<FONT COLOR="#298C52">char</FONT> tmp[64];

	strcpy(tmp, sportster_revision);
	printk(KERN_INFO <FONT COLOR="#FF0000">"HiSax: USR Sportster driver Rev. %s\n"</FONT>, HiSax_getrev(tmp));
	<FONT COLOR="#298C52">if</FONT> (cs-&gt;typ != <A HREF="hisax.h.shtml#ISDN_CTYPE_SPORTSTER">ISDN_CTYPE_SPORTSTER</A>)
		<FONT COLOR="#298C52">return</FONT> (0);

	cs-&gt;hw.spt.cfg_reg = card-&gt;para[1];
	cs-&gt;irq = card-&gt;para[0];
	<FONT COLOR="#298C52">if</FONT> (!get_io_range(cs))
		<FONT COLOR="#298C52">return</FONT> (0);
	cs-&gt;hw.spt.isac = cs-&gt;hw.spt.cfg_reg + SPORTSTER_ISAC;
	cs-&gt;hw.spt.hscx[0] = cs-&gt;hw.spt.cfg_reg + SPORTSTER_HSCXA;
	cs-&gt;hw.spt.hscx[1] = cs-&gt;hw.spt.cfg_reg + SPORTSTER_HSCXB;
	
	<FONT COLOR="#298C52">switch</FONT>(cs-&gt;irq) {
		<FONT COLOR="#298C52">case</FONT> 5:	cs-&gt;hw.spt.res_irq = 1;
			<FONT COLOR="#298C52">break</FONT>;
		<FONT COLOR="#298C52">case</FONT> 7:	cs-&gt;hw.spt.res_irq = 2;
			<FONT COLOR="#298C52">break</FONT>;
		<FONT COLOR="#298C52">case</FONT> 10:cs-&gt;hw.spt.res_irq = 3;
			<FONT COLOR="#298C52">break</FONT>;
		<FONT COLOR="#298C52">case</FONT> 11:cs-&gt;hw.spt.res_irq = 4;
			<FONT COLOR="#298C52">break</FONT>;
		<FONT COLOR="#298C52">case</FONT> 12:cs-&gt;hw.spt.res_irq = 5;
			<FONT COLOR="#298C52">break</FONT>;
		<FONT COLOR="#298C52">case</FONT> 14:cs-&gt;hw.spt.res_irq = 6;
			<FONT COLOR="#298C52">break</FONT>;
		<FONT COLOR="#298C52">case</FONT> 15:cs-&gt;hw.spt.res_irq = 7;
			<FONT COLOR="#298C52">break</FONT>;
		<FONT COLOR="#298C52">default</FONT>:release_io_sportster(cs);
			printk(KERN_WARNING <FONT COLOR="#FF0000">"Sportster: wrong IRQ\n"</FONT>);
			<FONT COLOR="#298C52">return</FONT>(0);
	}
	reset_sportster(cs);
	printk(KERN_INFO
	       <FONT COLOR="#FF0000">"HiSax: %s config irq:%d cfg:0x%X\n"</FONT>,
	       CardType[cs-&gt;typ], cs-&gt;irq,
	       cs-&gt;hw.spt.cfg_reg);

	cs-&gt;readisac = &amp;<A HREF="asuscom.c.shtml#ReadISAC">ReadISAC</A>;
	cs-&gt;writeisac = &amp;<A HREF="asuscom.c.shtml#WriteISAC">WriteISAC</A>;
	cs-&gt;readisacfifo = &amp;<A HREF="asuscom.c.shtml#ReadISACfifo">ReadISACfifo</A>;
	cs-&gt;writeisacfifo = &amp;<A HREF="asuscom.c.shtml#WriteISACfifo">WriteISACfifo</A>;
	cs-&gt;BC_Read_Reg = &amp;<A HREF="asuscom.c.shtml#ReadHSCX">ReadHSCX</A>;
	cs-&gt;BC_Write_Reg = &amp;<A HREF="asuscom.c.shtml#WriteHSCX">WriteHSCX</A>;
	cs-&gt;BC_Send_Data = &amp;<A HREF="hscx_irq.c.shtml#hscx_fill_fifo">hscx_fill_fifo</A>;
	cs-&gt;cardmsg = &amp;Sportster_card_msg;
	<A HREF="isac.c.shtml#ISACVersion">ISACVersion</A>(cs, <FONT COLOR="#FF0000">"Sportster:"</FONT>);
	<FONT COLOR="#298C52">if</FONT> (HscxVersion(cs, <FONT COLOR="#FF0000">"Sportster:"</FONT>)) {
		printk(KERN_WARNING
		       <FONT COLOR="#FF0000">"Sportster: wrong HSCX versions check IO address\n"</FONT>);
		release_io_sportster(cs);
		<FONT COLOR="#298C52">return</FONT> (0);
	}
	<FONT COLOR="#298C52">return</FONT> (1);
}
</BODY>

</HTML>
