<HTML>

<!-- Generated by c2html-1.0, Copyright 1998 by Dave Whittington -->
<HEAD>
<TITLE>teles3.c</TITLE>
<!--#include virtual="/ssi/js.shtml" -->
<!--#include virtual="/ssi/buttondefs.shtml" -->
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<TABLE WIDTH="100%">
<TR>
<TD ALIGN=LEFT WIDTH="90"><!--#include virtual="/ssi/b_home.shtml" --></TD>
<TD ALIGN=RIGHT WIDTH="90"><!--#include virtual="/ssi/b_index.shtml" --></TD>
</TR>
</TABLE>
<CENTER><H1>teles3.c</H1></CENTER>

<HR>
<PRE>
<FONT COLOR=#0000FF>/* $Id$

 * teles3.c     low level stuff for Teles 16.3 &amp; PNP isdn cards
 *
 *              based on the teles driver from Jan den Ouden
 *
 * Author       Karsten Keil (keil@temic-ech.spacenet.de)
 *
 * Thanks to    Jan den Ouden
 *              Fritz Elfert
 *              Beat Doebeli
 *
 * $Log$
 * Revision 2.8  1998/04/15 16:44:30  keil
 * new init code
 *
 * Revision 2.7  1998/02/02 13:29:48  keil
 * fast io
 *
 * Revision 2.6  1997/11/13 16:22:44  keil
 * COMPAQ_ISA reset
 *
 * Revision 2.5  1997/11/12 15:01:25  keil
 * COMPAQ_ISA changes
 *
 * Revision 2.4  1997/11/08 21:35:56  keil
 * new l1 init
 *
 * Revision 2.3  1997/11/06 17:09:33  keil
 * New 2.1 init code
 *
 * Revision 2.2  1997/10/29 18:55:59  keil
 * changes for 2.1.60 (irq2dev_map)
 *
 * Revision 2.1  1997/07/27 21:47:12  keil
 * new interface structures
 *
 * Revision 2.0  1997/06/26 11:02:46  keil
 * New Layer and card interface
 *
 * Revision 1.11  1997/04/13 19:54:05  keil
 * Change in IRQ check delay for SMP
 *
 * Revision 1.10  1997/04/06 22:54:05  keil
 * Using SKB's
 *
 * Revision 1.9  1997/03/22 02:01:07  fritz
 * -Reworked toplevel Makefile. From now on, no different Makefiles
 *  for standalone- and in-kernel-compilation are needed any more.
 * -Added local Rules.make for above reason.
 * -Experimental changes in teles3.c for enhanced IRQ-checking with
 *  2.1.X and SMP kernels.
 * -Removed diffstd-script, same functionality is in stddiff -r.
 * -Enhanced scripts std2kern and stddiff.
 *
 * Revision 1.8  1997/02/23 18:43:55  fritz
 * Added support for Teles-Vision.
 *
 * Revision 1.7  1997/01/28 22:48:33  keil
 * fixes for Teles PCMCIA (Christof Petig)
 *
 * Revision 1.6  1997/01/27 15:52:55  keil
 * SMP proof,cosmetics, PCMCIA added
 *
 * removed old log info /KKe
 *
 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#__NO_VERSION__">__NO_VERSION__</A>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"hisax.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"isac.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"hscx.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"isdnl1.h"</FONT>

<FONT COLOR="#298C52">extern</FONT> <FONT COLOR="#298C52">const</FONT> <FONT COLOR="#298C52">char</FONT> *CardType[];
<FONT COLOR="#298C52">const</FONT> <FONT COLOR="#298C52">char</FONT> *teles3_revision = <FONT COLOR="#FF0000">"$Revision$"</FONT>;

<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#byteout">byteout</A>(addr,val) outb(val,addr)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#bytein">bytein</A>(addr) inb(addr)

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> u_char
<A HREF="asuscom.c.shtml#readreg">readreg</A>(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, u_char off)
{
	<FONT COLOR="#298C52">return</FONT> (<A HREF="asuscom.c.shtml#bytein">bytein</A>(adr + off));
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#writereg">writereg</A>(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, u_char off, u_char data)
{
	<A HREF="asuscom.c.shtml#byteout">byteout</A>(adr + off, data);
}


<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> <FONT COLOR="#298C52">void</FONT>
read_fifo(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	insb(adr, data, size);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
write_fifo(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	outsb(adr, data, size);
}

<FONT COLOR=#0000FF>/* Interface functions */</FONT>

<FONT COLOR="#298C52">static</FONT> u_char
<A HREF="asuscom.c.shtml#ReadISAC">ReadISAC</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char offset)
{
	<FONT COLOR="#298C52">return</FONT> (<A HREF="asuscom.c.shtml#readreg">readreg</A>(cs-&gt;hw.teles3.isac, offset));
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#WriteISAC">WriteISAC</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char offset, u_char value)
{
	<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.teles3.isac, offset, value);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#ReadISACfifo">ReadISACfifo</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	read_fifo(cs-&gt;hw.teles3.isacfifo, data, size);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#WriteISACfifo">WriteISACfifo</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	write_fifo(cs-&gt;hw.teles3.isacfifo, data, size);
}

<FONT COLOR="#298C52">static</FONT> u_char
<A HREF="asuscom.c.shtml#ReadHSCX">ReadHSCX</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, <FONT COLOR="#298C52">int</FONT> hscx, u_char offset)
{
	<FONT COLOR="#298C52">return</FONT> (<A HREF="asuscom.c.shtml#readreg">readreg</A>(cs-&gt;hw.teles3.hscx[hscx], offset));
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#WriteHSCX">WriteHSCX</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, <FONT COLOR="#298C52">int</FONT> hscx, u_char offset, u_char value)
{
	<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.teles3.hscx[hscx], offset, value);
}

<FONT COLOR=#0000FF>/*
 * fast interrupt HSCX stuff goes here
 */</FONT>

<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#READHSCX">READHSCX</A>(cs, nr, reg) <A HREF="asuscom.c.shtml#readreg">readreg</A>(cs-&gt;hw.teles3.hscx[nr], reg)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#WRITEHSCX">WRITEHSCX</A>(cs, nr, reg, data) <A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.teles3.hscx[nr], reg, data)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#READHSCXFIFO">READHSCXFIFO</A>(cs, nr, ptr, cnt) read_fifo(cs-&gt;hw.teles3.hscxfifo[nr], ptr, cnt)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#WRITEHSCXFIFO">WRITEHSCXFIFO</A>(cs, nr, ptr, cnt) write_fifo(cs-&gt;hw.teles3.hscxfifo[nr], ptr, cnt)

<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"hscx_irq.c"</FONT>

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
teles3_interrupt(<FONT COLOR="#298C52">int</FONT> intno, <FONT COLOR="#298C52">void</FONT> *dev_id, <FONT COLOR="#298C52">struct</FONT> pt_regs *regs)
{
<FONT COLOR=#A521F7>#define</FONT> MAXCOUNT 20
	<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs = dev_id;
	u_char val, stat = 0;
	<FONT COLOR="#298C52">int</FONT> count = 0;

	<FONT COLOR="#298C52">if</FONT> (!cs) {
		printk(KERN_WARNING <FONT COLOR="#FF0000">"Teles: Spurious interrupt!\n"</FONT>);
		<FONT COLOR="#298C52">return</FONT>;
	}
	val = <A HREF="asuscom.c.shtml#readreg">readreg</A>(cs-&gt;hw.teles3.hscx[1], <A HREF="hscx.h.shtml#HSCX_ISTA">HSCX_ISTA</A>);
      Start_HSCX:
	<FONT COLOR="#298C52">if</FONT> (val) {
		<A HREF="hscx_irq.c.shtml#hscx_int_main">hscx_int_main</A>(cs, val);
		stat |= 1;
	}
	val = <A HREF="asuscom.c.shtml#readreg">readreg</A>(cs-&gt;hw.teles3.isac, <A HREF="isac.h.shtml#ISAC_ISTA">ISAC_ISTA</A>);
      Start_ISAC:
	<FONT COLOR="#298C52">if</FONT> (val) {
		<A HREF="isac.c.shtml#isac_interrupt">isac_interrupt</A>(cs, val);
		stat |= 2;
	}
	count++;
	val = <A HREF="asuscom.c.shtml#readreg">readreg</A>(cs-&gt;hw.teles3.hscx[1], <A HREF="hscx.h.shtml#HSCX_ISTA">HSCX_ISTA</A>);
	<FONT COLOR="#298C52">if</FONT> (val &amp;&amp; count &lt; MAXCOUNT) {
		<FONT COLOR="#298C52">if</FONT> (cs-&gt;debug &amp; <A HREF="isdnl1.h.shtml#L1_DEB_HSCX">L1_DEB_HSCX</A>)
			<A HREF="isdnl1.c.shtml#debugl1">debugl1</A>(cs, <FONT COLOR="#FF0000">"HSCX IntStat after IntRoutine"</FONT>);
		<FONT COLOR="#298C52">goto</FONT> Start_HSCX;
	}
	val = <A HREF="asuscom.c.shtml#readreg">readreg</A>(cs-&gt;hw.teles3.isac, <A HREF="isac.h.shtml#ISAC_ISTA">ISAC_ISTA</A>);
	<FONT COLOR="#298C52">if</FONT> (val &amp;&amp; count &lt; MAXCOUNT) {
		<FONT COLOR="#298C52">if</FONT> (cs-&gt;debug &amp; <A HREF="isdnl1.h.shtml#L1_DEB_ISAC">L1_DEB_ISAC</A>)
			<A HREF="isdnl1.c.shtml#debugl1">debugl1</A>(cs, <FONT COLOR="#FF0000">"ISAC IntStat after IntRoutine"</FONT>);
		<FONT COLOR="#298C52">goto</FONT> Start_ISAC;
	}
	<FONT COLOR="#298C52">if</FONT> (count &gt;= MAXCOUNT)
		printk(KERN_WARNING <FONT COLOR="#FF0000">"Teles3: more than %d loops in teles3_interrupt\n"</FONT>, count);
	<FONT COLOR="#298C52">if</FONT> (stat &amp; 1) {
		<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.teles3.hscx[0], <A HREF="hscx.h.shtml#HSCX_MASK">HSCX_MASK</A>, 0xFF);
		<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.teles3.hscx[1], <A HREF="hscx.h.shtml#HSCX_MASK">HSCX_MASK</A>, 0xFF);
		<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.teles3.hscx[0], <A HREF="hscx.h.shtml#HSCX_MASK">HSCX_MASK</A>, 0x0);
		<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.teles3.hscx[1], <A HREF="hscx.h.shtml#HSCX_MASK">HSCX_MASK</A>, 0x0);
	}
	<FONT COLOR="#298C52">if</FONT> (stat &amp; 2) {
		<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.teles3.isac, <A HREF="isac.h.shtml#ISAC_MASK">ISAC_MASK</A>, 0xFF);
		<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.teles3.isac, <A HREF="isac.h.shtml#ISAC_MASK">ISAC_MASK</A>, 0x0);
	}
}

<FONT COLOR="#298C52">inline</FONT> <FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
release_ioregs(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, <FONT COLOR="#298C52">int</FONT> mask)
{
	<FONT COLOR="#298C52">if</FONT> (mask &amp; 1)
		release_region(cs-&gt;hw.teles3.isac + 32, 32);
	<FONT COLOR="#298C52">if</FONT> (mask &amp; 2)
		release_region(cs-&gt;hw.teles3.hscx[0] + 32, 32);
	<FONT COLOR="#298C52">if</FONT> (mask &amp; 4)
		release_region(cs-&gt;hw.teles3.hscx[1] + 32, 32);
}

<FONT COLOR="#298C52">void</FONT>
release_io_teles3(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs)
{
	<FONT COLOR="#298C52">if</FONT> (cs-&gt;typ == <A HREF="hisax.h.shtml#ISDN_CTYPE_TELESPCMCIA">ISDN_CTYPE_TELESPCMCIA</A>)
		release_region(cs-&gt;hw.teles3.cfg_reg, 97);
	<FONT COLOR="#298C52">else</FONT> {
		<FONT COLOR="#298C52">if</FONT> (cs-&gt;hw.teles3.cfg_reg)
			<FONT COLOR="#298C52">if</FONT> (cs-&gt;typ == <A HREF="hisax.h.shtml#ISDN_CTYPE_COMPAQ_ISA">ISDN_CTYPE_COMPAQ_ISA</A>) {
				release_region(cs-&gt;hw.teles3.cfg_reg, 1);
			} <FONT COLOR="#298C52">else</FONT> {
				release_region(cs-&gt;hw.teles3.cfg_reg, 8);
			}
		release_ioregs(cs, 0x7);
	}
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">int</FONT>
reset_teles3(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs)
{
	<FONT COLOR="#298C52">long</FONT> flags;
	u_char irqcfg;

	<FONT COLOR="#298C52">if</FONT> (cs-&gt;typ != <A HREF="hisax.h.shtml#ISDN_CTYPE_TELESPCMCIA">ISDN_CTYPE_TELESPCMCIA</A>) {
		<FONT COLOR="#298C52">if</FONT> ((cs-&gt;hw.teles3.cfg_reg) &amp;&amp; (cs-&gt;typ != <A HREF="hisax.h.shtml#ISDN_CTYPE_COMPAQ_ISA">ISDN_CTYPE_COMPAQ_ISA</A>)) {
			<FONT COLOR="#298C52">switch</FONT> (cs-&gt;irq) {
				<FONT COLOR="#298C52">case</FONT> 2:
				<FONT COLOR="#298C52">case</FONT> 9:
					irqcfg = 0x00;
					<FONT COLOR="#298C52">break</FONT>;
				<FONT COLOR="#298C52">case</FONT> 3:
					irqcfg = 0x02;
					<FONT COLOR="#298C52">break</FONT>;
				<FONT COLOR="#298C52">case</FONT> 4:
					irqcfg = 0x04;
					<FONT COLOR="#298C52">break</FONT>;
				<FONT COLOR="#298C52">case</FONT> 5:
					irqcfg = 0x06;
					<FONT COLOR="#298C52">break</FONT>;
				<FONT COLOR="#298C52">case</FONT> 10:
					irqcfg = 0x08;
					<FONT COLOR="#298C52">break</FONT>;
				<FONT COLOR="#298C52">case</FONT> 11:
					irqcfg = 0x0A;
					<FONT COLOR="#298C52">break</FONT>;
				<FONT COLOR="#298C52">case</FONT> 12:
					irqcfg = 0x0C;
					<FONT COLOR="#298C52">break</FONT>;
				<FONT COLOR="#298C52">case</FONT> 15:
					irqcfg = 0x0E;
					<FONT COLOR="#298C52">break</FONT>;
				<FONT COLOR="#298C52">default</FONT>:
					<FONT COLOR="#298C52">return</FONT>(1);
			}
			save_flags(flags);
			<A HREF="asuscom.c.shtml#byteout">byteout</A>(cs-&gt;hw.teles3.cfg_reg + 4, irqcfg);
			sti();
			<A HREF="hisax.h.shtml#HZDELAY">HZDELAY</A>(HZ / 10 + 1);
			<A HREF="asuscom.c.shtml#byteout">byteout</A>(cs-&gt;hw.teles3.cfg_reg + 4, irqcfg | 1);
			<A HREF="hisax.h.shtml#HZDELAY">HZDELAY</A>(HZ / 10 + 1);
			restore_flags(flags);
		} <FONT COLOR="#298C52">else</FONT> <FONT COLOR="#298C52">if</FONT> (cs-&gt;typ == <A HREF="hisax.h.shtml#ISDN_CTYPE_COMPAQ_ISA">ISDN_CTYPE_COMPAQ_ISA</A>) {
			save_flags(flags);
			<A HREF="asuscom.c.shtml#byteout">byteout</A>(cs-&gt;hw.teles3.cfg_reg, 0xff);
			<A HREF="hisax.h.shtml#HZDELAY">HZDELAY</A>(2);
			<A HREF="asuscom.c.shtml#byteout">byteout</A>(cs-&gt;hw.teles3.cfg_reg, 0x00);
			<A HREF="hisax.h.shtml#HZDELAY">HZDELAY</A>(2);
			restore_flags(flags);
		} <FONT COLOR="#298C52">else</FONT> {
			<FONT COLOR=#0000FF>/* Reset off for 16.3 PnP , thanks to Georg Acher */</FONT>
			save_flags(flags);
			<A HREF="asuscom.c.shtml#byteout">byteout</A>(cs-&gt;hw.teles3.isac + 0x3c, 0);
			<A HREF="hisax.h.shtml#HZDELAY">HZDELAY</A>(2);
			<A HREF="asuscom.c.shtml#byteout">byteout</A>(cs-&gt;hw.teles3.isac + 0x3c, 1);
			<A HREF="hisax.h.shtml#HZDELAY">HZDELAY</A>(2);
			restore_flags(flags);
		}
	}
	<FONT COLOR="#298C52">return</FONT>(0);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">int</FONT>
Teles_card_msg(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, <FONT COLOR="#298C52">int</FONT> mt, <FONT COLOR="#298C52">void</FONT> *arg)
{
	<FONT COLOR="#298C52">switch</FONT> (mt) {
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_RESET">CARD_RESET</A>:
			reset_teles3(cs);
			<FONT COLOR="#298C52">return</FONT>(0);
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_RELEASE">CARD_RELEASE</A>:
			release_io_teles3(cs);
			<FONT COLOR="#298C52">return</FONT>(0);
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_SETIRQ">CARD_SETIRQ</A>:
			<FONT COLOR="#298C52">return</FONT>(request_irq(cs-&gt;irq, &amp;teles3_interrupt,
					<A HREF="hisax.h.shtml#I4L_IRQ_FLAG">I4L_IRQ_FLAG</A>, <FONT COLOR="#FF0000">"HiSax"</FONT>, cs));
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_INIT">CARD_INIT</A>:
			inithscxisac(cs, 3);
			<FONT COLOR="#298C52">return</FONT>(0);
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_TEST">CARD_TEST</A>:
			<FONT COLOR="#298C52">return</FONT>(0);
	}
	<FONT COLOR="#298C52">return</FONT>(0);
}

<A HREF="asuscom.c.shtml#__initfunc">__initfunc</A>(<FONT COLOR="#298C52">int</FONT>
setup_teles3(<FONT COLOR="#298C52">struct</FONT> IsdnCard *card))
{
	u_char val;
	<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs = card-&gt;cs;
	<FONT COLOR="#298C52">char</FONT> tmp[64];

	strcpy(tmp, teles3_revision);
	printk(KERN_INFO <FONT COLOR="#FF0000">"HiSax: Teles IO driver Rev. %s\n"</FONT>, HiSax_getrev(tmp));
	<FONT COLOR="#298C52">if</FONT> ((cs-&gt;typ != <A HREF="hisax.h.shtml#ISDN_CTYPE_16_3">ISDN_CTYPE_16_3</A>) &amp;&amp; (cs-&gt;typ != <A HREF="hisax.h.shtml#ISDN_CTYPE_PNP">ISDN_CTYPE_PNP</A>)
	    &amp;&amp; (cs-&gt;typ != <A HREF="hisax.h.shtml#ISDN_CTYPE_TELESPCMCIA">ISDN_CTYPE_TELESPCMCIA</A>) &amp;&amp; (cs-&gt;typ != <A HREF="hisax.h.shtml#ISDN_CTYPE_COMPAQ_ISA">ISDN_CTYPE_COMPAQ_ISA</A>))
		<FONT COLOR="#298C52">return</FONT> (0);

	<FONT COLOR="#298C52">if</FONT> (cs-&gt;typ == <A HREF="hisax.h.shtml#ISDN_CTYPE_16_3">ISDN_CTYPE_16_3</A>) {
		cs-&gt;hw.teles3.cfg_reg = card-&gt;para[1];
		<FONT COLOR="#298C52">switch</FONT> (cs-&gt;hw.teles3.cfg_reg) {
			<FONT COLOR="#298C52">case</FONT> 0x180:
			<FONT COLOR="#298C52">case</FONT> 0x280:
			<FONT COLOR="#298C52">case</FONT> 0x380:
				cs-&gt;hw.teles3.cfg_reg |= 0xc00;
				<FONT COLOR="#298C52">break</FONT>;
		}
		cs-&gt;hw.teles3.isac = cs-&gt;hw.teles3.cfg_reg - 0x420;
		cs-&gt;hw.teles3.hscx[0] = cs-&gt;hw.teles3.cfg_reg - 0xc20;
		cs-&gt;hw.teles3.hscx[1] = cs-&gt;hw.teles3.cfg_reg - 0x820;
	} <FONT COLOR="#298C52">else</FONT> <FONT COLOR="#298C52">if</FONT> (cs-&gt;typ == <A HREF="hisax.h.shtml#ISDN_CTYPE_TELESPCMCIA">ISDN_CTYPE_TELESPCMCIA</A>) {
		cs-&gt;hw.teles3.cfg_reg = card-&gt;para[1];
		cs-&gt;hw.teles3.hscx[0] = card-&gt;para[1] - 0x20;
		cs-&gt;hw.teles3.hscx[1] = card-&gt;para[1];
		cs-&gt;hw.teles3.isac = card-&gt;para[1] + 0x20;
	} <FONT COLOR="#298C52">else</FONT> <FONT COLOR="#298C52">if</FONT> (cs-&gt;typ == <A HREF="hisax.h.shtml#ISDN_CTYPE_COMPAQ_ISA">ISDN_CTYPE_COMPAQ_ISA</A>) {
		cs-&gt;hw.teles3.cfg_reg = card-&gt;para[3];
		cs-&gt;hw.teles3.isac = card-&gt;para[2] - 32;
		cs-&gt;hw.teles3.hscx[0] = card-&gt;para[1] - 32;
		cs-&gt;hw.teles3.hscx[1] = card-&gt;para[1];
	} <FONT COLOR="#298C52">else</FONT> {	<FONT COLOR=#0000FF>/* PNP */</FONT>
		cs-&gt;hw.teles3.cfg_reg = 0;
		cs-&gt;hw.teles3.isac = card-&gt;para[1] - 32;
		cs-&gt;hw.teles3.hscx[0] = card-&gt;para[2] - 32;
		cs-&gt;hw.teles3.hscx[1] = card-&gt;para[2];
	}
	cs-&gt;irq = card-&gt;para[0];
	cs-&gt;hw.teles3.isacfifo = cs-&gt;hw.teles3.isac + 0x3e;
	cs-&gt;hw.teles3.hscxfifo[0] = cs-&gt;hw.teles3.hscx[0] + 0x3e;
	cs-&gt;hw.teles3.hscxfifo[1] = cs-&gt;hw.teles3.hscx[1] + 0x3e;
	<FONT COLOR="#298C52">if</FONT> (cs-&gt;typ == <A HREF="hisax.h.shtml#ISDN_CTYPE_TELESPCMCIA">ISDN_CTYPE_TELESPCMCIA</A>) {
		<FONT COLOR="#298C52">if</FONT> (check_region((cs-&gt;hw.teles3.cfg_reg), 97)) {
			printk(KERN_WARNING
			       <FONT COLOR="#FF0000">"HiSax: %s ports %x-%x already in use\n"</FONT>,
			       CardType[cs-&gt;typ],
			       cs-&gt;hw.teles3.cfg_reg,
			       cs-&gt;hw.teles3.cfg_reg + 96);
			<FONT COLOR="#298C52">return</FONT> (0);
		} <FONT COLOR="#298C52">else</FONT>
			request_region(cs-&gt;hw.teles3.hscx[0], 97, <FONT COLOR="#FF0000">"HiSax Teles PCMCIA"</FONT>);
	} <FONT COLOR="#298C52">else</FONT> {
		<FONT COLOR="#298C52">if</FONT> (cs-&gt;hw.teles3.cfg_reg) {
			<FONT COLOR="#298C52">if</FONT> (cs-&gt;typ == <A HREF="hisax.h.shtml#ISDN_CTYPE_COMPAQ_ISA">ISDN_CTYPE_COMPAQ_ISA</A>) {
				<FONT COLOR="#298C52">if</FONT> (check_region((cs-&gt;hw.teles3.cfg_reg), 1)) {
					printk(KERN_WARNING
						<FONT COLOR="#FF0000">"HiSax: %s config port %x already in use\n"</FONT>,
						CardType[card-&gt;typ],
						cs-&gt;hw.teles3.cfg_reg);
					<FONT COLOR="#298C52">return</FONT> (0);
				} <FONT COLOR="#298C52">else</FONT>
					request_region(cs-&gt;hw.teles3.cfg_reg, 1, <FONT COLOR="#FF0000">"teles3 cfg"</FONT>);
			} <FONT COLOR="#298C52">else</FONT> {
				<FONT COLOR="#298C52">if</FONT> (check_region((cs-&gt;hw.teles3.cfg_reg), 8)) {
					printk(KERN_WARNING
					       <FONT COLOR="#FF0000">"HiSax: %s config port %x-%x already in use\n"</FONT>,
					       CardType[card-&gt;typ],
					       cs-&gt;hw.teles3.cfg_reg,
						cs-&gt;hw.teles3.cfg_reg + 8);
					<FONT COLOR="#298C52">return</FONT> (0);
				} <FONT COLOR="#298C52">else</FONT>
					request_region(cs-&gt;hw.teles3.cfg_reg, 8, <FONT COLOR="#FF0000">"teles3 cfg"</FONT>);
			}
		}
		<FONT COLOR="#298C52">if</FONT> (check_region((cs-&gt;hw.teles3.isac + 32), 32)) {
			printk(KERN_WARNING
			   <FONT COLOR="#FF0000">"HiSax: %s isac ports %x-%x already in use\n"</FONT>,
			       CardType[cs-&gt;typ],
			       cs-&gt;hw.teles3.isac + 32,
			       cs-&gt;hw.teles3.isac + 64);
			<FONT COLOR="#298C52">if</FONT> (cs-&gt;hw.teles3.cfg_reg)
				<FONT COLOR="#298C52">if</FONT> (cs-&gt;typ == <A HREF="hisax.h.shtml#ISDN_CTYPE_COMPAQ_ISA">ISDN_CTYPE_COMPAQ_ISA</A>) {
					release_region(cs-&gt;hw.teles3.cfg_reg, 1);
				} <FONT COLOR="#298C52">else</FONT> {
					release_region(cs-&gt;hw.teles3.cfg_reg, 8);
				}
			<FONT COLOR="#298C52">return</FONT> (0);
		} <FONT COLOR="#298C52">else</FONT>
			request_region(cs-&gt;hw.teles3.isac + 32, 32, <FONT COLOR="#FF0000">"HiSax isac"</FONT>);
		<FONT COLOR="#298C52">if</FONT> (check_region((cs-&gt;hw.teles3.hscx[0] + 32), 32)) {
			printk(KERN_WARNING
			 <FONT COLOR="#FF0000">"HiSax: %s hscx A ports %x-%x already in use\n"</FONT>,
			       CardType[cs-&gt;typ],
			       cs-&gt;hw.teles3.hscx[0] + 32,
			       cs-&gt;hw.teles3.hscx[0] + 64);
			<FONT COLOR="#298C52">if</FONT> (cs-&gt;hw.teles3.cfg_reg)
				<FONT COLOR="#298C52">if</FONT> (cs-&gt;typ == <A HREF="hisax.h.shtml#ISDN_CTYPE_COMPAQ_ISA">ISDN_CTYPE_COMPAQ_ISA</A>) {
					release_region(cs-&gt;hw.teles3.cfg_reg, 1);
				} <FONT COLOR="#298C52">else</FONT> {
					release_region(cs-&gt;hw.teles3.cfg_reg, 8);
				}
			release_ioregs(cs, 1);
			<FONT COLOR="#298C52">return</FONT> (0);
		} <FONT COLOR="#298C52">else</FONT>
			request_region(cs-&gt;hw.teles3.hscx[0] + 32, 32, <FONT COLOR="#FF0000">"HiSax hscx A"</FONT>);
		<FONT COLOR="#298C52">if</FONT> (check_region((cs-&gt;hw.teles3.hscx[1] + 32), 32)) {
			printk(KERN_WARNING
			 <FONT COLOR="#FF0000">"HiSax: %s hscx B ports %x-%x already in use\n"</FONT>,
			       CardType[cs-&gt;typ],
			       cs-&gt;hw.teles3.hscx[1] + 32,
			       cs-&gt;hw.teles3.hscx[1] + 64);
			<FONT COLOR="#298C52">if</FONT> (cs-&gt;hw.teles3.cfg_reg)
				<FONT COLOR="#298C52">if</FONT> (cs-&gt;typ == <A HREF="hisax.h.shtml#ISDN_CTYPE_COMPAQ_ISA">ISDN_CTYPE_COMPAQ_ISA</A>) {
					release_region(cs-&gt;hw.teles3.cfg_reg, 1);
				} <FONT COLOR="#298C52">else</FONT> {
					release_region(cs-&gt;hw.teles3.cfg_reg, 8);
				}
			release_ioregs(cs, 3);
			<FONT COLOR="#298C52">return</FONT> (0);
		} <FONT COLOR="#298C52">else</FONT>
			request_region(cs-&gt;hw.teles3.hscx[1] + 32, 32, <FONT COLOR="#FF0000">"HiSax hscx B"</FONT>);
	}
	<FONT COLOR="#298C52">if</FONT> ((cs-&gt;hw.teles3.cfg_reg) &amp;&amp; (cs-&gt;typ != <A HREF="hisax.h.shtml#ISDN_CTYPE_COMPAQ_ISA">ISDN_CTYPE_COMPAQ_ISA</A>)) {
		<FONT COLOR="#298C52">if</FONT> ((val = <A HREF="asuscom.c.shtml#bytein">bytein</A>(cs-&gt;hw.teles3.cfg_reg + 0)) != 0x51) {
			printk(KERN_WARNING <FONT COLOR="#FF0000">"Teles: 16.3 Byte at %x is %x\n"</FONT>,
			       cs-&gt;hw.teles3.cfg_reg + 0, val);
			release_io_teles3(cs);
			<FONT COLOR="#298C52">return</FONT> (0);
		}
		<FONT COLOR="#298C52">if</FONT> ((val = <A HREF="asuscom.c.shtml#bytein">bytein</A>(cs-&gt;hw.teles3.cfg_reg + 1)) != 0x93) {
			printk(KERN_WARNING <FONT COLOR="#FF0000">"Teles: 16.3 Byte at %x is %x\n"</FONT>,
			       cs-&gt;hw.teles3.cfg_reg + 1, val);
			release_io_teles3(cs);
			<FONT COLOR="#298C52">return</FONT> (0);
		}
		val = <A HREF="asuscom.c.shtml#bytein">bytein</A>(cs-&gt;hw.teles3.cfg_reg + 2);<FONT COLOR=#0000FF>/* 0x1e=without AB
							 * 0x1f=with AB
							 * 0x1c 16.3 ???
							 * 0x39 16.3 1.1
							 * 0x46 16.3 with AB + Video (Teles-Vision)
							 */</FONT>
		<FONT COLOR="#298C52">if</FONT> (val != 0x46 &amp;&amp; val != 0x39 &amp;&amp; val != 0x1c &amp;&amp; val != 0x1e &amp;&amp; val != 0x1f) {
			printk(KERN_WARNING <FONT COLOR="#FF0000">"Teles: 16.3 Byte at %x is %x\n"</FONT>,
			       cs-&gt;hw.teles3.cfg_reg + 2, val);
			release_io_teles3(cs);
			<FONT COLOR="#298C52">return</FONT> (0);
		}
	}
	printk(KERN_INFO
	       <FONT COLOR="#FF0000">"HiSax: %s config irq:%d isac:0x%X  cfg:0x%X\n"</FONT>,
	       CardType[cs-&gt;typ], cs-&gt;irq,
	       cs-&gt;hw.teles3.isac + 32, cs-&gt;hw.teles3.cfg_reg);
	printk(KERN_INFO
	       <FONT COLOR="#FF0000">"HiSax: hscx A:0x%X  hscx B:0x%X\n"</FONT>,
	       cs-&gt;hw.teles3.hscx[0] + 32, cs-&gt;hw.teles3.hscx[1] + 32);

	<FONT COLOR="#298C52">if</FONT> (reset_teles3(cs)) {
		printk(KERN_WARNING <FONT COLOR="#FF0000">"Teles3: wrong IRQ\n"</FONT>);
		release_io_teles3(cs);
		<FONT COLOR="#298C52">return</FONT> (0);
	}
	cs-&gt;readisac = &amp;<A HREF="asuscom.c.shtml#ReadISAC">ReadISAC</A>;
	cs-&gt;writeisac = &amp;<A HREF="asuscom.c.shtml#WriteISAC">WriteISAC</A>;
	cs-&gt;readisacfifo = &amp;<A HREF="asuscom.c.shtml#ReadISACfifo">ReadISACfifo</A>;
	cs-&gt;writeisacfifo = &amp;<A HREF="asuscom.c.shtml#WriteISACfifo">WriteISACfifo</A>;
	cs-&gt;BC_Read_Reg = &amp;<A HREF="asuscom.c.shtml#ReadHSCX">ReadHSCX</A>;
	cs-&gt;BC_Write_Reg = &amp;<A HREF="asuscom.c.shtml#WriteHSCX">WriteHSCX</A>;
	cs-&gt;BC_Send_Data = &amp;<A HREF="hscx_irq.c.shtml#hscx_fill_fifo">hscx_fill_fifo</A>;
	cs-&gt;cardmsg = &amp;Teles_card_msg;
	<A HREF="isac.c.shtml#ISACVersion">ISACVersion</A>(cs, <FONT COLOR="#FF0000">"Teles3:"</FONT>);
	<FONT COLOR="#298C52">if</FONT> (HscxVersion(cs, <FONT COLOR="#FF0000">"Teles3:"</FONT>)) {
		printk(KERN_WARNING
		       <FONT COLOR="#FF0000">"Teles3: wrong HSCX versions check IO address\n"</FONT>);
		release_io_teles3(cs);
		<FONT COLOR="#298C52">return</FONT> (0);
	}
	<FONT COLOR="#298C52">return</FONT> (1);
}
</BODY>

</HTML>
