<HTML>

<!-- Generated by c2html-1.0, Copyright 1998 by Dave Whittington -->
<HEAD>
<TITLE>teles3c.c</TITLE>
<!--#include virtual="/ssi/js.shtml" -->
<!--#include virtual="/ssi/buttondefs.shtml" -->
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<TABLE WIDTH="100%">
<TR>
<TD ALIGN=LEFT WIDTH="90"><!--#include virtual="/ssi/b_home.shtml" --></TD>
<TD ALIGN=RIGHT WIDTH="90"><!--#include virtual="/ssi/b_index.shtml" --></TD>
</TR>
</TABLE>
<CENTER><H1>teles3c.c</H1></CENTER>

<HR>
<PRE>
<FONT COLOR=#0000FF>/* $Id$

 * teles3c.c     low level stuff for teles 16.3c
 *
 * Author     Karsten Keil (keil@temic-ech.spacenet.de)
 *
 *
 * $Log$
 * Revision 1.2  1998/02/02 13:27:07  keil
 * New
 *
 *
 *
 */</FONT>

<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#__NO_VERSION__">__NO_VERSION__</A>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"hisax.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"hfc_2bds0.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"isdnl1.h"</FONT>

<FONT COLOR="#298C52">extern</FONT> <FONT COLOR="#298C52">const</FONT> <FONT COLOR="#298C52">char</FONT> *CardType[];

<FONT COLOR="#298C52">const</FONT> <FONT COLOR="#298C52">char</FONT> *teles163c_revision = <FONT COLOR="#FF0000">"$Revision$"</FONT>;

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
t163c_interrupt(<FONT COLOR="#298C52">int</FONT> intno, <FONT COLOR="#298C52">void</FONT> *dev_id, <FONT COLOR="#298C52">struct</FONT> pt_regs *regs)
{
	<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs = dev_id;
	u_char val, stat;
	<FONT COLOR="#298C52">char</FONT> tmp[32];

	<FONT COLOR="#298C52">if</FONT> (!cs) {
		printk(KERN_WARNING <FONT COLOR="#FF0000">"teles3c: Spurious interrupt!\n"</FONT>);
		<FONT COLOR="#298C52">return</FONT>;
	}
	<FONT COLOR="#298C52">if</FONT> ((HFCD_ANYINT | HFCD_BUSY_NBUSY) &amp; 
		(stat = cs-&gt;BC_Read_Reg(cs, HFCD_DATA, HFCD_STAT))) {
		val = cs-&gt;BC_Read_Reg(cs, HFCD_DATA, HFCD_INT_S1);
		<FONT COLOR="#298C52">if</FONT> (cs-&gt;debug &amp; <A HREF="isdnl1.h.shtml#L1_DEB_ISAC">L1_DEB_ISAC</A>) {
			sprintf(tmp, <FONT COLOR="#FF0000">"teles3c: stat(%02x) s1(%02x)"</FONT>, stat, val);
			<A HREF="isdnl1.c.shtml#debugl1">debugl1</A>(cs, tmp);
		}
		hfc2bds0_interrupt(cs, val);
	} <FONT COLOR="#298C52">else</FONT> {
		<FONT COLOR="#298C52">if</FONT> (cs-&gt;debug &amp; <A HREF="isdnl1.h.shtml#L1_DEB_ISAC">L1_DEB_ISAC</A>) {
			sprintf(tmp, <FONT COLOR="#FF0000">"teles3c: irq_no_irq stat(%02x)"</FONT>, stat);
			<A HREF="isdnl1.c.shtml#debugl1">debugl1</A>(cs, tmp);
		}
	}
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
t163c_Timer(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs)
{
	cs-&gt;hw.hfcD.timer.expires = jiffies + 75;
	<FONT COLOR=#0000FF>/* WD RESET */</FONT>
<FONT COLOR=#0000FF>/*	WriteReg(cs, HFCD_DATA, HFCD_CTMT, cs-&gt;hw.hfcD.ctmt | 0x80);
	add_timer(&amp;cs-&gt;hw.hfcD.timer);
*/</FONT>
}

<FONT COLOR="#298C52">void</FONT>
release_io_t163c(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs)
{
	release2bds0(cs);
	del_timer(&amp;cs-&gt;hw.hfcD.timer);
	<FONT COLOR="#298C52">if</FONT> (cs-&gt;hw.hfcD.addr)
		release_region(cs-&gt;hw.hfcD.addr, 2);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
reset_t163c(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs)
{
	<FONT COLOR="#298C52">long</FONT> flags;

	printk(KERN_INFO <FONT COLOR="#FF0000">"teles3c: resetting card\n"</FONT>);
	cs-&gt;hw.hfcD.cirm = HFCD_RESET | HFCD_MEM8K;
	cs-&gt;BC_Write_Reg(cs, HFCD_DATA, HFCD_CIRM, cs-&gt;hw.hfcD.cirm);	<FONT COLOR=#0000FF>/* Reset On */</FONT>
	save_flags(flags);
	sti();
	current-&gt;state = TASK_INTERRUPTIBLE;
	current-&gt;timeout = jiffies + 3;
	schedule();
	cs-&gt;hw.hfcD.cirm = HFCD_MEM8K;
	cs-&gt;BC_Write_Reg(cs, HFCD_DATA, HFCD_CIRM, cs-&gt;hw.hfcD.cirm);	<FONT COLOR=#0000FF>/* Reset Off */</FONT>
	current-&gt;state = TASK_INTERRUPTIBLE;
	current-&gt;timeout = jiffies + 1;
	schedule();
	cs-&gt;hw.hfcD.cirm |= HFCD_INTB;
	cs-&gt;BC_Write_Reg(cs, HFCD_DATA, HFCD_CIRM, cs-&gt;hw.hfcD.cirm);	<FONT COLOR=#0000FF>/* INT B */</FONT>
	cs-&gt;BC_Write_Reg(cs, HFCD_DATA, HFCD_CLKDEL, 0x0e);
	cs-&gt;BC_Write_Reg(cs, HFCD_DATA, HFCD_TEST, HFCD_AUTO_AWAKE); <FONT COLOR=#0000FF>/* S/T Auto awake */</FONT>
	cs-&gt;hw.hfcD.ctmt = HFCD_TIM25 | HFCD_AUTO_TIMER;
	cs-&gt;BC_Write_Reg(cs, HFCD_DATA, HFCD_CTMT, cs-&gt;hw.hfcD.ctmt);
	cs-&gt;hw.hfcD.int_m2 = HFCD_IRQ_ENABLE;
	cs-&gt;hw.hfcD.int_m1 = HFCD_INTS_B1TRANS | HFCD_INTS_B2TRANS |
		HFCD_INTS_DTRANS | HFCD_INTS_B1REC | HFCD_INTS_B2REC |
		HFCD_INTS_DREC | HFCD_INTS_L1STATE;
	cs-&gt;BC_Write_Reg(cs, HFCD_DATA, HFCD_INT_M1, cs-&gt;hw.hfcD.int_m1);
	cs-&gt;BC_Write_Reg(cs, HFCD_DATA, HFCD_INT_M2, cs-&gt;hw.hfcD.int_m2);
	cs-&gt;BC_Write_Reg(cs, HFCD_DATA, HFCD_STATES, HFCD_LOAD_STATE | 2); <FONT COLOR=#0000FF>/* HFC ST 2 */</FONT>
	udelay(10);
	cs-&gt;BC_Write_Reg(cs, HFCD_DATA, HFCD_STATES, 2); <FONT COLOR=#0000FF>/* HFC ST 2 */</FONT>
	cs-&gt;hw.hfcD.mst_m = 0;
	cs-&gt;BC_Write_Reg(cs, HFCD_DATA, HFCD_MST_MODE, HFCD_MASTER); <FONT COLOR=#0000FF>/* HFC Master */</FONT>
	cs-&gt;hw.hfcD.sctrl = 0;
	cs-&gt;BC_Write_Reg(cs, HFCD_DATA, HFCD_SCTRL, cs-&gt;hw.hfcD.sctrl);
	restore_flags(flags);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">int</FONT>
t163c_card_msg(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, <FONT COLOR="#298C52">int</FONT> mt, <FONT COLOR="#298C52">void</FONT> *arg)
{
	<FONT COLOR="#298C52">long</FONT> flags;
	<FONT COLOR="#298C52">char</FONT> tmp[32];

	<FONT COLOR="#298C52">if</FONT> (cs-&gt;debug &amp; <A HREF="isdnl1.h.shtml#L1_DEB_ISAC">L1_DEB_ISAC</A>) {
		
		sprintf(tmp, <FONT COLOR="#FF0000">"teles3c: card_msg %x"</FONT>, mt);
		<A HREF="isdnl1.c.shtml#debugl1">debugl1</A>(cs, tmp);
	}
	<FONT COLOR="#298C52">switch</FONT> (mt) {
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_RESET">CARD_RESET</A>:
			reset_t163c(cs);
			<FONT COLOR="#298C52">return</FONT>(0);
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_RELEASE">CARD_RELEASE</A>:
			release_io_t163c(cs);
			<FONT COLOR="#298C52">return</FONT>(0);
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_SETIRQ">CARD_SETIRQ</A>:
			cs-&gt;hw.hfcD.timer.expires = jiffies + 75;
			add_timer(&amp;cs-&gt;hw.hfcD.timer);
			<FONT COLOR="#298C52">return</FONT>(request_irq(cs-&gt;irq, &amp;t163c_interrupt,
					<A HREF="hisax.h.shtml#I4L_IRQ_FLAG">I4L_IRQ_FLAG</A>, <FONT COLOR="#FF0000">"HiSax"</FONT>, cs));
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_INIT">CARD_INIT</A>:
			init2bds0(cs);
			save_flags(flags);
			sti();
			current-&gt;state = TASK_INTERRUPTIBLE;
			current-&gt;timeout = jiffies + (80*HZ)/1000;
			schedule();
			cs-&gt;hw.hfcD.ctmt |= HFCD_TIM800;
			cs-&gt;BC_Write_Reg(cs, HFCD_DATA, HFCD_CTMT, cs-&gt;hw.hfcD.ctmt); 
			cs-&gt;BC_Write_Reg(cs, HFCD_DATA, HFCD_MST_MODE, cs-&gt;hw.hfcD.mst_m);
			restore_flags(flags);
			<FONT COLOR="#298C52">return</FONT>(0);
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_TEST">CARD_TEST</A>:
			<FONT COLOR="#298C52">return</FONT>(0);
	}
	<FONT COLOR="#298C52">return</FONT>(0);
}

<A HREF="asuscom.c.shtml#__initfunc">__initfunc</A>(<FONT COLOR="#298C52">int</FONT>
setup_t163c(<FONT COLOR="#298C52">struct</FONT> IsdnCard *card))
{
	<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs = card-&gt;cs;
	<FONT COLOR="#298C52">char</FONT> tmp[64];

	strcpy(tmp, teles163c_revision);
	printk(KERN_INFO <FONT COLOR="#FF0000">"HiSax: Teles 16.3c driver Rev. %s\n"</FONT>, HiSax_getrev(tmp));
	<FONT COLOR="#298C52">if</FONT> (cs-&gt;typ != <A HREF="hisax.h.shtml#ISDN_CTYPE_TELES3C">ISDN_CTYPE_TELES3C</A>)
		<FONT COLOR="#298C52">return</FONT> (0);
	cs-&gt;debug = 0xff;
	cs-&gt;hw.hfcD.addr = card-&gt;para[1] &amp; 0xfffe;
	cs-&gt;irq = card-&gt;para[0];
	cs-&gt;hw.hfcD.cip = 0;
	cs-&gt;hw.hfcD.int_s1 = 0;
	cs-&gt;hw.hfcD.send = NULL;
	cs-&gt;bcs[0].hw.hfc.send = NULL;
	cs-&gt;bcs[1].hw.hfc.send = NULL;
	cs-&gt;hw.hfcD.bfifosize = 1024 + 512;
	cs-&gt;hw.hfcD.dfifosize = 512;
	cs-&gt;ph_state = 0;
	cs-&gt;hw.hfcD.fifo = 255;
	<FONT COLOR="#298C52">if</FONT> (check_region((cs-&gt;hw.hfcD.addr), 2)) {
		printk(KERN_WARNING
		       <FONT COLOR="#FF0000">"HiSax: %s config port %x-%x already in use\n"</FONT>,
		       CardType[card-&gt;typ],
		       cs-&gt;hw.hfcD.addr,
		       cs-&gt;hw.hfcD.addr + 2);
		<FONT COLOR="#298C52">return</FONT> (0);
	} <FONT COLOR="#298C52">else</FONT> {
		request_region(cs-&gt;hw.hfcD.addr, 2, <FONT COLOR="#FF0000">"teles3c isdn"</FONT>);
	}
	<FONT COLOR=#0000FF>/* Teles 16.3c IO ADR is 0x200 | YY0U (YY Bit 15/14 address) */</FONT>
	outb(0x00, cs-&gt;hw.hfcD.addr);
	outb(0x56, cs-&gt;hw.hfcD.addr | 1);
	printk(KERN_INFO
	       <FONT COLOR="#FF0000">"teles3c: defined at 0x%x IRQ %d HZ %d\n"</FONT>,
	       cs-&gt;hw.hfcD.addr,
	       cs-&gt;irq, HZ);

	set_cs_func(cs);
	cs-&gt;hw.hfcD.timer.function = (<FONT COLOR="#298C52">void</FONT> *) t163c_Timer;
	cs-&gt;hw.hfcD.timer.data = (<FONT COLOR="#298C52">long</FONT>) cs;
	init_timer(&amp;cs-&gt;hw.hfcD.timer);
	reset_t163c(cs);
	cs-&gt;cardmsg = &amp;t163c_card_msg;
	<FONT COLOR="#298C52">return</FONT> (1);
}
</BODY>

</HTML>
