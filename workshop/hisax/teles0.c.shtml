<HTML>

<!-- Generated by c2html-1.0, Copyright 1998 by Dave Whittington -->
<HEAD>
<TITLE>teles0.c</TITLE>
<!--#include virtual="/ssi/js.shtml" -->
<!--#include virtual="/ssi/buttondefs.shtml" -->
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<TABLE WIDTH="100%">
<TR>
<TD ALIGN=LEFT WIDTH="90"><!--#include virtual="/ssi/b_home.shtml" --></TD>
<TD ALIGN=RIGHT WIDTH="90"><!--#include virtual="/ssi/b_index.shtml" --></TD>
</TR>
</TABLE>
<CENTER><H1>teles0.c</H1></CENTER>

<HR>
<PRE>
<FONT COLOR=#0000FF>/* $Id$

 * teles0.c     low level stuff for Teles Memory IO isdn cards
 *              based on the teles driver from Jan den Ouden
 *
 * Author       Karsten Keil (keil@temic-ech.spacenet.de)
 *
 * Thanks to    Jan den Ouden
 *              Fritz Elfert
 *              Beat Doebeli
 *
 * $Log$
 * Revision 2.8  1998/04/15 16:44:28  keil
 * new init code
 *
 * Revision 2.7  1998/03/07 22:57:08  tsbogend
 * made HiSax working on Linux/Alpha
 *
 * Revision 2.6  1998/02/03 23:27:47  keil
 * IRQ 9
 *
 * Revision 2.5  1998/02/02 13:29:47  keil
 * fast io
 *
 * Revision 2.4  1997/11/08 21:35:54  keil
 * new l1 init
 *
 * Revision 2.3  1997/11/06 17:09:31  keil
 * New 2.1 init code
 *
 * Revision 2.2  1997/10/29 18:55:57  keil
 * changes for 2.1.60 (irq2dev_map)
 *
 * Revision 2.1  1997/07/27 21:47:10  keil
 * new interface structures
 *
 * Revision 2.0  1997/06/26 11:02:43  keil
 * New Layer and card interface
 *
 * Revision 1.8  1997/04/13 19:54:04  keil
 * Change in IRQ check delay for SMP
 *
 * Revision 1.7  1997/04/06 22:54:04  keil
 * Using SKB's
 *
 * removed old log info /KKe
 *
 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#__NO_VERSION__">__NO_VERSION__</A>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"hisax.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"isdnl1.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"isac.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"hscx.h"</FONT>

<FONT COLOR="#298C52">extern</FONT> <FONT COLOR="#298C52">const</FONT> <FONT COLOR="#298C52">char</FONT> *CardType[];

<FONT COLOR="#298C52">const</FONT> <FONT COLOR="#298C52">char</FONT> *teles0_revision = <FONT COLOR="#FF0000">"$Revision$"</FONT>;

<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#byteout">byteout</A>(addr,val) outb(val,addr)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#bytein">bytein</A>(addr) inb(addr)

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> u_char
readisac(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, u_char off)
{
	<FONT COLOR="#298C52">return</FONT> readb(adr + ((off &amp; 1) ? 0x2ff : 0x100) + off);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> <FONT COLOR="#298C52">void</FONT>
writeisac(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, u_char off, u_char data)
{
	writeb(data, adr + ((off &amp; 1) ? 0x2ff : 0x100) + off); mb();
}


<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> u_char
readhscx(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, <FONT COLOR="#298C52">int</FONT> hscx, u_char off)
{
	<FONT COLOR="#298C52">return</FONT> readb(adr + (hscx ? 0x1c0 : 0x180) +
		     ((off &amp; 1) ? 0x1ff : 0) + off);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> <FONT COLOR="#298C52">void</FONT>
writehscx(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, <FONT COLOR="#298C52">int</FONT> hscx, u_char off, u_char data)
{
	writeb(data, adr + (hscx ? 0x1c0 : 0x180) +
	       ((off &amp; 1) ? 0x1ff : 0) + off); mb();
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> <FONT COLOR="#298C52">void</FONT>
read_fifo_isac(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	<FONT COLOR="#298C52">register</FONT> <FONT COLOR="#298C52">int</FONT> i;
	<FONT COLOR="#298C52">register</FONT> u_char *ad = (u_char *) ((<FONT COLOR="#298C52">long</FONT>)adr + 0x100);
	<FONT COLOR="#298C52">for</FONT> (i = 0; i &lt; size; i++)
		data[i] = readb(ad);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> <FONT COLOR="#298C52">void</FONT>
write_fifo_isac(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	<FONT COLOR="#298C52">register</FONT> <FONT COLOR="#298C52">int</FONT> i;
	<FONT COLOR="#298C52">register</FONT> u_char *ad = (u_char *) ((<FONT COLOR="#298C52">long</FONT>)adr + 0x100);
	<FONT COLOR="#298C52">for</FONT> (i = 0; i &lt; size; i++) {
		writeb(data[i], ad); mb();
	}
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> <FONT COLOR="#298C52">void</FONT>
read_fifo_hscx(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, <FONT COLOR="#298C52">int</FONT> hscx, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	<FONT COLOR="#298C52">register</FONT> <FONT COLOR="#298C52">int</FONT> i;
	<FONT COLOR="#298C52">register</FONT> u_char *ad = (u_char *) ((<FONT COLOR="#298C52">long</FONT>)adr + (hscx ? 0x1c0 : 0x180));
	<FONT COLOR="#298C52">for</FONT> (i = 0; i &lt; size; i++)
		data[i] = readb(ad);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> <FONT COLOR="#298C52">void</FONT>
write_fifo_hscx(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, <FONT COLOR="#298C52">int</FONT> hscx, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	<FONT COLOR="#298C52">int</FONT> i;
	<FONT COLOR="#298C52">register</FONT> u_char *ad = (u_char *) ((<FONT COLOR="#298C52">long</FONT>)adr + (hscx ? 0x1c0 : 0x180));
	<FONT COLOR="#298C52">for</FONT> (i = 0; i &lt; size; i++) {
		writeb(data[i], ad); mb();
	}
}

<FONT COLOR=#0000FF>/* Interface functions */</FONT>

<FONT COLOR="#298C52">static</FONT> u_char
<A HREF="asuscom.c.shtml#ReadISAC">ReadISAC</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char offset)
{
	<FONT COLOR="#298C52">return</FONT> (readisac(cs-&gt;hw.teles0.membase, offset));
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#WriteISAC">WriteISAC</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char offset, u_char value)
{
	writeisac(cs-&gt;hw.teles0.membase, offset, value);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#ReadISACfifo">ReadISACfifo</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	read_fifo_isac(cs-&gt;hw.teles0.membase, data, size);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#WriteISACfifo">WriteISACfifo</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	write_fifo_isac(cs-&gt;hw.teles0.membase, data, size);
}

<FONT COLOR="#298C52">static</FONT> u_char
<A HREF="asuscom.c.shtml#ReadHSCX">ReadHSCX</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, <FONT COLOR="#298C52">int</FONT> hscx, u_char offset)
{
	<FONT COLOR="#298C52">return</FONT> (readhscx(cs-&gt;hw.teles0.membase, hscx, offset));
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#WriteHSCX">WriteHSCX</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, <FONT COLOR="#298C52">int</FONT> hscx, u_char offset, u_char value)
{
	writehscx(cs-&gt;hw.teles0.membase, hscx, offset, value);
}

<FONT COLOR=#0000FF>/*
 * fast interrupt HSCX stuff goes here
 */</FONT>

<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#READHSCX">READHSCX</A>(cs, nr, reg) readhscx(cs-&gt;hw.teles0.membase, nr, reg)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#WRITEHSCX">WRITEHSCX</A>(cs, nr, reg, data) writehscx(cs-&gt;hw.teles0.membase, nr, reg, data)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#READHSCXFIFO">READHSCXFIFO</A>(cs, nr, ptr, cnt) read_fifo_hscx(cs-&gt;hw.teles0.membase, nr, ptr, cnt)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#WRITEHSCXFIFO">WRITEHSCXFIFO</A>(cs, nr, ptr, cnt) write_fifo_hscx(cs-&gt;hw.teles0.membase, nr, ptr, cnt)

<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"hscx_irq.c"</FONT>

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
teles0_interrupt(<FONT COLOR="#298C52">int</FONT> intno, <FONT COLOR="#298C52">void</FONT> *dev_id, <FONT COLOR="#298C52">struct</FONT> pt_regs *regs)
{
	<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs = dev_id;
	u_char val, stat = 0;
	<FONT COLOR="#298C52">int</FONT> count = 0;

	<FONT COLOR="#298C52">if</FONT> (!cs) {
		printk(KERN_WARNING <FONT COLOR="#FF0000">"Teles0: Spurious interrupt!\n"</FONT>);
		<FONT COLOR="#298C52">return</FONT>;
	}
	val = readhscx(cs-&gt;hw.teles0.membase, 1, <A HREF="hscx.h.shtml#HSCX_ISTA">HSCX_ISTA</A>);
      Start_HSCX:
	<FONT COLOR="#298C52">if</FONT> (val) {
		<A HREF="hscx_irq.c.shtml#hscx_int_main">hscx_int_main</A>(cs, val);
		stat |= 1;
	}
	val = readisac(cs-&gt;hw.teles0.membase, <A HREF="isac.h.shtml#ISAC_ISTA">ISAC_ISTA</A>);
      Start_ISAC:
	<FONT COLOR="#298C52">if</FONT> (val) {
		<A HREF="isac.c.shtml#isac_interrupt">isac_interrupt</A>(cs, val);
		stat |= 2;
	}
	count++;
	val = readhscx(cs-&gt;hw.teles0.membase, 1, <A HREF="hscx.h.shtml#HSCX_ISTA">HSCX_ISTA</A>);
	<FONT COLOR="#298C52">if</FONT> (val &amp;&amp; count &lt; 20) {
		<FONT COLOR="#298C52">if</FONT> (cs-&gt;debug &amp; <A HREF="isdnl1.h.shtml#L1_DEB_HSCX">L1_DEB_HSCX</A>)
			<A HREF="isdnl1.c.shtml#debugl1">debugl1</A>(cs, <FONT COLOR="#FF0000">"HSCX IntStat after IntRoutine"</FONT>);
		<FONT COLOR="#298C52">goto</FONT> Start_HSCX;
	}
	val = readisac(cs-&gt;hw.teles0.membase, <A HREF="isac.h.shtml#ISAC_ISTA">ISAC_ISTA</A>);
	<FONT COLOR="#298C52">if</FONT> (val &amp;&amp; count &lt; 20) {
		<FONT COLOR="#298C52">if</FONT> (cs-&gt;debug &amp; <A HREF="isdnl1.h.shtml#L1_DEB_ISAC">L1_DEB_ISAC</A>)
			<A HREF="isdnl1.c.shtml#debugl1">debugl1</A>(cs, <FONT COLOR="#FF0000">"ISAC IntStat after IntRoutine"</FONT>);
		<FONT COLOR="#298C52">goto</FONT> Start_ISAC;
	}
	<FONT COLOR="#298C52">if</FONT> (stat &amp; 1) {
		writehscx(cs-&gt;hw.teles0.membase, 0, <A HREF="hscx.h.shtml#HSCX_MASK">HSCX_MASK</A>, 0xFF);
		writehscx(cs-&gt;hw.teles0.membase, 1, <A HREF="hscx.h.shtml#HSCX_MASK">HSCX_MASK</A>, 0xFF);
		writehscx(cs-&gt;hw.teles0.membase, 0, <A HREF="hscx.h.shtml#HSCX_MASK">HSCX_MASK</A>, 0x0);
		writehscx(cs-&gt;hw.teles0.membase, 1, <A HREF="hscx.h.shtml#HSCX_MASK">HSCX_MASK</A>, 0x0);
	}
	<FONT COLOR="#298C52">if</FONT> (stat &amp; 2) {
		writeisac(cs-&gt;hw.teles0.membase, <A HREF="isac.h.shtml#ISAC_MASK">ISAC_MASK</A>, 0xFF);
		writeisac(cs-&gt;hw.teles0.membase, <A HREF="isac.h.shtml#ISAC_MASK">ISAC_MASK</A>, 0x0);
	}
}

<FONT COLOR="#298C52">void</FONT>
release_io_teles0(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs)
{
	<FONT COLOR="#298C52">if</FONT> (cs-&gt;hw.teles0.cfg_reg)
		release_region(cs-&gt;hw.teles0.cfg_reg, 8);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">int</FONT>
reset_teles0(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs)
{
	u_char cfval;
	<FONT COLOR="#298C52">long</FONT> flags;

	save_flags(flags);
	sti();
	<FONT COLOR="#298C52">if</FONT> (cs-&gt;hw.teles0.cfg_reg) {
		<FONT COLOR="#298C52">switch</FONT> (cs-&gt;irq) {
			<FONT COLOR="#298C52">case</FONT> 2:
			<FONT COLOR="#298C52">case</FONT> 9:
				cfval = 0x00;
				<FONT COLOR="#298C52">break</FONT>;
			<FONT COLOR="#298C52">case</FONT> 3:
				cfval = 0x02;
				<FONT COLOR="#298C52">break</FONT>;
			<FONT COLOR="#298C52">case</FONT> 4:
				cfval = 0x04;
				<FONT COLOR="#298C52">break</FONT>;
			<FONT COLOR="#298C52">case</FONT> 5:
				cfval = 0x06;
				<FONT COLOR="#298C52">break</FONT>;
			<FONT COLOR="#298C52">case</FONT> 10:
				cfval = 0x08;
				<FONT COLOR="#298C52">break</FONT>;
			<FONT COLOR="#298C52">case</FONT> 11:
				cfval = 0x0A;
				<FONT COLOR="#298C52">break</FONT>;
			<FONT COLOR="#298C52">case</FONT> 12:
				cfval = 0x0C;
				<FONT COLOR="#298C52">break</FONT>;
			<FONT COLOR="#298C52">case</FONT> 15:
				cfval = 0x0E;
				<FONT COLOR="#298C52">break</FONT>;
			<FONT COLOR="#298C52">default</FONT>:
				<FONT COLOR="#298C52">return</FONT>(1);
		}
		cfval |= ((cs-&gt;hw.teles0.membase &gt;&gt; 9) &amp; 0xF0);
		<A HREF="asuscom.c.shtml#byteout">byteout</A>(cs-&gt;hw.teles0.cfg_reg + 4, cfval);
		<A HREF="hisax.h.shtml#HZDELAY">HZDELAY</A>(HZ / 10 + 1);
		<A HREF="asuscom.c.shtml#byteout">byteout</A>(cs-&gt;hw.teles0.cfg_reg + 4, cfval | 1);
		<A HREF="hisax.h.shtml#HZDELAY">HZDELAY</A>(HZ / 10 + 1);
	}
	writeb(0, cs-&gt;hw.teles0.membase + 0x80); mb();
	<A HREF="hisax.h.shtml#HZDELAY">HZDELAY</A>(HZ / 5 + 1);
	writeb(1, cs-&gt;hw.teles0.membase + 0x80); mb();
	<A HREF="hisax.h.shtml#HZDELAY">HZDELAY</A>(HZ / 5 + 1);
	restore_flags(flags);
	<FONT COLOR="#298C52">return</FONT>(0);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">int</FONT>
Teles_card_msg(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, <FONT COLOR="#298C52">int</FONT> mt, <FONT COLOR="#298C52">void</FONT> *arg)
{
	<FONT COLOR="#298C52">switch</FONT> (mt) {
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_RESET">CARD_RESET</A>:
			reset_teles0(cs);
			<FONT COLOR="#298C52">return</FONT>(0);
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_RELEASE">CARD_RELEASE</A>:
			release_io_teles0(cs);
			<FONT COLOR="#298C52">return</FONT>(0);
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_SETIRQ">CARD_SETIRQ</A>:
			<FONT COLOR="#298C52">return</FONT>(request_irq(cs-&gt;irq, &amp;teles0_interrupt,
					<A HREF="hisax.h.shtml#I4L_IRQ_FLAG">I4L_IRQ_FLAG</A>, <FONT COLOR="#FF0000">"HiSax"</FONT>, cs));
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_INIT">CARD_INIT</A>:
			inithscxisac(cs, 3);
			<FONT COLOR="#298C52">return</FONT>(0);
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_TEST">CARD_TEST</A>:
			<FONT COLOR="#298C52">return</FONT>(0);
	}
	<FONT COLOR="#298C52">return</FONT>(0);
}

<A HREF="asuscom.c.shtml#__initfunc">__initfunc</A>(<FONT COLOR="#298C52">int</FONT>
setup_teles0(<FONT COLOR="#298C52">struct</FONT> IsdnCard *card))
{
	u_char val;
	<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs = card-&gt;cs;
	<FONT COLOR="#298C52">char</FONT> tmp[64];

	strcpy(tmp, teles0_revision);
	printk(KERN_INFO <FONT COLOR="#FF0000">"HiSax: Teles 8.0/16.0 driver Rev. %s\n"</FONT>, HiSax_getrev(tmp));
	<FONT COLOR="#298C52">if</FONT> ((cs-&gt;typ != <A HREF="hisax.h.shtml#ISDN_CTYPE_16_0">ISDN_CTYPE_16_0</A>) &amp;&amp; (cs-&gt;typ != <A HREF="hisax.h.shtml#ISDN_CTYPE_8_0">ISDN_CTYPE_8_0</A>))
		<FONT COLOR="#298C52">return</FONT> (0);

	<FONT COLOR="#298C52">if</FONT> (cs-&gt;typ == <A HREF="hisax.h.shtml#ISDN_CTYPE_16_0">ISDN_CTYPE_16_0</A>)
		cs-&gt;hw.teles0.cfg_reg = card-&gt;para[2];
	<FONT COLOR="#298C52">else</FONT>			<FONT COLOR=#0000FF>/* 8.0 */</FONT>
		cs-&gt;hw.teles0.cfg_reg = 0;

	<FONT COLOR="#298C52">if</FONT> (card-&gt;para[1] &lt; 0x10000) {
		card-&gt;para[1] &lt;&lt;= 4;
		printk(KERN_INFO
		   <FONT COLOR="#FF0000">"Teles0: membase configured DOSish, assuming 0x%lx\n"</FONT>,
		       (<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">long</FONT>) card-&gt;para[1]);
	}
	cs-&gt;hw.teles0.membase = card-&gt;para[1];
	cs-&gt;irq = card-&gt;para[0];
	<FONT COLOR="#298C52">if</FONT> (cs-&gt;hw.teles0.cfg_reg) {
		<FONT COLOR="#298C52">if</FONT> (check_region((cs-&gt;hw.teles0.cfg_reg), 8)) {
			printk(KERN_WARNING
			  <FONT COLOR="#FF0000">"HiSax: %s config port %x-%x already in use\n"</FONT>,
			       CardType[card-&gt;typ],
			       cs-&gt;hw.teles0.cfg_reg,
			       cs-&gt;hw.teles0.cfg_reg + 8);
			<FONT COLOR="#298C52">return</FONT> (0);
		} <FONT COLOR="#298C52">else</FONT> {
			request_region(cs-&gt;hw.teles0.cfg_reg, 8, <FONT COLOR="#FF0000">"teles cfg"</FONT>);
		}
	}
	<FONT COLOR="#298C52">if</FONT> (cs-&gt;hw.teles0.cfg_reg) {
		<FONT COLOR="#298C52">if</FONT> ((val = <A HREF="asuscom.c.shtml#bytein">bytein</A>(cs-&gt;hw.teles0.cfg_reg + 0)) != 0x51) {
			printk(KERN_WARNING <FONT COLOR="#FF0000">"Teles0: 16.0 Byte at %x is %x\n"</FONT>,
			       cs-&gt;hw.teles0.cfg_reg + 0, val);
			release_region(cs-&gt;hw.teles0.cfg_reg, 8);
			<FONT COLOR="#298C52">return</FONT> (0);
		}
		<FONT COLOR="#298C52">if</FONT> ((val = <A HREF="asuscom.c.shtml#bytein">bytein</A>(cs-&gt;hw.teles0.cfg_reg + 1)) != 0x93) {
			printk(KERN_WARNING <FONT COLOR="#FF0000">"Teles0: 16.0 Byte at %x is %x\n"</FONT>,
			       cs-&gt;hw.teles0.cfg_reg + 1, val);
			release_region(cs-&gt;hw.teles0.cfg_reg, 8);
			<FONT COLOR="#298C52">return</FONT> (0);
		}
		val = <A HREF="asuscom.c.shtml#bytein">bytein</A>(cs-&gt;hw.teles0.cfg_reg + 2);	<FONT COLOR=#0000FF>/* 0x1e=without AB
								   * 0x1f=with AB
								   * 0x1c 16.3 ???
								 */</FONT>
		<FONT COLOR="#298C52">if</FONT> (val != 0x1e &amp;&amp; val != 0x1f) {
			printk(KERN_WARNING <FONT COLOR="#FF0000">"Teles0: 16.0 Byte at %x is %x\n"</FONT>,
			       cs-&gt;hw.teles0.cfg_reg + 2, val);
			release_region(cs-&gt;hw.teles0.cfg_reg, 8);
			<FONT COLOR="#298C52">return</FONT> (0);
		}
	}
	<FONT COLOR=#0000FF>/* 16.0 and 8.0 designed for IOM1 */</FONT>
	test_and_set_bit(<A HREF="hisax.h.shtml#HW_IOM1">HW_IOM1</A>, &amp;cs-&gt;HW_Flags);
	printk(KERN_INFO
	       <FONT COLOR="#FF0000">"HiSax: %s config irq:%d mem:0x%X cfg:0x%X\n"</FONT>,
	       CardType[cs-&gt;typ], cs-&gt;irq,
	       cs-&gt;hw.teles0.membase, cs-&gt;hw.teles0.cfg_reg);
	<FONT COLOR="#298C52">if</FONT> (reset_teles0(cs)) {
		printk(KERN_WARNING <FONT COLOR="#FF0000">"Teles0: wrong IRQ\n"</FONT>);
		release_io_teles0(cs);
		<FONT COLOR="#298C52">return</FONT> (0);
	}
	cs-&gt;readisac = &amp;<A HREF="asuscom.c.shtml#ReadISAC">ReadISAC</A>;
	cs-&gt;writeisac = &amp;<A HREF="asuscom.c.shtml#WriteISAC">WriteISAC</A>;
	cs-&gt;readisacfifo = &amp;<A HREF="asuscom.c.shtml#ReadISACfifo">ReadISACfifo</A>;
	cs-&gt;writeisacfifo = &amp;<A HREF="asuscom.c.shtml#WriteISACfifo">WriteISACfifo</A>;
	cs-&gt;BC_Read_Reg = &amp;<A HREF="asuscom.c.shtml#ReadHSCX">ReadHSCX</A>;
	cs-&gt;BC_Write_Reg = &amp;<A HREF="asuscom.c.shtml#WriteHSCX">WriteHSCX</A>;
	cs-&gt;BC_Send_Data = &amp;<A HREF="hscx_irq.c.shtml#hscx_fill_fifo">hscx_fill_fifo</A>;
	cs-&gt;cardmsg = &amp;Teles_card_msg;
	<A HREF="isac.c.shtml#ISACVersion">ISACVersion</A>(cs, <FONT COLOR="#FF0000">"Teles0:"</FONT>);
	<FONT COLOR="#298C52">if</FONT> (HscxVersion(cs, <FONT COLOR="#FF0000">"Teles0:"</FONT>)) {
		printk(KERN_WARNING
		 <FONT COLOR="#FF0000">"Teles0: wrong HSCX versions check IO/MEM addresses\n"</FONT>);
		release_io_teles0(cs);
		<FONT COLOR="#298C52">return</FONT> (0);
	}
	<FONT COLOR="#298C52">return</FONT> (1);
}
</BODY>

</HTML>
