<HTML>

<!-- Generated by c2html-1.0, Copyright 1998 by Dave Whittington -->
<HEAD>
<TITLE>ix1_micro.c</TITLE>
<!--#include virtual="/ssi/js.shtml" -->
<!--#include virtual="/ssi/buttondefs.shtml" -->
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<TABLE WIDTH="100%">
<TR>
<TD ALIGN=LEFT WIDTH="90"><!--#include virtual="/ssi/b_home.shtml" --></TD>
<TD ALIGN=RIGHT WIDTH="90"><!--#include virtual="/ssi/b_index.shtml" --></TD>
</TR>
</TABLE>
<CENTER><H1>ix1_micro.c</H1></CENTER>

<HR>
<PRE>
<FONT COLOR=#0000FF>/* $Id$

 * ix1_micro.c  low level stuff for ITK ix1-micro Rev.2 isdn cards
 *              derived from the original file teles3.c from Karsten Keil
 *
 * Copyright (C) 1997 Klaus-Peter Nischke (ITK AG) (for the modifications to
 *                                                  the original file teles.c)
 *
 * Thanks to    Jan den Ouden
 *              Fritz Elfert
 *              Beat Doebeli
 *
 * $Log$
 * Revision 2.7  1998/04/15 16:44:31  keil
 * new init code
 *
 * Revision 2.6  1998/02/11 17:28:09  keil
 * Niccy PnP/PCI support
 *
 * Revision 2.5  1998/02/02 13:29:42  keil
 * fast io
 *
 * Revision 2.4  1997/11/08 21:35:50  keil
 * new l1 init
 *
 * Revision 2.3  1997/11/06 17:09:35  keil
 * New 2.1 init code
 *
 * Revision 2.2  1997/10/29 18:55:51  keil
 * changes for 2.1.60 (irq2dev_map)
 *
 * Revision 2.1  1997/07/27 21:47:09  keil
 * new interface structures
 *
 * Revision 2.0  1997/06/26 11:02:50  keil
 * New Layer and card interface
 *
 * Revision 1.3  1997/04/13 19:54:02  keil
 * Change in IRQ check delay for SMP
 *
 * Revision 1.2  1997/04/06 22:54:21  keil
 * Using SKB's
 *
 * Revision 1.1  1997/01/27 15:43:10  keil
 * first version
 *
 *
 */</FONT>

<FONT COLOR=#0000FF>/*
   For the modification done by the author the following terms and conditions
   apply (GNU PUBLIC LICENSE)


   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.


   You may contact Klaus-Peter Nischke by email: klaus@nischke.do.eunet.de
   or by conventional mail:

   Klaus-Peter Nischke
   Deusener Str. 287
   44369 Dortmund
   Germany
 */</FONT>


<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#__NO_VERSION__">__NO_VERSION__</A>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"hisax.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"isac.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"hscx.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"isdnl1.h"</FONT>

<FONT COLOR="#298C52">extern</FONT> <FONT COLOR="#298C52">const</FONT> <FONT COLOR="#298C52">char</FONT> *CardType[];
<FONT COLOR="#298C52">const</FONT> <FONT COLOR="#298C52">char</FONT> *ix1_revision = <FONT COLOR="#FF0000">"$Revision$"</FONT>;

<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#byteout">byteout</A>(addr,val) outb(val,addr)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#bytein">bytein</A>(addr) inb(addr)

<FONT COLOR=#A521F7>#define</FONT> SPECIAL_PORT_OFFSET 3

<FONT COLOR=#A521F7>#define</FONT> ISAC_COMMAND_OFFSET 2
<FONT COLOR=#A521F7>#define</FONT> ISAC_DATA_OFFSET 0
<FONT COLOR=#A521F7>#define</FONT> HSCX_COMMAND_OFFSET 2
<FONT COLOR=#A521F7>#define</FONT> HSCX_DATA_OFFSET 1

<FONT COLOR=#A521F7>#define</FONT> TIMEOUT 50

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> u_char
<A HREF="asuscom.c.shtml#readreg">readreg</A>(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> ale, <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, u_char off)
{
	<FONT COLOR="#298C52">register</FONT> u_char ret;
	<FONT COLOR="#298C52">long</FONT> flags;

	save_flags(flags);
	cli();
	<A HREF="asuscom.c.shtml#byteout">byteout</A>(ale, off);
	ret = <A HREF="asuscom.c.shtml#bytein">bytein</A>(adr);
	restore_flags(flags);
	<FONT COLOR="#298C52">return</FONT> (ret);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#readfifo">readfifo</A>(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> ale, <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, u_char off, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	<FONT COLOR=#0000FF>/* fifo read without cli because it's allready done  */</FONT>

	<A HREF="asuscom.c.shtml#byteout">byteout</A>(ale, off);
	insb(adr, data, size);
}


<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#writereg">writereg</A>(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> ale, <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, u_char off, u_char data)
{
	<FONT COLOR="#298C52">long</FONT> flags;

	save_flags(flags);
	cli();
	<A HREF="asuscom.c.shtml#byteout">byteout</A>(ale, off);
	<A HREF="asuscom.c.shtml#byteout">byteout</A>(adr, data);
	restore_flags(flags);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">inline</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#writefifo">writefifo</A>(<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> ale, <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> adr, u_char off, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	<FONT COLOR=#0000FF>/* fifo write without cli because it's allready done  */</FONT>
	<A HREF="asuscom.c.shtml#byteout">byteout</A>(ale, off);
	outsb(adr, data, size);
}

<FONT COLOR=#0000FF>/* Interface functions */</FONT>

<FONT COLOR="#298C52">static</FONT> u_char
<A HREF="asuscom.c.shtml#ReadISAC">ReadISAC</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char offset)
{
	<FONT COLOR="#298C52">return</FONT> (<A HREF="asuscom.c.shtml#readreg">readreg</A>(cs-&gt;hw.ix1.isac_ale, cs-&gt;hw.ix1.isac, offset));
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#WriteISAC">WriteISAC</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char offset, u_char value)
{
	<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.ix1.isac_ale, cs-&gt;hw.ix1.isac, offset, value);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#ReadISACfifo">ReadISACfifo</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	<A HREF="asuscom.c.shtml#readfifo">readfifo</A>(cs-&gt;hw.ix1.isac_ale, cs-&gt;hw.ix1.isac, 0, data, size);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#WriteISACfifo">WriteISACfifo</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, u_char * data, <FONT COLOR="#298C52">int</FONT> size)
{
	<A HREF="asuscom.c.shtml#writefifo">writefifo</A>(cs-&gt;hw.ix1.isac_ale, cs-&gt;hw.ix1.isac, 0, data, size);
}

<FONT COLOR="#298C52">static</FONT> u_char
<A HREF="asuscom.c.shtml#ReadHSCX">ReadHSCX</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, <FONT COLOR="#298C52">int</FONT> hscx, u_char offset)
{
	<FONT COLOR="#298C52">return</FONT> (<A HREF="asuscom.c.shtml#readreg">readreg</A>(cs-&gt;hw.ix1.hscx_ale,
			cs-&gt;hw.ix1.hscx, offset + (hscx ? 0x40 : 0)));
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
<A HREF="asuscom.c.shtml#WriteHSCX">WriteHSCX</A>(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, <FONT COLOR="#298C52">int</FONT> hscx, u_char offset, u_char value)
{
	<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.ix1.hscx_ale,
		 cs-&gt;hw.ix1.hscx, offset + (hscx ? 0x40 : 0), value);
}

<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#READHSCX">READHSCX</A>(cs, nr, reg) <A HREF="asuscom.c.shtml#readreg">readreg</A>(cs-&gt;hw.ix1.hscx_ale, \
		cs-&gt;hw.ix1.hscx, reg + (nr ? 0x40 : 0))
<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#WRITEHSCX">WRITEHSCX</A>(cs, nr, reg, data) <A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.ix1.hscx_ale, \
		cs-&gt;hw.ix1.hscx, reg + (nr ? 0x40 : 0), data)

<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#READHSCXFIFO">READHSCXFIFO</A>(cs, nr, ptr, cnt) <A HREF="asuscom.c.shtml#readfifo">readfifo</A>(cs-&gt;hw.ix1.hscx_ale, \
		cs-&gt;hw.ix1.hscx, (nr ? 0x40 : 0), ptr, cnt)

<FONT COLOR=#A521F7>#define</FONT> <A HREF="asuscom.c.shtml#WRITEHSCXFIFO">WRITEHSCXFIFO</A>(cs, nr, ptr, cnt) <A HREF="asuscom.c.shtml#writefifo">writefifo</A>(cs-&gt;hw.ix1.hscx_ale, \
		cs-&gt;hw.ix1.hscx, (nr ? 0x40 : 0), ptr, cnt)

<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"hscx_irq.c"</FONT>

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
ix1micro_interrupt(<FONT COLOR="#298C52">int</FONT> intno, <FONT COLOR="#298C52">void</FONT> *dev_id, <FONT COLOR="#298C52">struct</FONT> pt_regs *regs)
{
	<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs = dev_id;
	u_char val, stat = 0;

	<FONT COLOR="#298C52">if</FONT> (!cs) {
		printk(KERN_WARNING <FONT COLOR="#FF0000">"IX1: Spurious interrupt!\n"</FONT>);
		<FONT COLOR="#298C52">return</FONT>;
	}
	val = <A HREF="asuscom.c.shtml#readreg">readreg</A>(cs-&gt;hw.ix1.hscx_ale, cs-&gt;hw.ix1.hscx, <A HREF="hscx.h.shtml#HSCX_ISTA">HSCX_ISTA</A> + 0x40);
      Start_HSCX:
	<FONT COLOR="#298C52">if</FONT> (val) {
		<A HREF="hscx_irq.c.shtml#hscx_int_main">hscx_int_main</A>(cs, val);
		stat |= 1;
	}
	val = <A HREF="asuscom.c.shtml#readreg">readreg</A>(cs-&gt;hw.ix1.isac_ale, cs-&gt;hw.ix1.isac, <A HREF="isac.h.shtml#ISAC_ISTA">ISAC_ISTA</A>);
      Start_ISAC:
	<FONT COLOR="#298C52">if</FONT> (val) {
		<A HREF="isac.c.shtml#isac_interrupt">isac_interrupt</A>(cs, val);
		stat |= 2;
	}
	val = <A HREF="asuscom.c.shtml#readreg">readreg</A>(cs-&gt;hw.ix1.hscx_ale, cs-&gt;hw.ix1.hscx, <A HREF="hscx.h.shtml#HSCX_ISTA">HSCX_ISTA</A> + 0x40);
	<FONT COLOR="#298C52">if</FONT> (val) {
		<FONT COLOR="#298C52">if</FONT> (cs-&gt;debug &amp; <A HREF="isdnl1.h.shtml#L1_DEB_HSCX">L1_DEB_HSCX</A>)
			<A HREF="isdnl1.c.shtml#debugl1">debugl1</A>(cs, <FONT COLOR="#FF0000">"HSCX IntStat after IntRoutine"</FONT>);
		<FONT COLOR="#298C52">goto</FONT> Start_HSCX;
	}
	val = <A HREF="asuscom.c.shtml#readreg">readreg</A>(cs-&gt;hw.ix1.isac_ale, cs-&gt;hw.ix1.isac, <A HREF="isac.h.shtml#ISAC_ISTA">ISAC_ISTA</A>);
	<FONT COLOR="#298C52">if</FONT> (val) {
		<FONT COLOR="#298C52">if</FONT> (cs-&gt;debug &amp; <A HREF="isdnl1.h.shtml#L1_DEB_ISAC">L1_DEB_ISAC</A>)
			<A HREF="isdnl1.c.shtml#debugl1">debugl1</A>(cs, <FONT COLOR="#FF0000">"ISAC IntStat after IntRoutine"</FONT>);
		<FONT COLOR="#298C52">goto</FONT> Start_ISAC;
	}
	<FONT COLOR="#298C52">if</FONT> (stat &amp; 1) {
		<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.ix1.hscx_ale, cs-&gt;hw.ix1.hscx, <A HREF="hscx.h.shtml#HSCX_MASK">HSCX_MASK</A>, 0xFF);
		<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.ix1.hscx_ale, cs-&gt;hw.ix1.hscx, <A HREF="hscx.h.shtml#HSCX_MASK">HSCX_MASK</A> + 0x40, 0xFF);
		<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.ix1.hscx_ale, cs-&gt;hw.ix1.hscx, <A HREF="hscx.h.shtml#HSCX_MASK">HSCX_MASK</A>, 0);
		<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.ix1.hscx_ale, cs-&gt;hw.ix1.hscx, <A HREF="hscx.h.shtml#HSCX_MASK">HSCX_MASK</A> + 0x40, 0);
	}
	<FONT COLOR="#298C52">if</FONT> (stat &amp; 2) {
		<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.ix1.isac_ale, cs-&gt;hw.ix1.isac, <A HREF="isac.h.shtml#ISAC_MASK">ISAC_MASK</A>, 0xFF);
		<A HREF="asuscom.c.shtml#writereg">writereg</A>(cs-&gt;hw.ix1.isac_ale, cs-&gt;hw.ix1.isac, <A HREF="isac.h.shtml#ISAC_MASK">ISAC_MASK</A>, 0);
	}
}

<FONT COLOR="#298C52">void</FONT>
release_io_ix1micro(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs)
{
	<FONT COLOR="#298C52">if</FONT> (cs-&gt;hw.ix1.cfg_reg)
		release_region(cs-&gt;hw.ix1.cfg_reg, 4);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">void</FONT>
ix1_reset(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs)
{
	<FONT COLOR="#298C52">long</FONT> flags;
	<FONT COLOR="#298C52">int</FONT> cnt;

	<FONT COLOR=#0000FF>/* reset isac */</FONT>
	save_flags(flags);
	cnt = 3 * (HZ / 10) + 1;
	sti();
	<FONT COLOR="#298C52">while</FONT> (cnt--) {
		<A HREF="asuscom.c.shtml#byteout">byteout</A>(cs-&gt;hw.ix1.cfg_reg + SPECIAL_PORT_OFFSET, 1);
		<A HREF="hisax.h.shtml#HZDELAY">HZDELAY</A>(1);	<FONT COLOR=#0000FF>/* wait &gt;=10 ms */</FONT>
	}
	<A HREF="asuscom.c.shtml#byteout">byteout</A>(cs-&gt;hw.ix1.cfg_reg + SPECIAL_PORT_OFFSET, 0);
	restore_flags(flags);
}

<FONT COLOR="#298C52">static</FONT> <FONT COLOR="#298C52">int</FONT>
ix1_card_msg(<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs, <FONT COLOR="#298C52">int</FONT> mt, <FONT COLOR="#298C52">void</FONT> *arg)
{
	<FONT COLOR="#298C52">switch</FONT> (mt) {
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_RESET">CARD_RESET</A>:
			ix1_reset(cs);
			<FONT COLOR="#298C52">return</FONT>(0);
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_RELEASE">CARD_RELEASE</A>:
			release_io_ix1micro(cs);
			<FONT COLOR="#298C52">return</FONT>(0);
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_SETIRQ">CARD_SETIRQ</A>:
			<FONT COLOR="#298C52">return</FONT>(request_irq(cs-&gt;irq, &amp;ix1micro_interrupt,
					<A HREF="hisax.h.shtml#I4L_IRQ_FLAG">I4L_IRQ_FLAG</A>, <FONT COLOR="#FF0000">"HiSax"</FONT>, cs));
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_INIT">CARD_INIT</A>:
			inithscxisac(cs, 3);
			<FONT COLOR="#298C52">return</FONT>(0);
		<FONT COLOR="#298C52">case</FONT> <A HREF="hisax.h.shtml#CARD_TEST">CARD_TEST</A>:
			<FONT COLOR="#298C52">return</FONT>(0);
	}
	<FONT COLOR="#298C52">return</FONT>(0);
}


<A HREF="asuscom.c.shtml#__initfunc">__initfunc</A>(<FONT COLOR="#298C52">int</FONT>
setup_ix1micro(<FONT COLOR="#298C52">struct</FONT> IsdnCard *card))
{
	<FONT COLOR="#298C52">struct</FONT> IsdnCardState *cs = card-&gt;cs;
	<FONT COLOR="#298C52">char</FONT> tmp[64];

	strcpy(tmp, ix1_revision);
	printk(KERN_INFO <FONT COLOR="#FF0000">"HiSax: ITK IX1 driver Rev. %s\n"</FONT>, HiSax_getrev(tmp));
	<FONT COLOR="#298C52">if</FONT> (cs-&gt;typ != <A HREF="hisax.h.shtml#ISDN_CTYPE_IX1MICROR2">ISDN_CTYPE_IX1MICROR2</A>)
		<FONT COLOR="#298C52">return</FONT> (0);

	<FONT COLOR=#0000FF>/* IO-Ports */</FONT>
	cs-&gt;hw.ix1.isac_ale = card-&gt;para[1] + ISAC_COMMAND_OFFSET;
	cs-&gt;hw.ix1.hscx_ale = card-&gt;para[1] + HSCX_COMMAND_OFFSET;
	cs-&gt;hw.ix1.isac = card-&gt;para[1] + ISAC_DATA_OFFSET;
	cs-&gt;hw.ix1.hscx = card-&gt;para[1] + HSCX_DATA_OFFSET;
	cs-&gt;hw.ix1.cfg_reg = card-&gt;para[1];
	cs-&gt;irq = card-&gt;para[0];
	<FONT COLOR="#298C52">if</FONT> (cs-&gt;hw.ix1.cfg_reg) {
		<FONT COLOR="#298C52">if</FONT> (check_region((cs-&gt;hw.ix1.cfg_reg), 4)) {
			printk(KERN_WARNING
			  <FONT COLOR="#FF0000">"HiSax: %s config port %x-%x already in use\n"</FONT>,
			       CardType[card-&gt;typ],
			       cs-&gt;hw.ix1.cfg_reg,
			       cs-&gt;hw.ix1.cfg_reg + 4);
			<FONT COLOR="#298C52">return</FONT> (0);
		} <FONT COLOR="#298C52">else</FONT>
			request_region(cs-&gt;hw.ix1.cfg_reg, 4, <FONT COLOR="#FF0000">"ix1micro cfg"</FONT>);
	}
	printk(KERN_INFO
	       <FONT COLOR="#FF0000">"HiSax: %s config irq:%d io:0x%X\n"</FONT>,
	       CardType[cs-&gt;typ], cs-&gt;irq,
	       cs-&gt;hw.ix1.cfg_reg);
	ix1_reset(cs);
	cs-&gt;readisac = &amp;<A HREF="asuscom.c.shtml#ReadISAC">ReadISAC</A>;
	cs-&gt;writeisac = &amp;<A HREF="asuscom.c.shtml#WriteISAC">WriteISAC</A>;
	cs-&gt;readisacfifo = &amp;<A HREF="asuscom.c.shtml#ReadISACfifo">ReadISACfifo</A>;
	cs-&gt;writeisacfifo = &amp;<A HREF="asuscom.c.shtml#WriteISACfifo">WriteISACfifo</A>;
	cs-&gt;BC_Read_Reg = &amp;<A HREF="asuscom.c.shtml#ReadHSCX">ReadHSCX</A>;
	cs-&gt;BC_Write_Reg = &amp;<A HREF="asuscom.c.shtml#WriteHSCX">WriteHSCX</A>;
	cs-&gt;BC_Send_Data = &amp;<A HREF="hscx_irq.c.shtml#hscx_fill_fifo">hscx_fill_fifo</A>;
	cs-&gt;cardmsg = &amp;ix1_card_msg;
	<A HREF="isac.c.shtml#ISACVersion">ISACVersion</A>(cs, <FONT COLOR="#FF0000">"ix1-Micro:"</FONT>);
	<FONT COLOR="#298C52">if</FONT> (HscxVersion(cs, <FONT COLOR="#FF0000">"ix1-Micro:"</FONT>)) {
		printk(KERN_WARNING
		    <FONT COLOR="#FF0000">"ix1-Micro: wrong HSCX versions check IO address\n"</FONT>);
		release_io_ix1micro(cs);
		<FONT COLOR="#298C52">return</FONT> (0);
	}
	<FONT COLOR="#298C52">return</FONT> (1);
}
</BODY>

</HTML>
