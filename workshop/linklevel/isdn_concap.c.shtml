<HTML>

<!-- Generated by c2html-1.0, Copyright 1998 by Dave Whittington -->
<HEAD>
<TITLE>isdn_concap.c</TITLE>
<!--#include virtual="/ssi/js.shtml" -->
<!--#include virtual="/ssi/buttondefs.shtml" -->
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<TABLE WIDTH="100%">
<TR>
<TD ALIGN=LEFT WIDTH="90"><!--#include virtual="/ssi/b_home.shtml" --></TD>
<TD ALIGN=RIGHT WIDTH="90"><!--#include virtual="/ssi/b_index.shtml" --></TD>
</TR>
</TABLE>
<CENTER><H1>isdn_concap.c</H1></CENTER>

<HR>
<PRE>
<FONT COLOR=#0000FF>/* $Id$
 
 * Stuff to support the concap_proto by isdn4linux. isdn4linux - specific
 * stuff goes here. Stuff that depends only on the concap protocol goes to
 * another -- protocol specific -- source file.
 *
 * $Log$
 * Revision 1.3  1998/05/26 22:39:22  he
 * sync'ed with 2.1.102 where appropriate (CAPABILITY changes)
 * concap typo
 * cleared dev.tbusy in isdn_net BCONN status callback
 *
 * Revision 1.2  1998/01/31 22:49:21  keil
 * correct comments
 *
 * Revision 1.1  1998/01/31 22:27:57  keil
 * New files from Henner Eisen for X.25 support
 *
 */</FONT>


<FONT COLOR=#A521F7>#include</FONT> &lt;linux/isdn.h&gt;
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"isdn_x25iface.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"isdn_net.h"</FONT>
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/concap.h&gt;
<FONT COLOR=#A521F7>#include</FONT> <FONT COLOR="#FF0000">"isdn_concap.h"</FONT>

<FONT COLOR=#0000FF>/* The declaration of this (or a plublic variant thereof) should really go
   in linux/isdn.h. But we really need it here (and isdn_ppp, like us, also
   refers to that private function currently owned by isdn_net.c) */</FONT>
<FONT COLOR="#298C52">extern</FONT> <FONT COLOR="#298C52">int</FONT> <A HREF="isdn_net.c.shtml#isdn_net_force_dial_lp">isdn_net_force_dial_lp</A>(isdn_net_local *);


<FONT COLOR=#0000FF>/* The following set of device service operations are for encapsulation
   protocols that require for reliable datalink semantics. That means:

   - before any data is to be submitted the connection must explicitly
     be set up.
   - after the successful set up of the connection is signalled the
     connection is considered to be reliably up.

   Auto-dialing ist not compatible with this requirements. Thus, auto-dialing 
   is completely bypassed.

   It might be possible to implement a (non standardized) datalink protocol
   that provides a reliable data link service while using some auto dialing
   mechanism. Such a protocol would need an auxiliary channel (i.e. user-user-
   signaling on the D-channel) while the B-channel is down.
   */</FONT>


<FONT COLOR="#298C52">int</FONT> <A HREF="#isdn_concap_dl_data_req">isdn_concap_dl_data_req</A>(<FONT COLOR="#298C52">struct</FONT> concap_proto *concap, <FONT COLOR="#298C52">struct</FONT> sk_buff *skb)
{
	<FONT COLOR="#298C52">int</FONT> tmp;
	<FONT COLOR="#298C52">struct</FONT> device *ndev = concap -&gt; net_dev;
	isdn_net_local *lp = (isdn_net_local *) ndev-&gt;priv;

	<A HREF="isdn_x25iface.h.shtml#IX25DEBUG">IX25DEBUG</A>( <FONT COLOR="#FF0000">"isdn_concap_dl_data_req: %s \n"</FONT>, concap-&gt;net_dev-&gt;<A HREF="isdn_common.c.shtml#name">name</A>);
	lp-&gt;huptimer = 0;
	tmp=<A HREF="isdn_net.c.shtml#isdn_net_send_skb">isdn_net_send_skb</A>(ndev, lp, skb);
	<A HREF="isdn_x25iface.h.shtml#IX25DEBUG">IX25DEBUG</A>( <FONT COLOR="#FF0000">"isdn_concap_dl_data_req: %s : isdn_net_send_skb returned %d\n"</FONT>, concap -&gt; net_dev -&gt; <A HREF="isdn_common.c.shtml#name">name</A>, tmp);
	<FONT COLOR="#298C52">return</FONT> tmp;
}


<FONT COLOR="#298C52">int</FONT> <A HREF="#isdn_concap_dl_connect_req">isdn_concap_dl_connect_req</A>(<FONT COLOR="#298C52">struct</FONT> concap_proto *concap)
{
	<FONT COLOR="#298C52">struct</FONT> device *ndev = concap -&gt; net_dev;
	isdn_net_local *lp = (isdn_net_local *) ndev-&gt;priv;
	<FONT COLOR="#298C52">int</FONT> ret;
	<A HREF="isdn_x25iface.h.shtml#IX25DEBUG">IX25DEBUG</A>( <FONT COLOR="#FF0000">"isdn_concap_dl_connect_req: %s \n"</FONT>, ndev -&gt; <A HREF="isdn_common.c.shtml#name">name</A>);

	<FONT COLOR=#0000FF>/* dial ... */</FONT>
	ret = <A HREF="isdn_net.c.shtml#isdn_net_force_dial_lp">isdn_net_force_dial_lp</A>( lp );
	<FONT COLOR="#298C52">if</FONT> ( ret ) <A HREF="isdn_x25iface.h.shtml#IX25DEBUG">IX25DEBUG</A>(<FONT COLOR="#FF0000">"dialing failed\n"</FONT>);
	<FONT COLOR="#298C52">return</FONT> 0;
}

<FONT COLOR="#298C52">int</FONT> <A HREF="#isdn_concap_dl_disconn_req">isdn_concap_dl_disconn_req</A>(<FONT COLOR="#298C52">struct</FONT> concap_proto *concap)
{
	<A HREF="isdn_x25iface.h.shtml#IX25DEBUG">IX25DEBUG</A>( <FONT COLOR="#FF0000">"isdn_concap_dl_disconn_req: %s \n"</FONT>, concap -&gt; net_dev -&gt; <A HREF="isdn_common.c.shtml#name">name</A>);

	<A HREF="isdn_net.c.shtml#isdn_net_hangup">isdn_net_hangup</A>( concap -&gt; net_dev );
	<FONT COLOR="#298C52">return</FONT> 0;
}

<FONT COLOR="#298C52">struct</FONT> concap_device_ops isdn_concap_reliable_dl_dops = {
	&amp;<A HREF="#isdn_concap_dl_data_req">isdn_concap_dl_data_req</A>,
	&amp;<A HREF="#isdn_concap_dl_connect_req">isdn_concap_dl_connect_req</A>,
	&amp;<A HREF="#isdn_concap_dl_disconn_req">isdn_concap_dl_disconn_req</A>
};

<FONT COLOR="#298C52">struct</FONT> concap_device_ops isdn_concap_demand_dial_dops = {
	NULL, <FONT COLOR=#0000FF>/* set this first entry to something like &amp;isdn_net_start_xmit,
		 but the entry part of the current isdn_net_start_xmit must be
		 separated first. */</FONT>
	<FONT COLOR=#0000FF>/* no connection control for demand dial semantics */</FONT>
	NULL,
	NULL,
};

<FONT COLOR=#0000FF>/* The following should better go into a dedicated source file such that
   this sourcefile does not need to include any protocol specific header
   files. For now:
   */</FONT>
<FONT COLOR="#298C52">struct</FONT> concap_proto * <A HREF="#isdn_concap_new">isdn_concap_new</A>( <FONT COLOR="#298C52">int</FONT> encap )
{
	<FONT COLOR="#298C52">switch</FONT> ( encap ) {
	<FONT COLOR="#298C52">case</FONT> <A HREF="../includes/isdn.h.shtml#ISDN_NET_ENCAP_X25IFACE">ISDN_NET_ENCAP_X25IFACE</A>:
		<FONT COLOR="#298C52">return</FONT> <A HREF="isdn_x25iface.c.shtml#isdn_x25iface_proto_new">isdn_x25iface_proto_new</A>();
	}
	<FONT COLOR="#298C52">return</FONT> NULL;
}
</BODY>

</HTML>
