<HTML>

<!-- Generated by c2html-1.0, Copyright 1998 by Dave Whittington -->
<HEAD>
<TITLE>isdn.h</TITLE>
<!--#include virtual="/ssi/js.shtml" -->
<!--#include virtual="/ssi/buttondefs.shtml" -->
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<TABLE WIDTH="100%">
<TR>
<TD ALIGN=LEFT WIDTH="90"><!--#include virtual="/ssi/b_home.shtml" --></TD>
<TD ALIGN=RIGHT WIDTH="90"><!--#include virtual="/ssi/b_up.shtml" --></TD>
</TR>
</TABLE>
<CENTER><H1>isdn.h</H1></CENTER>

<HR>
<PRE>
<FONT COLOR=#0000FF>/* $Id$
 *
 * Main header for the Linux ISDN subsystem (linklevel).
 *
 * Copyright 1994,95,96 by Fritz Elfert (fritz@wuemaus.franken.de)
 * Copyright 1995,96    by Thinking Objects Software GmbH Wuerzburg
 * Copyright 1995,96    by Michael Hipp (Michael.Hipp@student.uni-tuebingen.de)
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. 
 *
 * $Log$
 * Revision 1.55  1998/06/26 15:13:17  fritz
 * Added handling of STAT_ICALL with incomplete CPN.
 * Added AT&amp;L for ttyI emulator.
 * Added more locking stuff in tty_write.
 *
 * Revision 1.54  1998/06/18 23:32:01  fritz
 * Replaced cli()/restore_flags() in isdn_tty_write() by locking.
 * Removed direct-senddown feature in isdn_tty_write because it will
 * never succeed with locking and is useless anyway.
 *
 * Revision 1.53  1998/06/17 19:51:51  he
 * merged with 2.1.10[34] (cosmetics and udelay() -&gt; mdelay())
 * brute force fix to avoid Ugh's in isdn_tty_write()
 * cleaned up some dead code
 *
 * Revision 1.52  1998/06/12 11:42:18  detabc
 * cleanup abc
 *
 * Revision 1.51  1998/06/02 12:10:30  detabc
 * wegen einer einstweiliger verfuegung gegen DW ist zur zeit
 * die abc-extension bis zur klaerung der rechtslage nicht verfuegbar
 *
 * Revision 1.50  1998/05/05 23:11:51  detabc
 * add Item to stop icmp-unreach (max. 6 times of dialwait delay)
 *
 * Revision 1.49  1998/05/03 17:45:00  detabc
 * Add Item to send icmp-host-unreach to all packets
 *
 * Revision 1.48  1998/04/26 19:58:14  detabc
 * include the new abc-extension-items from 2.0.xx kernels
 * remove some unused code
 *
 * Revision 1.47  1998/04/21 18:00:25  detabc
 * Add items for secure-callback (abc-extension only)
 *
 * Revision 1.46  1998/04/14 16:28:59  he
 * Fixed user space access with interrupts off and remaining
 * copy_{to,from}_user() -&gt; -EFAULT return codes
 *
 * Revision 1.45  1998/03/24 16:33:12  hipp
 * More CCP changes. BSD compression now "works" on a local loopback link.
 * Moved some isdn_ppp stuff from isdn.h to isdn_ppp.h
 *
 * Revision 1.44  1998/03/22 18:50:56  hipp
 * Added BSD Compression for syncPPP .. UNTESTED at the moment
 *
 * Revision 1.43  1998/03/09 17:46:44  he
 * merged in 2.1.89 changes
 *
 * Revision 1.42  1998/03/08 13:53:46  detabc
 * add ABC-variables in structur isdn_devt
 *
 * Revision 1.41  1998/03/08 13:14:37  detabc
 * abc-extension support for kernels &gt; 2.1.x
 * first try (sorry experimental)
 *
 * Revision 1.40  1998/03/08 01:08:29  fritz
 * Increased NET_DV because of TIMRU
 *
 * Revision 1.39  1998/03/07 22:42:49  fritz
 * Starting generic module support (Nothing usable yet).
 *
 * Revision 1.38  1998/03/07 18:21:29  cal
 * Dynamic Timeout-Rule-Handling vs. 971110 included
 *
 * Revision 1.37  1998/02/22 19:45:24  fritz
 * Some changes regarding V.110
 *
 * Revision 1.36  1998/02/20 17:35:55  fritz
 * Added V.110 stuff.
 *
 * Revision 1.35  1998/01/31 22:14:14  keil
 * changes for 2.1.82
 *
 * Revision 1.34  1997/10/09 21:28:11  fritz
 * New HL&lt;-&gt;LL interface:
 *   New BSENT callback with nr. of bytes included.
 *   Sending without ACK.
 *   New L1 error status (not yet in use).
 *   Cleaned up obsolete structures.
 * Implemented Cisco-SLARP.
 * Changed local net-interface data to be dynamically allocated.
 * Removed old 2.0 compatibility stuff.
 *
 * Revision 1.33  1997/08/21 14:44:22  fritz
 * Moved triggercps to end of struct for backwards-compatibility.
 *
 * Revision 1.32  1997/08/21 09:49:46  fritz
 * Increased NET_DV
 *
 * Revision 1.31  1997/06/22 11:57:07  fritz
 * Added ability to adjust slave triggerlevel.
 *
 * Revision 1.30  1997/06/17 13:07:23  hipp
 * compression changes , MP changes
 *
 * Revision 1.29  1997/05/27 15:18:02  fritz
 * Added changes for recent 2.1.x kernels:
 *   changed return type of isdn_close
 *   queue_task_* -&gt; queue_task
 *   clear/set_bit -&gt; test_and_... where apropriate.
 *   changed type of hard_header_cache parameter.
 *
 * Revision 1.28  1997/03/07 01:33:01  fritz
 * Added proper ifdef's for CONFIG_ISDN_AUDIO
 *
 * Revision 1.27  1997/03/05 21:11:49  fritz
 * Minor fixes.
 *
 * Revision 1.26  1997/02/28 02:37:53  fritz
 * Added some comments.
 *
 * Revision 1.25  1997/02/23 16:54:23  hipp
 * some initial changes for future PPP compresion
 *
 * Revision 1.24  1997/02/18 09:42:45  fritz
 * Bugfix: Increased ISDN_MODEM_ANZREG.
 * Increased TTY_DV.
 *
 * Revision 1.23  1997/02/10 22:07:13  fritz
 * Added 2 modem registers for numbering plan and screening info.
 *
 * Revision 1.22  1997/02/03 23:42:08  fritz
 * Added ISDN_TIMER_RINGING
 * Misc. changes for Kernel 2.1.X compatibility
 *
 * Revision 1.21  1997/01/17 01:19:10  fritz
 * Applied chargeint patch.
 *
 * Revision 1.20  1997/01/17 00:41:19  fritz
 * Increased TTY_DV.
 *
 * Revision 1.19  1997/01/14 01:41:07  fritz
 * Added ATI2 related variables.
 * Added variables for audio support in skbuffs.
 *
 * Revision 1.18  1996/11/06 17:37:50  keil
 * more changes for 2.1.X
 *
 * Revision 1.17  1996/09/07 12:53:57  hipp
 * moved a few isdn_ppp.c specific defines to drives/isdn/isdn_ppp.h
 *
 * Revision 1.16  1996/08/12 16:20:56  hipp
 * renamed ppp_minor to ppp_slot
 *
 * Revision 1.15  1996/06/15 14:56:57  fritz
 * Added version signatures for data structures used
 * by userlevel programs.
 *
 * Revision 1.14  1996/06/06 21:24:23  fritz
 * Started adding support for suspend/resume.
 *
 * Revision 1.13  1996/06/05 02:18:20  fritz
 * Added DTMF decoding stuff.
 *
 * Revision 1.12  1996/06/03 19:55:08  fritz
 * Fixed typos.
 *
 * Revision 1.11  1996/05/31 01:37:47  fritz
 * Minor changes, due to changes in isdn_tty.c
 *
 * Revision 1.10  1996/05/18 01:37:18  fritz
 * Added spelling corrections and some minor changes
 * to stay in sync with kernel.
 *
 * Revision 1.9  1996/05/17 03:58:20  fritz
 * Added flags for DLE handling.
 *
 * Revision 1.8  1996/05/11 21:49:55  fritz
 * Removed queue management variables.
 * Changed queue management to use sk_buffs.
 *
 * Revision 1.7  1996/05/07 09:10:06  fritz
 * Reorganized tty-related structs.
 *
 * Revision 1.6  1996/05/06 11:38:27  hipp
 * minor change in ippp struct
 *
 * Revision 1.5  1996/04/30 11:03:16  fritz
 * Added Michael's ippp-bind patch.
 *
 * Revision 1.4  1996/04/29 23:00:02  fritz
 * Added variables for voice-support.
 *
 * Revision 1.3  1996/04/20 16:54:58  fritz
 * Increased maximum number of channels.
 * Added some flags for isdn_net to handle callback more reliable.
 * Fixed delay-definitions to be more accurate.
 * Misc. typos
 *
 * Revision 1.2  1996/02/11 02:10:02  fritz
 * Changed IOCTL-names
 * Added rx_netdev, st_netdev, first_skb, org_hcb, and org_hcu to
 * Netdevice-local struct.
 *
 * Revision 1.1  1996/01/10 20:55:07  fritz
 * Initial revision
 *
 */</FONT>

<FONT COLOR=#A521F7>#ifndef</FONT> <A HREF="#isdn_h">isdn_h</A>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="isdn_h">isdn_h</A>

<FONT COLOR=#A521F7>#include</FONT> &lt;linux/ioctl.h&gt;

<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TTY_MAJOR">ISDN_TTY_MAJOR</A>    43
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TTYAUX_MAJOR">ISDN_TTYAUX_MAJOR</A> 44
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_MAJOR">ISDN_MAJOR</A>        45

<FONT COLOR=#0000FF>/* The minor-devicenumbers for Channel 0 and 1 are used as arguments for
 * physical Channel-Mapping, so they MUST NOT be changed without changing
 * the correspondent code in isdn.c
 */</FONT>

<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_MAX_DRIVERS">ISDN_MAX_DRIVERS</A>    32
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>   64
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_MINOR_B">ISDN_MINOR_B</A>        0
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_MINOR_BMAX">ISDN_MINOR_BMAX</A>     (<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>-1)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_MINOR_CTRL">ISDN_MINOR_CTRL</A>     <A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_MINOR_CTRLMAX">ISDN_MINOR_CTRLMAX</A>  (2*<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>-1)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_MINOR_PPP">ISDN_MINOR_PPP</A>      (2*<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_MINOR_PPPMAX">ISDN_MINOR_PPPMAX</A>   (3*<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>-1)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_MINOR_STATUS">ISDN_MINOR_STATUS</A>   255

<FONT COLOR=#0000FF>/* New ioctl-codes */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETAIF">IIOCNETAIF</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,1)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETDIF">IIOCNETDIF</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,2)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETSCF">IIOCNETSCF</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,3)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETGCF">IIOCNETGCF</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,4)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETANM">IIOCNETANM</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,5)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETDNM">IIOCNETDNM</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,6)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETGNM">IIOCNETGNM</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,7)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCGETSET">IIOCGETSET</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,8)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCSETSET">IIOCSETSET</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,9)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCSETVER">IIOCSETVER</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,10)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETHUP">IIOCNETHUP</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,11)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCSETGST">IIOCSETGST</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,12)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCSETBRJ">IIOCSETBRJ</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,13)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCSIGPRF">IIOCSIGPRF</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,14)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCGETPRF">IIOCGETPRF</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,15)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCSETPRF">IIOCSETPRF</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,16)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCGETMAP">IIOCGETMAP</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,17)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCSETMAP">IIOCSETMAP</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,18)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETASL">IIOCNETASL</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,19)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETDIL">IIOCNETDIL</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,20)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCGETCPS">IIOCGETCPS</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,21)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCGETDVR">IIOCGETDVR</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,22)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETARU">IIOCNETARU</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,23)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETDRU">IIOCNETDRU</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,24)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETGRU">IIOCNETGRU</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,25)

<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETBUD">IIOCNETBUD</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,26)

<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETALN">IIOCNETALN</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,32)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCNETDLN">IIOCNETDLN</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,33)

<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCDBGVAR">IIOCDBGVAR</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,127)

<FONT COLOR=#A521F7>#define</FONT> <A NAME="IIOCDRVCTL">IIOCDRVCTL</A>  _IO(<FONT COLOR="#FF0000">'I'</FONT>,128)

<FONT COLOR=#0000FF>/* Packet encapsulations for net-interfaces */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_ENCAP_ETHER">ISDN_NET_ENCAP_ETHER</A>      0
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_ENCAP_RAWIP">ISDN_NET_ENCAP_RAWIP</A>      1
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_ENCAP_IPTYP">ISDN_NET_ENCAP_IPTYP</A>      2
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_ENCAP_CISCOHDLC">ISDN_NET_ENCAP_CISCOHDLC</A>  3 <FONT COLOR=#0000FF>/* Without SLARP and keepalive */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_ENCAP_SYNCPPP">ISDN_NET_ENCAP_SYNCPPP</A>    4
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_ENCAP_UIHDLC">ISDN_NET_ENCAP_UIHDLC</A>     5
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_ENCAP_CISCOHDLCK">ISDN_NET_ENCAP_CISCOHDLCK</A> 6 <FONT COLOR=#0000FF>/* With SLARP and keepalive    */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_ENCAP_X25IFACE">ISDN_NET_ENCAP_X25IFACE</A>   7 <FONT COLOR=#0000FF>/* Documentation/networking/x25-iface.txt*/</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_ENCAP_MAX_ENCAP">ISDN_NET_ENCAP_MAX_ENCAP</A>  <A HREF="#ISDN_NET_ENCAP_X25IFACE">ISDN_NET_ENCAP_X25IFACE</A>
<FONT COLOR=#0000FF>/* Facility which currently uses an ISDN-channel */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_USAGE_NONE">ISDN_USAGE_NONE</A>       0
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_USAGE_RAW">ISDN_USAGE_RAW</A>        1
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_USAGE_MODEM">ISDN_USAGE_MODEM</A>      2
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_USAGE_NET">ISDN_USAGE_NET</A>        3
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_USAGE_VOICE">ISDN_USAGE_VOICE</A>      4
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_USAGE_FAX">ISDN_USAGE_FAX</A>        5
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_USAGE_MASK">ISDN_USAGE_MASK</A>       7 <FONT COLOR=#0000FF>/* Mask to get plain usage */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_USAGE_EXCLUSIVE">ISDN_USAGE_EXCLUSIVE</A> 64 <FONT COLOR=#0000FF>/* This bit is set, if channel is exclusive */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_USAGE_OUTGOING">ISDN_USAGE_OUTGOING</A> 128 <FONT COLOR=#0000FF>/* This bit is set, if channel is outgoing  */</FONT>

<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_MODEM_ANZREG">ISDN_MODEM_ANZREG</A>    23        <FONT COLOR=#0000FF>/* Number of Modem-Registers        */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_MSNLEN">ISDN_MSNLEN</A>          20
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_LMSNLEN">ISDN_LMSNLEN</A>         255 <FONT COLOR=#0000FF>/* Length of tty's Listen-MSN string */</FONT>

<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> {
  <FONT COLOR="#298C52">char</FONT> drvid[25];
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">long</FONT> arg;
} <A NAME="isdn_ioctl_struct">isdn_ioctl_struct</A>;

<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> {
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">long</FONT> isdndev;
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">long</FONT> atmodem[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>];
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">long</FONT> info[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>];
} <A NAME="debugvar_addr">debugvar_addr</A>;

<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> {
  <FONT COLOR="#298C52">char</FONT> name[10];
  <FONT COLOR="#298C52">char</FONT> phone[<A HREF="#ISDN_MSNLEN">ISDN_MSNLEN</A>];
  <FONT COLOR="#298C52">int</FONT>  outgoing;
} <A NAME="isdn_net_ioctl_phone">isdn_net_ioctl_phone</A>;

<FONT COLOR=#A521F7>#define</FONT> <A NAME="NET_DV">NET_DV</A> 0x05 <FONT COLOR=#0000FF>/* Data version for net_cfg       */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="TTY_DV">TTY_DV</A> 0x05 <FONT COLOR=#0000FF>/* Data version for iprofd etc.   */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="INF_DV">INF_DV</A> 0x01 <FONT COLOR=#0000FF>/* Data version for /dev/isdninfo */</FONT>

<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> {
  <FONT COLOR="#298C52">char</FONT> name[10];     <FONT COLOR=#0000FF>/* Name of interface                     */</FONT>
  <FONT COLOR="#298C52">char</FONT> master[10];   <FONT COLOR=#0000FF>/* Name of Master for Bundling           */</FONT>
  <FONT COLOR="#298C52">char</FONT> slave[10];    <FONT COLOR=#0000FF>/* Name of Slave for Bundling            */</FONT>
  <FONT COLOR="#298C52">char</FONT> eaz[256];     <FONT COLOR=#0000FF>/* EAZ/MSN                               */</FONT>
  <FONT COLOR="#298C52">char</FONT> drvid[25];    <FONT COLOR=#0000FF>/* DriverId for Bindings                 */</FONT>
  <FONT COLOR="#298C52">int</FONT>  onhtime;      <FONT COLOR=#0000FF>/* Hangup-Timeout                        */</FONT>
  <FONT COLOR="#298C52">int</FONT>  charge;       <FONT COLOR=#0000FF>/* Charge-Units                          */</FONT>
  <FONT COLOR="#298C52">int</FONT>  l2_proto;     <FONT COLOR=#0000FF>/* Layer-2 protocol                      */</FONT>
  <FONT COLOR="#298C52">int</FONT>  l3_proto;     <FONT COLOR=#0000FF>/* Layer-3 protocol                      */</FONT>
  <FONT COLOR="#298C52">int</FONT>  p_encap;      <FONT COLOR=#0000FF>/* Encapsulation                         */</FONT>
  <FONT COLOR="#298C52">int</FONT>  exclusive;    <FONT COLOR=#0000FF>/* Channel, if bound exclusive           */</FONT>
  <FONT COLOR="#298C52">int</FONT>  dialmax;      <FONT COLOR=#0000FF>/* Dial Retry-Counter                    */</FONT>
  <FONT COLOR="#298C52">int</FONT>  slavedelay;   <FONT COLOR=#0000FF>/* Delay until slave starts up           */</FONT>
  <FONT COLOR="#298C52">int</FONT>  cbdelay;      <FONT COLOR=#0000FF>/* Delay before Callback                 */</FONT>
  <FONT COLOR="#298C52">int</FONT>  chargehup;    <FONT COLOR=#0000FF>/* Flag: Charge-Hangup                   */</FONT>
  <FONT COLOR="#298C52">int</FONT>  ihup;         <FONT COLOR=#0000FF>/* Flag: Hangup-Timeout on incoming line */</FONT>
  <FONT COLOR="#298C52">int</FONT>  secure;       <FONT COLOR=#0000FF>/* Flag: Secure                          */</FONT>
  <FONT COLOR="#298C52">int</FONT>  callback;     <FONT COLOR=#0000FF>/* Flag: Callback                        */</FONT>
  <FONT COLOR="#298C52">int</FONT>  cbhup;        <FONT COLOR=#0000FF>/* Flag: Reject Call before Callback     */</FONT>
  <FONT COLOR="#298C52">int</FONT>  pppbind;      <FONT COLOR=#0000FF>/* ippp device for bindings              */</FONT>
  <FONT COLOR="#298C52">int</FONT>  chargeint;    <FONT COLOR=#0000FF>/* Use fixed charge interval length      */</FONT>
  <FONT COLOR="#298C52">int</FONT>  triggercps;   <FONT COLOR=#0000FF>/* BogoCPS needed for triggering slave   */</FONT>
  <FONT COLOR="#298C52">int</FONT>  dialtimeout;  <FONT COLOR=#0000FF>/* Dial-Timeout                          */</FONT>
  <FONT COLOR="#298C52">int</FONT>  dialwait;     <FONT COLOR=#0000FF>/* Time to wait after failed dial        */</FONT>
  <FONT COLOR="#298C52">int</FONT>  stopped;      <FONT COLOR=#0000FF>/* Flag: Stopped                         */</FONT>
} <A NAME="isdn_net_ioctl_cfg">isdn_net_ioctl_cfg</A>;

<FONT COLOR=#A521F7>#ifdef</FONT> __KERNEL__

<FONT COLOR=#A521F7>#ifndef</FONT> STANDALONE
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/config.h&gt;
<FONT COLOR=#A521F7>#endif</FONT>
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/errno.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/fs.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/major.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;<FONT COLOR="#298C52">asm</FONT>/segment.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;<FONT COLOR="#298C52">asm</FONT>/io.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/kernel.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/signal.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/malloc.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/timer.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/wait.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/tty.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/tty_flip.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/serial_reg.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/fcntl.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/types.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/interrupt.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/ip.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/in.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/netdevice.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/etherdevice.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/skbuff.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/tcp.h&gt;

<FONT COLOR=#A521F7>#ifdef</FONT> CONFIG_ISDN_PPP

<FONT COLOR=#A521F7>#ifdef</FONT> CONFIG_ISDN_PPP_VJ
<FONT COLOR=#A521F7>#  include</FONT> &lt;net/slhc_vj.h&gt;
<FONT COLOR=#A521F7>#endif</FONT>

<FONT COLOR=#A521F7>#include</FONT> &lt;linux/ppp_defs.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/if_ppp.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/if_pppvar.h&gt;

<FONT COLOR=#A521F7>#include</FONT> &lt;linux/isdn_ppp.h&gt;
<FONT COLOR=#A521F7>#endif</FONT>

<FONT COLOR=#A521F7>#ifdef</FONT> CONFIG_ISDN_X25
<FONT COLOR=#A521F7>#  include</FONT> &lt;linux/concap.h&gt;
<FONT COLOR=#A521F7>#endif</FONT>

<FONT COLOR=#A521F7>#include</FONT> &lt;linux/isdnif.h&gt;


<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_DRVIOCTL_MASK">ISDN_DRVIOCTL_MASK</A>       0x7f  <FONT COLOR=#0000FF>/* Mask for Device-ioctl */</FONT>

<FONT COLOR=#0000FF>/* Until now unused */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERVICE_VOICE">ISDN_SERVICE_VOICE</A> 1
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERVICE_AB">ISDN_SERVICE_AB</A>    1&lt;&lt;1 
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERVICE_X21">ISDN_SERVICE_X21</A>   1&lt;&lt;2
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERVICE_G4">ISDN_SERVICE_G4</A>    1&lt;&lt;3
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERVICE_BTX">ISDN_SERVICE_BTX</A>   1&lt;&lt;4
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERVICE_DFUE">ISDN_SERVICE_DFUE</A>  1&lt;&lt;5
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERVICE_X25">ISDN_SERVICE_X25</A>   1&lt;&lt;6
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERVICE_TTX">ISDN_SERVICE_TTX</A>   1&lt;&lt;7
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERVICE_MIXED">ISDN_SERVICE_MIXED</A> 1&lt;&lt;8
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERVICE_FW">ISDN_SERVICE_FW</A>    1&lt;&lt;9
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERVICE_GTEL">ISDN_SERVICE_GTEL</A>  1&lt;&lt;10
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERVICE_BTXN">ISDN_SERVICE_BTXN</A>  1&lt;&lt;11
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERVICE_BTEL">ISDN_SERVICE_BTEL</A>  1&lt;&lt;12

<FONT COLOR=#0000FF>/* Macros checking plain usage */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A HREF="#USG_NONE">USG_NONE</A>(x)         ((x &amp; <A HREF="#ISDN_USAGE_MASK">ISDN_USAGE_MASK</A>)==<A HREF="#ISDN_USAGE_NONE">ISDN_USAGE_NONE</A>)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="#USG_RAW">USG_RAW</A>(x)          ((x &amp; <A HREF="#ISDN_USAGE_MASK">ISDN_USAGE_MASK</A>)==<A HREF="#ISDN_USAGE_RAW">ISDN_USAGE_RAW</A>)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="#USG_MODEM">USG_MODEM</A>(x)        ((x &amp; <A HREF="#ISDN_USAGE_MASK">ISDN_USAGE_MASK</A>)==<A HREF="#ISDN_USAGE_MODEM">ISDN_USAGE_MODEM</A>)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="#USG_VOICE">USG_VOICE</A>(x)        ((x &amp; <A HREF="#ISDN_USAGE_MASK">ISDN_USAGE_MASK</A>)==<A HREF="#ISDN_USAGE_VOICE">ISDN_USAGE_VOICE</A>)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="#USG_NET">USG_NET</A>(x)          ((x &amp; <A HREF="#ISDN_USAGE_MASK">ISDN_USAGE_MASK</A>)==<A HREF="#ISDN_USAGE_NET">ISDN_USAGE_NET</A>)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="#USG_OUTGOING">USG_OUTGOING</A>(x)     ((x &amp; <A HREF="#ISDN_USAGE_OUTGOING">ISDN_USAGE_OUTGOING</A>)==<A HREF="#ISDN_USAGE_OUTGOING">ISDN_USAGE_OUTGOING</A>)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="#USG_MODEMORVOICE">USG_MODEMORVOICE</A>(x) (((x &amp; <A HREF="#ISDN_USAGE_MASK">ISDN_USAGE_MASK</A>)==<A HREF="#ISDN_USAGE_MODEM">ISDN_USAGE_MODEM</A>) || \
                             ((x &amp; <A HREF="#ISDN_USAGE_MASK">ISDN_USAGE_MASK</A>)==<A HREF="#ISDN_USAGE_VOICE">ISDN_USAGE_VOICE</A>)     )

<FONT COLOR=#0000FF>/* Timer-delays and scheduling-flags */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_RES">ISDN_TIMER_RES</A>         3                         <FONT COLOR=#0000FF>/* Main Timer-Resolution   */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_02SEC">ISDN_TIMER_02SEC</A>       (HZ/(<A HREF="#ISDN_TIMER_RES">ISDN_TIMER_RES</A>+1)/5) <FONT COLOR=#0000FF>/* Slow-Timer1 .2 sec      */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_1SEC">ISDN_TIMER_1SEC</A>        (HZ/(<A HREF="#ISDN_TIMER_RES">ISDN_TIMER_RES</A>+1))   <FONT COLOR=#0000FF>/* Slow-Timer2 1 sec       */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_RINGING">ISDN_TIMER_RINGING</A>     5 <FONT COLOR=#0000FF>/* tty RINGs = ISDN_TIMER_1SEC * this factor       */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_KEEPINT">ISDN_TIMER_KEEPINT</A>    10 <FONT COLOR=#0000FF>/* Cisco-Keepalive = ISDN_TIMER_1SEC * this factor */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_MODEMREAD">ISDN_TIMER_MODEMREAD</A>   1
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_MODEMPLUS">ISDN_TIMER_MODEMPLUS</A>   2
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_MODEMRING">ISDN_TIMER_MODEMRING</A>   4
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_MODEMXMIT">ISDN_TIMER_MODEMXMIT</A>   8
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_NETDIAL">ISDN_TIMER_NETDIAL</A>    16 
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_NETHANGUP">ISDN_TIMER_NETHANGUP</A>  32
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_IPPP">ISDN_TIMER_IPPP</A>       64 
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_KEEPALIVE">ISDN_TIMER_KEEPALIVE</A> 128 <FONT COLOR=#0000FF>/* Cisco-Keepalive */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_FAST">ISDN_TIMER_FAST</A>      (<A HREF="#ISDN_TIMER_MODEMREAD">ISDN_TIMER_MODEMREAD</A> | <A HREF="#ISDN_TIMER_MODEMPLUS">ISDN_TIMER_MODEMPLUS</A> | \
                              <A HREF="#ISDN_TIMER_MODEMXMIT">ISDN_TIMER_MODEMXMIT</A>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_SLOW">ISDN_TIMER_SLOW</A>      (<A HREF="#ISDN_TIMER_MODEMRING">ISDN_TIMER_MODEMRING</A> | <A HREF="#ISDN_TIMER_NETHANGUP">ISDN_TIMER_NETHANGUP</A> | \
                              <A HREF="#ISDN_TIMER_NETDIAL">ISDN_TIMER_NETDIAL</A> | <A HREF="#ISDN_TIMER_KEEPALIVE">ISDN_TIMER_KEEPALIVE</A>)

<FONT COLOR=#0000FF>/* Timeout-Values for isdn_net_dial() */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_DTIMEOUT10">ISDN_TIMER_DTIMEOUT10</A> (10*HZ/(<A HREF="#ISDN_TIMER_02SEC">ISDN_TIMER_02SEC</A>*(<A HREF="#ISDN_TIMER_RES">ISDN_TIMER_RES</A>+1)))
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_TIMER_DTIMEOUT15">ISDN_TIMER_DTIMEOUT15</A> (15*HZ/(<A HREF="#ISDN_TIMER_02SEC">ISDN_TIMER_02SEC</A>*(<A HREF="#ISDN_TIMER_RES">ISDN_TIMER_RES</A>+1)))

<FONT COLOR=#0000FF>/* GLOBAL_FLAGS */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_GLOBAL_STOPPED">ISDN_GLOBAL_STOPPED</A> 1

<FONT COLOR=#0000FF>/*=================== Start of ip-over-ISDN stuff =========================*/</FONT>

<FONT COLOR=#0000FF>/* Feature- and status-flags for a net-interface */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_CONNECTED">ISDN_NET_CONNECTED</A>  0x01       <FONT COLOR=#0000FF>/* Bound to ISDN-Channel             */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_SECURE">ISDN_NET_SECURE</A>     0x02       <FONT COLOR=#0000FF>/* Accept calls from phonelist only  */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_CALLBACK">ISDN_NET_CALLBACK</A>   0x04       <FONT COLOR=#0000FF>/* activate callback                 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_CBHUP">ISDN_NET_CBHUP</A>      0x08       <FONT COLOR=#0000FF>/* hangup before callback            */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_CBOUT">ISDN_NET_CBOUT</A>      0x10       <FONT COLOR=#0000FF>/* remote machine does callback      */</FONT>
<FONT COLOR=#A521F7>#if</FONT> 0
<FONT COLOR=#0000FF>/* Unused??? */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_CLONE">ISDN_NET_CLONE</A>      0x08       <FONT COLOR=#0000FF>/* clone a tmp interface when called */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_TMP">ISDN_NET_TMP</A>        0x10       <FONT COLOR=#0000FF>/* tmp interface until getting an IP */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_DYNAMIC">ISDN_NET_DYNAMIC</A>    0x20       <FONT COLOR=#0000FF>/* this link is dynamically allocated */</FONT>
<FONT COLOR=#A521F7>#endif</FONT>

<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_STOPPED">ISDN_NET_STOPPED</A>    0x40       <FONT COLOR=#0000FF>/* this interface is stopped         */</FONT>

<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_NET_MAGIC">ISDN_NET_MAGIC</A>      0x49344C02 <FONT COLOR=#0000FF>/* for paranoia-checking             */</FONT>

<FONT COLOR=#0000FF>/* Phone-list-element */</FONT>
<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> {
  <FONT COLOR="#298C52">void</FONT> *next;
  <FONT COLOR="#298C52">char</FONT> num[<A HREF="#ISDN_MSNLEN">ISDN_MSNLEN</A>];
} <A NAME="isdn_net_phone">isdn_net_phone</A>;

<FONT COLOR=#A521F7>#ifdef</FONT> CONFIG_ISDN_TIMEOUT_RULES
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/isdn_timru.h&gt;

<FONT COLOR="#298C52">struct</FONT> isdn_timeout_rules {
	<A HREF="isdn_timru.h.shtml#isdn_timeout_rule">isdn_timeout_rule</A>	*timru[<A HREF="isdn_timru.h.shtml#ISDN_TIMRU_NUM_CHECK">ISDN_TIMRU_NUM_CHECK</A>][<A HREF="isdn_timru.h.shtml#ISDN_TIMRU_NUM_PROTFAM">ISDN_TIMRU_NUM_PROTFAM</A>];
	<FONT COLOR="#298C52">int</FONT>			defaults[<A HREF="isdn_timru.h.shtml#ISDN_TIMRU_NUM_CHECK">ISDN_TIMRU_NUM_CHECK</A>];
};
<FONT COLOR=#A521F7>#endif</FONT>

<FONT COLOR=#A521F7>#ifdef</FONT> CONFIG_ISDN_BUDGET
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/<A HREF="#isdn_budget">isdn_budget</A>.h&gt;

<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> {
	<FONT COLOR="#298C52">int</FONT>		amount,			<FONT COLOR=#0000FF>/* usable amount */</FONT>
			used,			<FONT COLOR=#0000FF>/* used so far */</FONT>
			period,			<FONT COLOR=#0000FF>/* length of period */</FONT>
			notified;		<FONT COLOR=#0000FF>/* flag: notified user about low budget */</FONT>
	time_t	period_started,	<FONT COLOR=#0000FF>/* when did the current period start? */</FONT>
			last_check;		<FONT COLOR=#0000FF>/* last time checked */</FONT>
}	<A NAME="isdn_budget">isdn_budget</A>;
<FONT COLOR=#A521F7>#endif</FONT>

<FONT COLOR=#0000FF>/*
   Principles when extending structures for generic encapsulation protocol
   ("concap") support:
   - Stuff which is hardware specific (here i4l-specific) goes in 
     the netdev -&gt; local structure (here: isdn_net_local)
   - Stuff which is encapsulation protocol specific goes in the structure
     which holds the linux device structure (here: isdn_net_device)
*/</FONT>

<FONT COLOR=#0000FF>/* Local interface-data */</FONT>
<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> <A NAME="isdn_net_local_s">isdn_net_local_s</A> {
  ulong                  magic;
  <FONT COLOR="#298C52">char</FONT>                   name[10];     <FONT COLOR=#0000FF>/* Name of device                   */</FONT>
  <FONT COLOR="#298C52">struct</FONT> enet_statistics stats;        <FONT COLOR=#0000FF>/* Ethernet Statistics              */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    isdn_device;  <FONT COLOR=#0000FF>/* Index to isdn-device             */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    isdn_channel; <FONT COLOR=#0000FF>/* Index to isdn-channel            */</FONT>
  <FONT COLOR="#298C52">int</FONT>			 ppp_slot;     <FONT COLOR=#0000FF>/* PPPD device slot number          */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    pre_device;   <FONT COLOR=#0000FF>/* Preselected isdn-device          */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    pre_channel;  <FONT COLOR=#0000FF>/* Preselected isdn-channel         */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    exclusive;    <FONT COLOR=#0000FF>/* If non-zero idx to reserved chan.*/</FONT>
  <FONT COLOR="#298C52">int</FONT>                    flags;        <FONT COLOR=#0000FF>/* Connection-flags                 */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    dialretry;    <FONT COLOR=#0000FF>/* Counter for Dialout-retries      */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    dialmax;      <FONT COLOR=#0000FF>/* Max. Number of Dial-retries      */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    cbdelay;      <FONT COLOR=#0000FF>/* Delay before Callback starts     */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    dtimer;       <FONT COLOR=#0000FF>/* Timeout-counter for dialing      */</FONT>
  <FONT COLOR="#298C52">char</FONT>                   msn[<A HREF="#ISDN_MSNLEN">ISDN_MSNLEN</A>]; <FONT COLOR=#0000FF>/* MSNs/EAZs for this interface */</FONT>
  u_char                 cbhup;        <FONT COLOR=#0000FF>/* Flag: Reject Call before Callback*/</FONT>
  u_char                 dialstate;    <FONT COLOR=#0000FF>/* State for dialing                */</FONT>
  u_char                 p_encap;      <FONT COLOR=#0000FF>/* Packet encapsulation             */</FONT>
                                       <FONT COLOR=#0000FF>/*   0 = Ethernet over ISDN         */</FONT>
				       <FONT COLOR=#0000FF>/*   1 = RAW-IP                     */</FONT>
                                       <FONT COLOR=#0000FF>/*   2 = IP with type field         */</FONT>
  u_char                 l2_proto;     <FONT COLOR=#0000FF>/* Layer-2-protocol                 */</FONT>
				       <FONT COLOR=#0000FF>/* See ISDN_PROTO_L2..-constants in */</FONT>
                                       <FONT COLOR=#0000FF>/* isdnif.h                         */</FONT>
                                       <FONT COLOR=#0000FF>/*   0 = X75/LAPB with I-Frames     */</FONT>
				       <FONT COLOR=#0000FF>/*   1 = X75/LAPB with UI-Frames    */</FONT>
				       <FONT COLOR=#0000FF>/*   2 = X75/LAPB with BUI-Frames   */</FONT>
				       <FONT COLOR=#0000FF>/*   3 = HDLC                       */</FONT>
  u_char                 l3_proto;     <FONT COLOR=#0000FF>/* Layer-3-protocol                 */</FONT>
				       <FONT COLOR=#0000FF>/* See ISDN_PROTO_L3..-constants in */</FONT>
                                       <FONT COLOR=#0000FF>/* isdnif.h                         */</FONT>
                                       <FONT COLOR=#0000FF>/*   0 = Transparent                */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    huptimer;     <FONT COLOR=#0000FF>/* Timeout-counter for auto-hangup  */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    charge;       <FONT COLOR=#0000FF>/* Counter for charging units       */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    chargetime;   <FONT COLOR=#0000FF>/* Timer for Charging info          */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    hupflags;     <FONT COLOR=#0000FF>/* Flags for charge-unit-hangup:    */</FONT>
				       <FONT COLOR=#0000FF>/* bit0: chargeint is invalid       */</FONT>
				       <FONT COLOR=#0000FF>/* bit1: Getting charge-interval    */</FONT>
                                       <FONT COLOR=#0000FF>/* bit2: Do charge-unit-hangup      */</FONT>
                                       <FONT COLOR=#0000FF>/* bit3: Do hangup even on incoming */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    outgoing;     <FONT COLOR=#0000FF>/* Flag: outgoing call              */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    onhtime;      <FONT COLOR=#0000FF>/* Time to keep link up             */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    chargeint;    <FONT COLOR=#0000FF>/* Interval between charge-infos    */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    onum;         <FONT COLOR=#0000FF>/* Flag: at least 1 outgoing number */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    cps;          <FONT COLOR=#0000FF>/* current speed of this interface  */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    transcount;   <FONT COLOR=#0000FF>/* byte-counter for cps-calculation */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    sqfull;       <FONT COLOR=#0000FF>/* Flag: netdev-queue overloaded    */</FONT>
  ulong                  sqfull_stamp; <FONT COLOR=#0000FF>/* Start-Time of overload           */</FONT>
  ulong                  slavedelay;   <FONT COLOR=#0000FF>/* Dynamic bundling delaytime       */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    triggercps;   <FONT COLOR=#0000FF>/* BogoCPS needed for trigger slave */</FONT>
  <FONT COLOR="#298C52">struct</FONT> device          *srobin;      <FONT COLOR=#0000FF>/* Ptr to Master device for slaves  */</FONT>
  <A HREF="#isdn_net_phone">isdn_net_phone</A>         *phone[2];    <FONT COLOR=#0000FF>/* List of remote-phonenumbers      */</FONT>
				       <FONT COLOR=#0000FF>/* phone[0] = Incoming Numbers      */</FONT>
				       <FONT COLOR=#0000FF>/* phone[1] = Outgoing Numbers      */</FONT>
  <A HREF="#isdn_net_phone">isdn_net_phone</A>         *dial;        <FONT COLOR=#0000FF>/* Pointer to dialed number         */</FONT>
  <FONT COLOR="#298C52">struct</FONT> device          *master;      <FONT COLOR=#0000FF>/* Ptr to Master device for slaves  */</FONT>
  <FONT COLOR="#298C52">struct</FONT> device          *slave;       <FONT COLOR=#0000FF>/* Ptr to Slave device for masters  */</FONT>
  <FONT COLOR="#298C52">struct</FONT> <A HREF="#isdn_net_local_s">isdn_net_local_s</A> *next;       <FONT COLOR=#0000FF>/* Ptr to next link in bundle       */</FONT>
  <FONT COLOR="#298C52">struct</FONT> <A HREF="#isdn_net_local_s">isdn_net_local_s</A> *last;       <FONT COLOR=#0000FF>/* Ptr to last link in bundle       */</FONT>
  <FONT COLOR="#298C52">struct</FONT> <A HREF="#isdn_net_dev_s">isdn_net_dev_s</A>  *netdev;      <FONT COLOR=#0000FF>/* Ptr to netdev                    */</FONT>
  <FONT COLOR="#298C52">struct</FONT> sk_buff         *first_skb;   <FONT COLOR=#0000FF>/* Ptr to skb that triggers dialing */</FONT>
  <FONT COLOR="#298C52">struct</FONT> sk_buff         *sav_skb;     <FONT COLOR=#0000FF>/* Ptr to skb, rejected by LL-driver*/</FONT>
                                       <FONT COLOR=#0000FF>/* Ptr to orig. hard_header_cache   */</FONT>
  <FONT COLOR="#298C52">int</FONT>                    (*org_hhc)(
				    <FONT COLOR="#298C52">struct</FONT> neighbour *neigh,
				    <FONT COLOR="#298C52">struct</FONT> hh_cache *hh);
                                       <FONT COLOR=#0000FF>/* Ptr to orig. header_cache_update */</FONT>
  <FONT COLOR="#298C52">void</FONT>                   (*org_hcu)(<FONT COLOR="#298C52">struct</FONT> hh_cache *,
				    <FONT COLOR="#298C52">struct</FONT> device *,
                                    <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> *);
  <FONT COLOR="#298C52">int</FONT>  pppbind;                        <FONT COLOR=#0000FF>/* ippp device for bindings         */</FONT>
  <FONT COLOR="#298C52">int</FONT>					dialtimeout;	<FONT COLOR=#0000FF>/* How long shall we try on dialing? (jiffies) */</FONT>
  <FONT COLOR="#298C52">int</FONT>					dialwait;		<FONT COLOR=#0000FF>/* How long shall we wait after failed attempt? (jiffies) */</FONT>
  ulong					dialstarted;	<FONT COLOR=#0000FF>/* jiffies of first dialing-attempt */</FONT>
  ulong					dialwait_timer;	<FONT COLOR=#0000FF>/* jiffies of earliest next dialing-attempt */</FONT>
  <FONT COLOR="#298C52">int</FONT>					huptimeout;		<FONT COLOR=#0000FF>/* How long will the connection be up? (seconds) */</FONT>
<FONT COLOR=#A521F7>#ifdef</FONT> CONFIG_ISDN_TIMEOUT_RULES
  <FONT COLOR="#298C52">struct</FONT> isdn_timeout_rules	*timeout_rules;
<FONT COLOR=#A521F7>#endif</FONT>
<FONT COLOR=#A521F7>#ifdef</FONT> CONFIG_ISDN_BUDGET
  <A HREF="#isdn_budget">isdn_budget</A>	budget [<A HREF="isdn_budget.h.shtml#ISDN_BUDGET_NUM_BUDGET">ISDN_BUDGET_NUM_BUDGET</A>];
<FONT COLOR=#A521F7>#endif</FONT>
<FONT COLOR=#A521F7>#ifdef</FONT> CONFIG_ISDN_X25
  <FONT COLOR="#298C52">struct</FONT> concap_device_ops *dops;      <FONT COLOR=#0000FF>/* callbacks used by encapsulator   */</FONT>
<FONT COLOR=#A521F7>#endif</FONT>
  <FONT COLOR="#298C52">int</FONT>  cisco_loop;                     <FONT COLOR=#0000FF>/* Loop counter for Cisco-SLARP     */</FONT>
  ulong cisco_myseq;                   <FONT COLOR=#0000FF>/* Local keepalive seq. for Cisco   */</FONT>
  ulong cisco_yourseq;                 <FONT COLOR=#0000FF>/* Remote keepalive seq. for Cisco  */</FONT>
} isdn_net_local;

<FONT COLOR=#0000FF>/* the interface itself */</FONT>
<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> <A NAME="isdn_net_dev_s">isdn_net_dev_s</A> {
  isdn_net_local *local;
  isdn_net_local *queue;
  <FONT COLOR="#298C52">void</FONT>           *next;                <FONT COLOR=#0000FF>/* Pointer to next isdn-interface   */</FONT>
  <FONT COLOR="#298C52">struct</FONT> device   dev;	       <FONT COLOR=#0000FF>/* interface to upper levels        */</FONT>
<FONT COLOR=#A521F7>#ifdef</FONT> CONFIG_ISDN_PPP
  <FONT COLOR="#298C52">struct</FONT> mpqueue *mp_last; 
  <FONT COLOR="#298C52">struct</FONT> ippp_bundle ib;
<FONT COLOR=#A521F7>#endif</FONT>
<FONT COLOR=#A521F7>#ifdef</FONT> CONFIG_ISDN_X25
  <FONT COLOR="#298C52">struct</FONT> concap_proto  *cprot; <FONT COLOR=#0000FF>/* connection oriented encapsulation protocol */</FONT>
<FONT COLOR=#A521F7>#endif</FONT>

} <A NAME="isdn_net_dev">isdn_net_dev</A>;

<FONT COLOR=#0000FF>/*===================== End of ip-over-ISDN stuff ===========================*/</FONT>

<FONT COLOR=#0000FF>/*======================= Start of ISDN-tty stuff ===========================*/</FONT>

<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_ASYNC_MAGIC">ISDN_ASYNC_MAGIC</A>          0x49344C01 <FONT COLOR=#0000FF>/* for paranoia-checking        */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_ASYNC_INITIALIZED">ISDN_ASYNC_INITIALIZED</A>	  0x80000000 <FONT COLOR=#0000FF>/* port was initialized         */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_ASYNC_CALLOUT_ACTIVE">ISDN_ASYNC_CALLOUT_ACTIVE</A> 0x40000000 <FONT COLOR=#0000FF>/* Call out device active       */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_ASYNC_NORMAL_ACTIVE">ISDN_ASYNC_NORMAL_ACTIVE</A>  0x20000000 <FONT COLOR=#0000FF>/* Normal device active         */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_ASYNC_CLOSING">ISDN_ASYNC_CLOSING</A>	  0x08000000 <FONT COLOR=#0000FF>/* Serial port is closing       */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_ASYNC_CTS_FLOW">ISDN_ASYNC_CTS_FLOW</A>	  0x04000000 <FONT COLOR=#0000FF>/* Do CTS flow control          */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_ASYNC_CHECK_CD">ISDN_ASYNC_CHECK_CD</A>	  0x02000000 <FONT COLOR=#0000FF>/* i.e., CLOCAL                 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_ASYNC_HUP_NOTIFY">ISDN_ASYNC_HUP_NOTIFY</A>         0x0001 <FONT COLOR=#0000FF>/* Notify tty on hangups/closes */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_ASYNC_SESSION_LOCKOUT">ISDN_ASYNC_SESSION_LOCKOUT</A>    0x0100 <FONT COLOR=#0000FF>/* Lock cua opens on session    */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_ASYNC_PGRP_LOCKOUT">ISDN_ASYNC_PGRP_LOCKOUT</A>       0x0200 <FONT COLOR=#0000FF>/* Lock cua opens on pgrp       */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_ASYNC_CALLOUT_NOHUP">ISDN_ASYNC_CALLOUT_NOHUP</A>      0x0400 <FONT COLOR=#0000FF>/* No hangup for cui            */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_ASYNC_SPLIT_TERMIOS">ISDN_ASYNC_SPLIT_TERMIOS</A>      0x0008 <FONT COLOR=#0000FF>/* Sep. termios for dialin/out  */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERIAL_XMIT_SIZE">ISDN_SERIAL_XMIT_SIZE</A>           1024 <FONT COLOR=#0000FF>/* Default bufsize for write    */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERIAL_XMIT_MAX">ISDN_SERIAL_XMIT_MAX</A>            4000 <FONT COLOR=#0000FF>/* Maximum bufsize for write    */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERIAL_TYPE_NORMAL">ISDN_SERIAL_TYPE_NORMAL</A>            1
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_SERIAL_TYPE_CALLOUT">ISDN_SERIAL_TYPE_CALLOUT</A>           2

<FONT COLOR=#A521F7>#ifdef</FONT> CONFIG_ISDN_AUDIO
<FONT COLOR=#0000FF>/* For using sk_buffs with audio we need some private variables
 * within each sk_buff. For this purpose, we declare a struct here,
 * and put it always at skb-&gt;head. A few macros help accessing the
 * variables. Of course, we need to check skb_headroom prior to
 * any access.
 */</FONT>
<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> <A NAME="isdn_audio_skb">isdn_audio_skb</A> {
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">short</FONT> dle_count;
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT>  lock;
} <A HREF="#isdn_audio_skb">isdn_audio_skb</A>;

<FONT COLOR=#A521F7>#define</FONT> <A HREF="#ISDN_AUDIO_SKB_DLECOUNT">ISDN_AUDIO_SKB_DLECOUNT</A>(skb) (((<A HREF="#isdn_audio_skb">isdn_audio_skb</A>*)skb-&gt;head)-&gt;dle_count)
<FONT COLOR=#A521F7>#define</FONT> <A HREF="#ISDN_AUDIO_SKB_LOCK">ISDN_AUDIO_SKB_LOCK</A>(skb) (((<A HREF="#isdn_audio_skb">isdn_audio_skb</A>*)skb-&gt;head)-&gt;lock)
<FONT COLOR=#A521F7>#endif</FONT>

<FONT COLOR=#0000FF>/* Private data of AT-command-interpreter */</FONT>
<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> <A NAME="atemu">atemu</A> {
	u_char       profile[<A HREF="#ISDN_MODEM_ANZREG">ISDN_MODEM_ANZREG</A>]; <FONT COLOR=#0000FF>/* Modem-Regs. Profile 0              */</FONT>
	u_char       mdmreg[<A HREF="#ISDN_MODEM_ANZREG">ISDN_MODEM_ANZREG</A>];  <FONT COLOR=#0000FF>/* Modem-Registers                    */</FONT>
	<FONT COLOR="#298C52">char</FONT>         pmsn[<A HREF="#ISDN_MSNLEN">ISDN_MSNLEN</A>];          <FONT COLOR=#0000FF>/* EAZ/MSNs Profile 0                 */</FONT>
	<FONT COLOR="#298C52">char</FONT>         msn[<A HREF="#ISDN_MSNLEN">ISDN_MSNLEN</A>];           <FONT COLOR=#0000FF>/* EAZ/MSN                            */</FONT>
	<FONT COLOR="#298C52">char</FONT>         plmsn[<A HREF="#ISDN_LMSNLEN">ISDN_LMSNLEN</A>];        <FONT COLOR=#0000FF>/* Listening MSNs Profile 0           */</FONT>
	<FONT COLOR="#298C52">char</FONT>         lmsn[<A HREF="#ISDN_LMSNLEN">ISDN_LMSNLEN</A>];         <FONT COLOR=#0000FF>/* Listening MSNs                     */</FONT>
	<FONT COLOR="#298C52">char</FONT>         cpn[<A HREF="#ISDN_MSNLEN">ISDN_MSNLEN</A>];           <FONT COLOR=#0000FF>/* CalledPartyNumber on incoming call */</FONT>
<FONT COLOR=#A521F7>#ifdef</FONT> CONFIG_ISDN_AUDIO
	u_char       vpar[10];                   <FONT COLOR=#0000FF>/* Voice-parameters                   */</FONT>
	<FONT COLOR="#298C52">int</FONT>          lastDLE;                    <FONT COLOR=#0000FF>/* Flag for voice-coding: DLE seen    */</FONT>
<FONT COLOR=#A521F7>#endif</FONT>
	<FONT COLOR="#298C52">int</FONT>          mdmcmdl;                    <FONT COLOR=#0000FF>/* Length of Modem-Commandbuffer      */</FONT>
	<FONT COLOR="#298C52">int</FONT>          pluscount;                  <FONT COLOR=#0000FF>/* Counter for +++ sequence           */</FONT>
	<FONT COLOR="#298C52">int</FONT>          lastplus;                   <FONT COLOR=#0000FF>/* Timestamp of last +                */</FONT>
	<FONT COLOR="#298C52">char</FONT>         mdmcmd[255];                <FONT COLOR=#0000FF>/* Modem-Commandbuffer                */</FONT>
	<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> charge;                     <FONT COLOR=#0000FF>/* Charge units of current connection */</FONT>
} <A HREF="#atemu">atemu</A>;

<FONT COLOR=#0000FF>/* Private data (similar to async_struct in &lt;linux/serial.h&gt;) */</FONT>
<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> <A NAME="modem_info">modem_info</A> {
  <FONT COLOR="#298C52">int</FONT>			magic;
  <FONT COLOR="#298C52">int</FONT>			flags;		 <FONT COLOR=#0000FF>/* defined in tty.h               */</FONT>
  <FONT COLOR="#298C52">int</FONT>			x_char;		 <FONT COLOR=#0000FF>/* xon/xoff character             */</FONT>
  <FONT COLOR="#298C52">int</FONT>			mcr;		 <FONT COLOR=#0000FF>/* Modem control register         */</FONT>
  <FONT COLOR="#298C52">int</FONT>                   msr;             <FONT COLOR=#0000FF>/* Modem status register          */</FONT>
  <FONT COLOR="#298C52">int</FONT>                   lsr;             <FONT COLOR=#0000FF>/* Line status register           */</FONT>
  <FONT COLOR="#298C52">int</FONT>			line;
  <FONT COLOR="#298C52">int</FONT>			count;		 <FONT COLOR=#0000FF>/* # of fd on device              */</FONT>
  <FONT COLOR="#298C52">int</FONT>			blocked_open;	 <FONT COLOR=#0000FF>/* # of blocked opens             */</FONT>
  <FONT COLOR="#298C52">long</FONT>			session;	 <FONT COLOR=#0000FF>/* Session of opening process     */</FONT>
  <FONT COLOR="#298C52">long</FONT>			pgrp;		 <FONT COLOR=#0000FF>/* pgrp of opening process        */</FONT>
  <FONT COLOR="#298C52">int</FONT>                   online;          <FONT COLOR=#0000FF>/* 1 = B-Channel is up, drop data */</FONT>
					 <FONT COLOR=#0000FF>/* 2 = B-Channel is up, deliver d.*/</FONT>
  <FONT COLOR="#298C52">int</FONT>                   dialing;         <FONT COLOR=#0000FF>/* Dial in progress               */</FONT>
  <FONT COLOR="#298C52">int</FONT>                   rcvsched;        <FONT COLOR=#0000FF>/* Receive needs schedule         */</FONT>
  <FONT COLOR="#298C52">int</FONT>                   isdn_driver;	 <FONT COLOR=#0000FF>/* Index to isdn-driver           */</FONT>
  <FONT COLOR="#298C52">int</FONT>                   isdn_channel;    <FONT COLOR=#0000FF>/* Index to isdn-channel          */</FONT>
  <FONT COLOR="#298C52">int</FONT>                   drv_index;       <FONT COLOR=#0000FF>/* Index to dev-&gt;usage            */</FONT>
  <FONT COLOR="#298C52">int</FONT>                   ncarrier;        <FONT COLOR=#0000FF>/* Flag: schedule NO CARRIER      */</FONT>
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT>         last_cause[8];   <FONT COLOR=#0000FF>/* Last cause message             */</FONT>
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT>         last_num[<A HREF="#ISDN_MSNLEN">ISDN_MSNLEN</A>];
	                                 <FONT COLOR=#0000FF>/* Last phone-number              */</FONT>
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT>         last_l2;         <FONT COLOR=#0000FF>/* Last layer-2 protocol          */</FONT>
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT>         last_si;         <FONT COLOR=#0000FF>/* Last service                   */</FONT>
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT>         last_lhup;       <FONT COLOR=#0000FF>/* Last hangup local?             */</FONT>
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT>         last_dir;        <FONT COLOR=#0000FF>/* Last direction (in or out)     */</FONT>
  <FONT COLOR="#298C52">struct</FONT> timer_list     nc_timer;        <FONT COLOR=#0000FF>/* Timer for delayed NO CARRIER   */</FONT>
  <FONT COLOR="#298C52">int</FONT>                   send_outstanding;<FONT COLOR=#0000FF>/* # of outstanding send-requests */</FONT>
  <FONT COLOR="#298C52">int</FONT>                   xmit_size;       <FONT COLOR=#0000FF>/* max. # of chars in xmit_buf    */</FONT>
  <FONT COLOR="#298C52">int</FONT>                   xmit_count;      <FONT COLOR=#0000FF>/* # of chars in xmit_buf         */</FONT>
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT>         *xmit_buf;       <FONT COLOR=#0000FF>/* transmit buffer                */</FONT>
  <FONT COLOR="#298C52">struct</FONT> sk_buff_head   xmit_queue;      <FONT COLOR=#0000FF>/* transmit queue                 */</FONT>
  atomic_t              xmit_lock;       <FONT COLOR=#0000FF>/* Semaphore for isdn_tty_write   */</FONT>
<FONT COLOR=#A521F7>#ifdef</FONT> CONFIG_ISDN_AUDIO
  <FONT COLOR="#298C52">int</FONT>                   vonline;         <FONT COLOR=#0000FF>/* Voice-channel status           */</FONT>
					 <FONT COLOR=#0000FF>/* Bit 0 = recording              */</FONT>
					 <FONT COLOR=#0000FF>/* Bit 1 = playback               */</FONT>
					 <FONT COLOR=#0000FF>/* Bit 2 = playback, DLE-ETX seen */</FONT>
  <FONT COLOR="#298C52">struct</FONT> sk_buff_head   dtmf_queue;      <FONT COLOR=#0000FF>/* queue for dtmf results         */</FONT>
  <FONT COLOR="#298C52">void</FONT>                  *adpcms;         <FONT COLOR=#0000FF>/* state for adpcm decompression  */</FONT>
  <FONT COLOR="#298C52">void</FONT>                  *adpcmr;         <FONT COLOR=#0000FF>/* state for adpcm compression    */</FONT>
  <FONT COLOR="#298C52">void</FONT>                  *dtmf_state;     <FONT COLOR=#0000FF>/* state for dtmf decoder         */</FONT>
<FONT COLOR=#A521F7>#endif</FONT>
  <FONT COLOR="#298C52">struct</FONT> tty_struct 	*tty;            <FONT COLOR=#0000FF>/* Pointer to corresponding tty   */</FONT>
  <A HREF="#atemu">atemu</A>                 emu;             <FONT COLOR=#0000FF>/* AT-emulator data               */</FONT>
  <FONT COLOR="#298C52">struct</FONT> termios	normal_termios;  <FONT COLOR=#0000FF>/* For saving termios structs     */</FONT>
  <FONT COLOR="#298C52">struct</FONT> termios	callout_termios;
  <FONT COLOR="#298C52">struct</FONT> wait_queue	*open_wait;
  <FONT COLOR="#298C52">struct</FONT> wait_queue	*close_wait;
  <FONT COLOR="#298C52">struct</FONT> semaphore      write_sem;
} <A HREF="#modem_info">modem_info</A>;

<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_MODEM_WINSIZE">ISDN_MODEM_WINSIZE</A> 8

<FONT COLOR=#0000FF>/* Description of one ISDN-tty */</FONT>
<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> {
  <FONT COLOR="#298C52">int</FONT>                refcount;			   <FONT COLOR=#0000FF>/* Number of opens        */</FONT>
  <FONT COLOR="#298C52">struct</FONT> tty_driver  tty_modem;			   <FONT COLOR=#0000FF>/* tty-device             */</FONT>
  <FONT COLOR="#298C52">struct</FONT> tty_driver  cua_modem;			   <FONT COLOR=#0000FF>/* cua-device             */</FONT>
  <FONT COLOR="#298C52">struct</FONT> tty_struct  *modem_table[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>]; <FONT COLOR=#0000FF>/* ?? copied from Orig */</FONT>
  <FONT COLOR="#298C52">struct</FONT> termios     *modem_termios[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>];
  <FONT COLOR="#298C52">struct</FONT> termios     *modem_termios_locked[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>];
  <A HREF="#modem_info">modem_info</A>         info[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>];	   <FONT COLOR=#0000FF>/* Private data           */</FONT>
} <A NAME="modem">modem</A>;

<FONT COLOR=#0000FF>/*======================= End of ISDN-tty stuff ============================*/</FONT>

<FONT COLOR=#0000FF>/*======================== Start of V.110 stuff ============================*/</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="V110_BUFSIZE">V110_BUFSIZE</A> 1024

<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> {
	<FONT COLOR="#298C52">int</FONT> nbytes;                    <FONT COLOR=#0000FF>/* 1 Matrixbyte -&gt; nbytes in stream     */</FONT>
	<FONT COLOR="#298C52">int</FONT> nbits;                     <FONT COLOR=#0000FF>/* Number of used bits in streambyte    */</FONT>
	<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> key;             <FONT COLOR=#0000FF>/* Bitmask in stream eg. 11 (nbits=2)   */</FONT>
	<FONT COLOR="#298C52">int</FONT> decodelen;                 <FONT COLOR=#0000FF>/* Amount of data in decodebuf          */</FONT>
	<FONT COLOR="#298C52">int</FONT> SyncInit;                  <FONT COLOR=#0000FF>/* Number of sync frames to send        */</FONT>
	<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> *OnlineFrame;    <FONT COLOR=#0000FF>/* Precalculated V110 idle frame        */</FONT>
	<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> *OfflineFrame;   <FONT COLOR=#0000FF>/* Precalculated V110 sync Frame        */</FONT>
	<FONT COLOR="#298C52">int</FONT> framelen;                  <FONT COLOR=#0000FF>/* Length of frames                     */</FONT>
	<FONT COLOR="#298C52">int</FONT> skbuser;                   <FONT COLOR=#0000FF>/* Number of unacked userdata skbs      */</FONT>
	<FONT COLOR="#298C52">int</FONT> skbidle;                   <FONT COLOR=#0000FF>/* Number of unacked idle/sync skbs     */</FONT>
	<FONT COLOR="#298C52">int</FONT> introducer;                <FONT COLOR=#0000FF>/* Local vars for decoder               */</FONT>
	<FONT COLOR="#298C52">int</FONT> dbit;
	<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> b;
	<FONT COLOR="#298C52">int</FONT> skbres;                    <FONT COLOR=#0000FF>/* space to reserve in outgoing skb     */</FONT>
	<FONT COLOR="#298C52">int</FONT> maxsize;                   <FONT COLOR=#0000FF>/* maxbufsize of lowlevel driver        */</FONT>
	<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> *encodebuf;      <FONT COLOR=#0000FF>/* temporary buffer for encoding        */</FONT>
	<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> decodebuf[<A HREF="#V110_BUFSIZE">V110_BUFSIZE</A>]; <FONT COLOR=#0000FF>/* incomplete V110 matrices     */</FONT>
} <A NAME="isdn_v110_stream">isdn_v110_stream</A>;

<FONT COLOR=#0000FF>/*========================= End of V.110 stuff =============================*/</FONT>

<FONT COLOR=#0000FF>/*======================= Start of general stuff ===========================*/</FONT>

<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> {
	<FONT COLOR="#298C52">char</FONT> *next;
	<FONT COLOR="#298C52">char</FONT> *<FONT COLOR="#298C52">private</FONT>;
} <A NAME="infostruct">infostruct</A>;

<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> <A NAME="isdn_module">isdn_module</A> {
	<FONT COLOR="#298C52">struct</FONT> <A HREF="#isdn_module">isdn_module</A> *prev;
	<FONT COLOR="#298C52">struct</FONT> <A HREF="#isdn_module">isdn_module</A> *next;
	<FONT COLOR="#298C52">char</FONT> *name;
	<FONT COLOR="#298C52">int</FONT> (*get_free_channel)(<FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>);
	<FONT COLOR="#298C52">int</FONT> (*free_channel)(<FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>);
	<FONT COLOR="#298C52">int</FONT> (*status_callback)(<A HREF="isdnif.h.shtml#isdn_ctrl">isdn_ctrl</A> *);
	<FONT COLOR="#298C52">int</FONT> (*command)(<A HREF="isdnif.h.shtml#isdn_ctrl">isdn_ctrl</A> *);
	<FONT COLOR="#298C52">int</FONT> (*receive_callback)(<FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">struct</FONT> sk_buff *);
	<FONT COLOR="#298C52">int</FONT> (*writebuf_skb)(<FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">struct</FONT> sk_buff *);
	<FONT COLOR="#298C52">int</FONT> (*net_start_xmit)(<FONT COLOR="#298C52">struct</FONT> sk_buff *, <FONT COLOR="#298C52">struct</FONT> device *);
	<FONT COLOR="#298C52">int</FONT> (*net_receive)(<FONT COLOR="#298C52">struct</FONT> device *, <FONT COLOR="#298C52">struct</FONT> sk_buff *);
	<FONT COLOR="#298C52">int</FONT> (*net_open)(<FONT COLOR="#298C52">struct</FONT> device *);
	<FONT COLOR="#298C52">int</FONT> (*net_close)(<FONT COLOR="#298C52">struct</FONT> device *);
	<FONT COLOR="#298C52">int</FONT> priority;
} <A HREF="#isdn_module">isdn_module</A>;

<FONT COLOR=#0000FF>/* Description of hardware-level-driver */</FONT>
<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> {
	ulong               flags;            <FONT COLOR=#0000FF>/* Flags                            */</FONT>
	<FONT COLOR="#298C52">int</FONT>                 channels;         <FONT COLOR=#0000FF>/* Number of channels               */</FONT>
	<FONT COLOR="#298C52">int</FONT>                 reject_bus;       <FONT COLOR=#0000FF>/* Flag: Reject rejected call on bus*/</FONT>
	<FONT COLOR="#298C52">struct</FONT> wait_queue  *st_waitq;         <FONT COLOR=#0000FF>/* Wait-Queue for status-read's     */</FONT>
	<FONT COLOR="#298C52">int</FONT>                 maxbufsize;       <FONT COLOR=#0000FF>/* Maximum Buffersize supported     */</FONT>
	<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">long</FONT>       pktcount;         <FONT COLOR=#0000FF>/* Until now: unused                */</FONT>
	<FONT COLOR="#298C52">int</FONT>                 running;          <FONT COLOR=#0000FF>/* Flag: Protocolcode running       */</FONT>
	<FONT COLOR="#298C52">int</FONT>                 loaded;           <FONT COLOR=#0000FF>/* Flag: Driver loaded              */</FONT>
	<FONT COLOR="#298C52">int</FONT>                 stavail;          <FONT COLOR=#0000FF>/* Chars avail on Status-device     */</FONT>
	<A HREF="isdnif.h.shtml#isdn_if">isdn_if</A>            *interface;        <FONT COLOR=#0000FF>/* Interface to driver              */</FONT>
	<FONT COLOR="#298C52">int</FONT>                *rcverr;           <FONT COLOR=#0000FF>/* Error-counters for B-Ch.-receive */</FONT>
	<FONT COLOR="#298C52">int</FONT>                *rcvcount;         <FONT COLOR=#0000FF>/* Byte-counters for B-Ch.-receive  */</FONT>
<FONT COLOR=#A521F7>#ifdef</FONT> CONFIG_ISDN_AUDIO
	<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">long</FONT>      DLEflag;           <FONT COLOR=#0000FF>/* Flags: Insert DLE at next read   */</FONT>
<FONT COLOR=#A521F7>#endif</FONT>
	<FONT COLOR="#298C52">struct</FONT> sk_buff_head *rpqueue;         <FONT COLOR=#0000FF>/* Pointers to start of Rcv-Queue   */</FONT>
	<FONT COLOR="#298C52">struct</FONT> wait_queue  **rcv_waitq;       <FONT COLOR=#0000FF>/* Wait-Queues for B-Channel-Reads  */</FONT>
	<FONT COLOR="#298C52">struct</FONT> wait_queue  **snd_waitq;       <FONT COLOR=#0000FF>/* Wait-Queue for B-Channel-Send's  */</FONT>
	<FONT COLOR="#298C52">char</FONT>               msn2eaz[10][<A HREF="#ISDN_MSNLEN">ISDN_MSNLEN</A>];  <FONT COLOR=#0000FF>/* Mapping-Table MSN-&gt;EAZ   */</FONT>
} <A NAME="driver">driver</A>;

<FONT COLOR=#0000FF>/* Main driver-data */</FONT>
<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> <A NAME="isdn_devt">isdn_devt</A> {
	<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">short</FONT>    flags;		       <FONT COLOR=#0000FF>/* Bitmapped Flags:           */</FONT>
	<FONT COLOR=#0000FF>/*                            */</FONT>
	<FONT COLOR="#298C52">int</FONT>               drivers;		       <FONT COLOR=#0000FF>/* Current number of drivers  */</FONT>
	<FONT COLOR="#298C52">int</FONT>               channels;		       <FONT COLOR=#0000FF>/* Current number of channels */</FONT>
	<FONT COLOR="#298C52">int</FONT>               net_verbose;               <FONT COLOR=#0000FF>/* Verbose-Flag               */</FONT>
	<FONT COLOR="#298C52">int</FONT>               modempoll;		       <FONT COLOR=#0000FF>/* Flag: tty-read active      */</FONT>
	<FONT COLOR="#298C52">int</FONT>               tflags;                    <FONT COLOR=#0000FF>/* Timer-Flags:               */</FONT>
	<FONT COLOR=#0000FF>/*  see ISDN_TIMER_..defines  */</FONT>
	<FONT COLOR="#298C52">int</FONT>               global_flags;
	<A HREF="#infostruct">infostruct</A>        *infochain;                <FONT COLOR=#0000FF>/* List of open info-devs.    */</FONT>
	<FONT COLOR="#298C52">struct</FONT> wait_queue *info_waitq;               <FONT COLOR=#0000FF>/* Wait-Queue for isdninfo    */</FONT>
	<FONT COLOR="#298C52">struct</FONT> timer_list timer;		       <FONT COLOR=#0000FF>/* Misc.-function Timer       */</FONT>
	<FONT COLOR="#298C52">int</FONT>               chanmap[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>];<FONT COLOR=#0000FF>/* Map minor-&gt;device-channel  */</FONT>
	<FONT COLOR="#298C52">int</FONT>               drvmap[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>]; <FONT COLOR=#0000FF>/* Map minor-&gt;driver-index    */</FONT>
	<FONT COLOR="#298C52">int</FONT>               usage[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>];  <FONT COLOR=#0000FF>/* Used by tty/ip/voice       */</FONT>
	<FONT COLOR="#298C52">char</FONT>              num[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>][<A HREF="#ISDN_MSNLEN">ISDN_MSNLEN</A>];
	<FONT COLOR=#0000FF>/* Remote number of active ch.*/</FONT>
	<FONT COLOR="#298C52">int</FONT>               m_idx[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>];  <FONT COLOR=#0000FF>/* Index for mdm....          */</FONT>
	<A HREF="#driver">driver</A>            *drv[<A HREF="#ISDN_MAX_DRIVERS">ISDN_MAX_DRIVERS</A>];    <FONT COLOR=#0000FF>/* Array of drivers           */</FONT>
	<A HREF="#isdn_net_dev">isdn_net_dev</A>      *netdev;		       <FONT COLOR=#0000FF>/* Linked list of net-if's    */</FONT>
	<FONT COLOR="#298C52">char</FONT>              drvid[<A HREF="#ISDN_MAX_DRIVERS">ISDN_MAX_DRIVERS</A>][20];<FONT COLOR=#0000FF>/* Driver-ID                 */</FONT>
	<FONT COLOR="#298C52">struct</FONT> task_struct *profd;                   <FONT COLOR=#0000FF>/* For iprofd                 */</FONT>
	<A HREF="#modem">modem</A>             mdm;		       <FONT COLOR=#0000FF>/* tty-driver-data            */</FONT>
	<A HREF="#isdn_net_dev">isdn_net_dev</A>      *rx_netdev[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>]; <FONT COLOR=#0000FF>/* rx netdev-pointers     */</FONT>
	<A HREF="#isdn_net_dev">isdn_net_dev</A>      *st_netdev[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>]; <FONT COLOR=#0000FF>/* stat netdev-pointers   */</FONT>
	ulong             ibytes[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>]; <FONT COLOR=#0000FF>/* Statistics incoming bytes  */</FONT>
	ulong             obytes[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>]; <FONT COLOR=#0000FF>/* Statistics outgoing bytes  */</FONT>
	<FONT COLOR="#298C52">int</FONT>               v110emu[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>];<FONT COLOR=#0000FF>/* V.110 emulator-mode 0=none */</FONT>
	atomic_t          v110use[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>];<FONT COLOR=#0000FF>/* Usage-Semaphore for stream */</FONT>
	<A HREF="#isdn_v110_stream">isdn_v110_stream</A>  *v110[<A HREF="#ISDN_MAX_CHANNELS">ISDN_MAX_CHANNELS</A>];  <FONT COLOR=#0000FF>/* V.110 private data         */</FONT>
	<FONT COLOR="#298C52">struct</FONT> semaphore  sem;                       <FONT COLOR=#0000FF>/* serialize list access*/</FONT>
	<A HREF="#isdn_module">isdn_module</A>       *modules;
} <A NAME="isdn_dev">isdn_dev</A>;

<FONT COLOR="#298C52">extern</FONT> <A HREF="#isdn_dev">isdn_dev</A> *dev;


<FONT COLOR=#0000FF>/* Utility-Macros */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="MIN">MIN</A>(a,b) ((a&lt;b)?a:b)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="MAX">MAX</A>(a,b) ((a&gt;b)?a:b)

<FONT COLOR=#A521F7>#if</FONT> (LINUX_VERSION_CODE &lt; 0x020159) <FONT COLOR=#0000FF>/* 2.1.89 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="poll_wait">poll_wait</A>(f,wq,w) <A NAME="poll_wait">poll_wait</A>((wq),(w))
<FONT COLOR=#A521F7>#endif</FONT>
<FONT COLOR=#A521F7>#endif</FONT> <FONT COLOR=#0000FF>/* __KERNEL__ */</FONT>
<FONT COLOR=#A521F7>#endif</FONT> <FONT COLOR=#0000FF>/* isdn_h */</FONT>
</BODY>

</HTML>
