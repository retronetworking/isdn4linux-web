<HTML>

<!-- Generated by c2html-1.0, Copyright 1998 by Dave Whittington -->
<HEAD>
<TITLE>isdnif.h</TITLE>
<!--#include virtual="/ssi/js.shtml" -->
<!--#include virtual="/ssi/buttondefs.shtml" -->
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<TABLE WIDTH="100%">
<TR>
<TD ALIGN=LEFT WIDTH="90"><!--#include virtual="/ssi/b_home.shtml" --></TD>
<TD ALIGN=RIGHT WIDTH="90"><!--#include virtual="/ssi/b_up.shtml" --></TD>
</TR>
</TABLE>
<CENTER><H1>isdnif.h</H1></CENTER>

<HR>
<PRE>
<FONT COLOR=#0000FF>/* $Id$
 *
 * Linux ISDN subsystem
 *
 * Definition of the interface between the subsystem and its low-level drivers.
 *
 * Copyright 1994,95,96 by Fritz Elfert (fritz@wuemaus.franken.de)
 * Copyright 1995,96    Thinking Objects Software GmbH Wuerzburg
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. 
 *
 * $Log$
 * Revision 1.25  1998/06/17 19:51:55  he
 * merged with 2.1.10[34] (cosmetics and udelay() -&gt; mdelay())
 * brute force fix to avoid Ugh's in isdn_tty_write()
 * cleaned up some dead code
 *
 * Revision 1.24  1998/03/19 13:18:57  keil
 * Start of a CAPI like interface for supplementary Service
 * first service: SUSPEND
 *
 * Revision 1.23  1998/02/20 17:36:52  fritz
 * Added L2-protocols for V.110, changed FEATURE-Flag-constants.
 *
 * Revision 1.22  1998/01/31 22:14:12  keil
 * changes for 2.1.82
 *
 * Revision 1.21  1997/10/09 21:28:13  fritz
 * New HL&lt;-&gt;LL interface:
 *   New BSENT callback with nr. of bytes included.
 *   Sending without ACK.
 *   New L1 error status (not yet in use).
 *   Cleaned up obsolete structures.
 * Implemented Cisco-SLARP.
 * Changed local net-interface data to be dynamically allocated.
 * Removed old 2.0 compatibility stuff.
 *
 * Revision 1.20  1997/05/27 15:18:06  fritz
 * Added changes for recent 2.1.x kernels:
 *   changed return type of isdn_close
 *   queue_task_* -&gt; queue_task
 *   clear/set_bit -&gt; test_and_... where apropriate.
 *   changed type of hard_header_cache parameter.
 *
 * Revision 1.19  1997/03/25 23:13:56  keil
 * NI-1 US protocol
 *
 * Revision 1.18  1997/03/04 22:09:18  calle
 * Change macros copy_from_user and copy_to_user in inline function.
 * These are now correct replacements of the functions for 2.1.xx
 *
 * Revision 1.17  1997/02/10 21:12:53  fritz
 * More setup-interface changes.
 *
 * Revision 1.16  1997/02/10 19:42:57  fritz
 * New interface for reporting incoming calls.
 *
 * Revision 1.15  1997/02/09 00:18:42  keil
 * leased line support
 *
 * Revision 1.14  1997/02/03 23:43:00  fritz
 * Misc changes for Kernel 2.1.X compatibility.
 *
 * Revision 1.13  1996/11/13 02:39:59  fritz
 * More compatibility changes.
 *
 * Revision 1.12  1996/11/06 17:38:48  keil
 * more changes for 2.1.X
 *
 * Revision 1.11  1996/10/23 11:59:42  fritz
 * More compatibility changes.
 *
 * Revision 1.10  1996/10/22 23:14:19  fritz
 * Changes for compatibility to 2.0.X and 2.1.X kernels.
 *
 * Revision 1.9  1996/06/06 21:24:24  fritz
 * Started adding support for suspend/resume.
 *
 * Revision 1.8  1996/05/18 01:45:37  fritz
 * More spelling corrections.
 *
 * Revision 1.7  1996/05/18 01:37:19  fritz
 * Added spelling corrections and some minor changes
 * to stay in sync with kernel.
 *
 * Revision 1.6  1996/05/17 03:59:28  fritz
 * Marked rcvcallb and writebuf obsolete.
 *
 * Revision 1.5  1996/05/01 11:43:54  fritz
 * Removed STANDALONE
 *
 * Revision 1.4  1996/05/01 11:38:40  fritz
 * Added ISDN_FEATURE_L2_TRANS
 *
 * Revision 1.3  1996/04/29 22:57:54  fritz
 * Added driverId and channel parameters to
 * writecmd() and readstat().
 * Added constant for voice-support.
 *
 * Revision 1.2  1996/04/20 17:02:40  fritz
 * Changes to support skbuffs for Lowlevel-Drivers.
 * Misc. typos
 *
 * Revision 1.1  1996/01/09 05:50:51  fritz
 * Initial revision
 *
 */</FONT>

<FONT COLOR=#A521F7>#ifndef</FONT> <A HREF="#isdnif_h">isdnif_h</A>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="isdnif_h">isdnif_h</A>

<FONT COLOR=#0000FF>/*
 * Values for general protocol-selection
 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PTYPE_UNKNOWN">ISDN_PTYPE_UNKNOWN</A>   0   <FONT COLOR=#0000FF>/* Protocol undefined   */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PTYPE_1TR6">ISDN_PTYPE_1TR6</A>      1   <FONT COLOR=#0000FF>/* german 1TR6-protocol */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PTYPE_EURO">ISDN_PTYPE_EURO</A>      2   <FONT COLOR=#0000FF>/* EDSS1-protocol       */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PTYPE_LEASED">ISDN_PTYPE_LEASED</A>    3   <FONT COLOR=#0000FF>/* for leased lines     */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PTYPE_NI1">ISDN_PTYPE_NI1</A>       4   <FONT COLOR=#0000FF>/* US NI-1 protocol     */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PTYPE_MAX">ISDN_PTYPE_MAX</A>       7   <FONT COLOR=#0000FF>/* Max. 8 Protocols     */</FONT>

<FONT COLOR=#0000FF>/*
 * Values for Layer-2-protocol-selection
 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PROTO_L2_X75I">ISDN_PROTO_L2_X75I</A>   0   <FONT COLOR=#0000FF>/* X75/LAPB with I-Frames            */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PROTO_L2_X75UI">ISDN_PROTO_L2_X75UI</A>  1   <FONT COLOR=#0000FF>/* X75/LAPB with UI-Frames           */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PROTO_L2_X75BUI">ISDN_PROTO_L2_X75BUI</A> 2   <FONT COLOR=#0000FF>/* X75/LAPB with UI-Frames           */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PROTO_L2_HDLC">ISDN_PROTO_L2_HDLC</A>   3   <FONT COLOR=#0000FF>/* HDLC                              */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PROTO_L2_TRANS">ISDN_PROTO_L2_TRANS</A>  4   <FONT COLOR=#0000FF>/* Transparent (Voice)               */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PROTO_L2_X25DTE">ISDN_PROTO_L2_X25DTE</A> 5   <FONT COLOR=#0000FF>/* X25/LAPB DTE mode                 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PROTO_L2_X25DCE">ISDN_PROTO_L2_X25DCE</A> 6   <FONT COLOR=#0000FF>/* X25/LAPB DCE mode                 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PROTO_L2_V11096">ISDN_PROTO_L2_V11096</A> 7   <FONT COLOR=#0000FF>/* V.110 bitrate adaption 9600 Baud  */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PROTO_L2_V11019">ISDN_PROTO_L2_V11019</A> 8   <FONT COLOR=#0000FF>/* V.110 bitrate adaption 19200 Baud */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PROTO_L2_V11038">ISDN_PROTO_L2_V11038</A> 9   <FONT COLOR=#0000FF>/* V.110 bitrate adaption 38400 Baud */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PROTO_L2_MODEM">ISDN_PROTO_L2_MODEM</A>  10  <FONT COLOR=#0000FF>/* Analog Modem on Board */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PROTO_L2_MAX">ISDN_PROTO_L2_MAX</A>    15  <FONT COLOR=#0000FF>/* Max. 16 Protocols                 */</FONT>

<FONT COLOR=#0000FF>/*
 * Values for Layer-3-protocol-selection
 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PROTO_L3_TRANS">ISDN_PROTO_L3_TRANS</A>  0   <FONT COLOR=#0000FF>/* Transparent                 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PROTO_L3_MAX">ISDN_PROTO_L3_MAX</A>    7   <FONT COLOR=#0000FF>/* Max. 8 Protocols            */</FONT>

<FONT COLOR=#A521F7>#ifdef</FONT> __KERNEL__

<FONT COLOR=#A521F7>#include</FONT> &lt;linux/skbuff.h&gt;

<FONT COLOR=#0000FF>/*
 * Commands from linklevel to lowlevel
 *
 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_IOCTL">ISDN_CMD_IOCTL</A>    0       <FONT COLOR=#0000FF>/* Perform ioctl                         */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_DIAL">ISDN_CMD_DIAL</A>     1       <FONT COLOR=#0000FF>/* Dial out                              */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_ACCEPTD">ISDN_CMD_ACCEPTD</A>  2       <FONT COLOR=#0000FF>/* Accept an incoming call on D-Chan.    */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_ACCEPTB">ISDN_CMD_ACCEPTB</A>  3       <FONT COLOR=#0000FF>/* Request B-Channel connect.            */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_HANGUP">ISDN_CMD_HANGUP</A>   4       <FONT COLOR=#0000FF>/* Hangup                                */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_CLREAZ">ISDN_CMD_CLREAZ</A>   5       <FONT COLOR=#0000FF>/* Clear EAZ(s) of channel               */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_SETEAZ">ISDN_CMD_SETEAZ</A>   6       <FONT COLOR=#0000FF>/* Set EAZ(s) of channel                 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_GETEAZ">ISDN_CMD_GETEAZ</A>   7       <FONT COLOR=#0000FF>/* Get EAZ(s) of channel                 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_SETSIL">ISDN_CMD_SETSIL</A>   8       <FONT COLOR=#0000FF>/* Set Service-Indicator-List of channel */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_GETSIL">ISDN_CMD_GETSIL</A>   9       <FONT COLOR=#0000FF>/* Get Service-Indicator-List of channel */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_SETL2">ISDN_CMD_SETL2</A>   10       <FONT COLOR=#0000FF>/* Set B-Chan. Layer2-Parameter          */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_GETL2">ISDN_CMD_GETL2</A>   11       <FONT COLOR=#0000FF>/* Get B-Chan. Layer2-Parameter          */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_SETL3">ISDN_CMD_SETL3</A>   12       <FONT COLOR=#0000FF>/* Set B-Chan. Layer3-Parameter          */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_GETL3">ISDN_CMD_GETL3</A>   13       <FONT COLOR=#0000FF>/* Get B-Chan. Layer3-Parameter          */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_LOCK">ISDN_CMD_LOCK</A>    14       <FONT COLOR=#0000FF>/* Signal usage by upper levels          */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_UNLOCK">ISDN_CMD_UNLOCK</A>  15       <FONT COLOR=#0000FF>/* Release usage-lock                    */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_SUSPEND">ISDN_CMD_SUSPEND</A> 16       <FONT COLOR=#0000FF>/* Suspend connection                    */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_CMD_RESUME">ISDN_CMD_RESUME</A>  17       <FONT COLOR=#0000FF>/* Resume connection                     */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="CAPI_PUT_MESSAGE">CAPI_PUT_MESSAGE</A> 18       <FONT COLOR=#0000FF>/* CAPI message send down or up          */</FONT>

<FONT COLOR=#0000FF>/*
 * Status-Values delivered from lowlevel to linklevel via
 * statcallb().
 *
 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_STAVAIL">ISDN_STAT_STAVAIL</A> 256    <FONT COLOR=#0000FF>/* Raw status-data available             */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_ICALL">ISDN_STAT_ICALL</A>   257    <FONT COLOR=#0000FF>/* Incoming call detected                */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_RUN">ISDN_STAT_RUN</A>     258    <FONT COLOR=#0000FF>/* Signal protocol-code is running       */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_STOP">ISDN_STAT_STOP</A>    259    <FONT COLOR=#0000FF>/* Signal halt of protocol-code          */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_DCONN">ISDN_STAT_DCONN</A>   260    <FONT COLOR=#0000FF>/* Signal D-Channel connect              */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_BCONN">ISDN_STAT_BCONN</A>   261    <FONT COLOR=#0000FF>/* Signal B-Channel connect              */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_DHUP">ISDN_STAT_DHUP</A>    262    <FONT COLOR=#0000FF>/* Signal D-Channel disconnect           */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_BHUP">ISDN_STAT_BHUP</A>    263    <FONT COLOR=#0000FF>/* Signal B-Channel disconnect           */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_CINF">ISDN_STAT_CINF</A>    264    <FONT COLOR=#0000FF>/* Charge-Info                           */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_LOAD">ISDN_STAT_LOAD</A>    265    <FONT COLOR=#0000FF>/* Signal new lowlevel-driver is loaded  */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_UNLOAD">ISDN_STAT_UNLOAD</A>  266    <FONT COLOR=#0000FF>/* Signal unload of lowlevel-driver      */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_BSENT">ISDN_STAT_BSENT</A>   267    <FONT COLOR=#0000FF>/* Signal packet sent                    */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_NODCH">ISDN_STAT_NODCH</A>   268    <FONT COLOR=#0000FF>/* Signal no D-Channel                   */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_ADDCH">ISDN_STAT_ADDCH</A>   269    <FONT COLOR=#0000FF>/* Add more Channels                     */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_CAUSE">ISDN_STAT_CAUSE</A>   270    <FONT COLOR=#0000FF>/* Cause-Message                         */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_L1ERR">ISDN_STAT_L1ERR</A>   271    <FONT COLOR=#0000FF>/* Signal Layer-1 Error                  */</FONT>

<FONT COLOR=#0000FF>/*
 * Values for errcode field
 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_L1ERR_SEND">ISDN_STAT_L1ERR_SEND</A> 1
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_STAT_L1ERR_RECV">ISDN_STAT_L1ERR_RECV</A> 2

<FONT COLOR=#0000FF>/*
 * Values for feature-field of interface-struct.
 */</FONT>
<FONT COLOR=#0000FF>/* Layer 2 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L2_X75I">ISDN_FEATURE_L2_X75I</A>    (0x0001 &lt;&lt; <A HREF="#ISDN_PROTO_L2_X75I">ISDN_PROTO_L2_X75I</A>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L2_X75UI">ISDN_FEATURE_L2_X75UI</A>   (0x0001 &lt;&lt; <A HREF="#ISDN_PROTO_L2_X75UI">ISDN_PROTO_L2_X75UI</A>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L2_X75BUI">ISDN_FEATURE_L2_X75BUI</A>  (0x0001 &lt;&lt; <A HREF="#ISDN_PROTO_L2_X75BUI">ISDN_PROTO_L2_X75BUI</A>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L2_HDLC">ISDN_FEATURE_L2_HDLC</A>    (0x0001 &lt;&lt; <A HREF="#ISDN_PROTO_L2_HDLC">ISDN_PROTO_L2_HDLC</A>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L2_TRANS">ISDN_FEATURE_L2_TRANS</A>   (0x0001 &lt;&lt; <A HREF="#ISDN_PROTO_L2_TRANS">ISDN_PROTO_L2_TRANS</A>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L2_X25DTE">ISDN_FEATURE_L2_X25DTE</A>  (0x0001 &lt;&lt; <A HREF="#ISDN_PROTO_L2_X25DTE">ISDN_PROTO_L2_X25DTE</A>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L2_X25DCE">ISDN_FEATURE_L2_X25DCE</A>  (0x0001 &lt;&lt; <A HREF="#ISDN_PROTO_L2_X25DCE">ISDN_PROTO_L2_X25DCE</A>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L2_V11096">ISDN_FEATURE_L2_V11096</A>  (0x0001 &lt;&lt; <A HREF="#ISDN_PROTO_L2_V11096">ISDN_PROTO_L2_V11096</A>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L2_V11019">ISDN_FEATURE_L2_V11019</A>  (0x0001 &lt;&lt; <A HREF="#ISDN_PROTO_L2_V11019">ISDN_PROTO_L2_V11019</A>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L2_V11038">ISDN_FEATURE_L2_V11038</A>  (0x0001 &lt;&lt; <A HREF="#ISDN_PROTO_L2_V11038">ISDN_PROTO_L2_V11038</A>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L2_MODEM">ISDN_FEATURE_L2_MODEM</A>   (0x0001 &lt;&lt; <A HREF="#ISDN_PROTO_L2_MODEM">ISDN_PROTO_L2_MODEM</A>)

<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L2_MASK">ISDN_FEATURE_L2_MASK</A>    (0x0FFFF) <FONT COLOR=#0000FF>/* Max. 16 protocols */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L2_SHIFT">ISDN_FEATURE_L2_SHIFT</A>   (0)

<FONT COLOR=#0000FF>/* Layer 3 */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L3_TRANS">ISDN_FEATURE_L3_TRANS</A>   (0x10000 &lt;&lt; <A HREF="#ISDN_PROTO_L3_TRANS">ISDN_PROTO_L3_TRANS</A>)

<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L3_MASK">ISDN_FEATURE_L3_MASK</A>    (0x0FF0000) <FONT COLOR=#0000FF>/* Max. 8 Protocols */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_L3_SHIFT">ISDN_FEATURE_L3_SHIFT</A>   (16)

<FONT COLOR=#0000FF>/* Signaling */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_P_UNKNOWN">ISDN_FEATURE_P_UNKNOWN</A>  (0x1000000 &lt;&lt; <A HREF="#ISDN_PTYPE_UNKNOWN">ISDN_PTYPE_UNKNOWN</A>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_P_1TR6">ISDN_FEATURE_P_1TR6</A>     (0x1000000 &lt;&lt; <A HREF="#ISDN_PTYPE_1TR6">ISDN_PTYPE_1TR6</A>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_P_EURO">ISDN_FEATURE_P_EURO</A>     (0x1000000 &lt;&lt; <A HREF="#ISDN_PTYPE_EURO">ISDN_PTYPE_EURO</A>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_P_NI1">ISDN_FEATURE_P_NI1</A>      (0x1000000 &lt;&lt; <A HREF="#ISDN_PTYPE_NI1">ISDN_PTYPE_NI1</A>)

<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_P_MASK">ISDN_FEATURE_P_MASK</A>     (0x0FF000000) <FONT COLOR=#0000FF>/* Max. 8 Protocols */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_FEATURE_P_SHIFT">ISDN_FEATURE_P_SHIFT</A>    (24)

<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> <A NAME="setup_parm">setup_parm</A> {
    <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> phone[32];	<FONT COLOR=#0000FF>/* Remote Phone-Number */</FONT>
    <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> eazmsn[32];	<FONT COLOR=#0000FF>/* Local EAZ or MSN    */</FONT>
    <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> si1;      <FONT COLOR=#0000FF>/* Service Indicator 1 */</FONT>
    <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> si2;      <FONT COLOR=#0000FF>/* Service Indicator 2 */</FONT>
    <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> plan;     <FONT COLOR=#0000FF>/* Numbering plan      */</FONT>
    <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> screen;   <FONT COLOR=#0000FF>/* Screening info      */</FONT>
} <A HREF="#setup_parm">setup_parm</A>;

<FONT COLOR=#0000FF>/* CAPI structs */</FONT>

<FONT COLOR=#0000FF>/* this is compatible to the old union size */</FONT>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="MAX_CAPI_PARA_LEN">MAX_CAPI_PARA_LEN</A> 50

<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> {
	<FONT COLOR=#0000FF>/* Header */</FONT>
	__u16 Length;
	__u16 ApplId;
	__u8 Command;
	__u8 Subcommand;
	__u16 Messagenumber;

	<FONT COLOR=#0000FF>/* Parameter */</FONT>
	<FONT COLOR="#298C52">union</FONT> {
		__u32 Controller;
		__u32 PLCI;
		__u32 NCCI;
	} adr;
	__u8 para[<A HREF="#MAX_CAPI_PARA_LEN">MAX_CAPI_PARA_LEN</A>];
} <A NAME="capi_msg">capi_msg</A>;


<FONT COLOR=#0000FF>/*
 * Structure for exchanging above infos
 *
 */</FONT>
<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> {
  <FONT COLOR="#298C52">int</FONT>   <A HREF="isdn.h.shtml#driver">driver</A>;                  <FONT COLOR=#0000FF>/* Lowlevel-Driver-ID                    */</FONT>
  <FONT COLOR="#298C52">int</FONT>   command;                 <FONT COLOR=#0000FF>/* Command or Status (see above)         */</FONT>
  ulong arg;                     <FONT COLOR=#0000FF>/* Additional Data                       */</FONT>
  <FONT COLOR="#298C52">union</FONT> {
	ulong errcode;               <FONT COLOR=#0000FF>/* Type of error with STAT_L1ERR         */</FONT>
	<FONT COLOR="#298C52">int</FONT>   length;                <FONT COLOR=#0000FF>/* Amount of bytes sent with STAT_BSENT  */</FONT>
	u_char	num[50];	<FONT COLOR=#0000FF>/* Additional Data			*/</FONT>
	<A HREF="#setup_parm">setup_parm</A> 	setup;	<FONT COLOR=#0000FF>/* For SETUP msg			*/</FONT>
	<A HREF="#capi_msg">capi_msg</A>  	cmsg;	<FONT COLOR=#0000FF>/* For CAPI like messages		*/</FONT>
  } parm;
} <A NAME="isdn_ctrl">isdn_ctrl</A>;

<FONT COLOR=#0000FF>/*
 * The interface-struct itself (initialized at load-time of lowlevel-driver)
 *
 * See Documentation/isdn/INTERFACE for a description, how the communication
 * between the ISDN subsystem and its drivers is done.
 *
 */</FONT>
<FONT COLOR="#298C52">typedef</FONT> <FONT COLOR="#298C52">struct</FONT> {
  <FONT COLOR=#0000FF>/* Number of channels supported by this driver
   */</FONT>
  <FONT COLOR="#298C52">int</FONT> channels;

  <FONT COLOR=#0000FF>/* 
   * Maximum Size of transmit/receive-buffer this driver supports.
   */</FONT>
  <FONT COLOR="#298C52">int</FONT> maxbufsize;

  <FONT COLOR=#0000FF>/* Feature-Flags for this driver.
   * See defines ISDN_FEATURE_... for Values
   */</FONT>
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">long</FONT> features;

  <FONT COLOR=#0000FF>/*
   * Needed for calculating
   * dev-&gt;hard_header_len = linklayer header + hl_hdrlen;
   * Drivers, not supporting sk_buff's should set this to 0.
   */</FONT>
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">short</FONT> hl_hdrlen;

  <FONT COLOR=#0000FF>/*
   * Receive-Callback using sk_buff's
   * Parameters:
   *             int                    Driver-ID
   *             int                    local channel-number (0 ...)
   *             struct sk_buff *skb    received Data
   */</FONT>
  <FONT COLOR="#298C52">void</FONT> (*rcvcallb_skb)(<FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">struct</FONT> sk_buff *);

  <FONT COLOR=#0000FF>/* Status-Callback
   * Parameters:
   *             isdn_ctrl*
   *                   driver  = Driver ID.
   *                   command = One of above ISDN_STAT_... constants.
   *                   arg     = depending on status-type.
   *                   num     = depending on status-type.
   */</FONT>
  <FONT COLOR="#298C52">int</FONT> (*statcallb)(<A HREF="#isdn_ctrl">isdn_ctrl</A>*);

  <FONT COLOR=#0000FF>/* Send command
   * Parameters:
   *             isdn_ctrl*
   *                   driver  = Driver ID.
   *                   command = One of above ISDN_CMD_... constants.
   *                   arg     = depending on command.
   *                   num     = depending on command.
   */</FONT>
  <FONT COLOR="#298C52">int</FONT> (*command)(<A HREF="#isdn_ctrl">isdn_ctrl</A>*);

  <FONT COLOR=#0000FF>/*
   * Send data using sk_buff's
   * Parameters:
   *             int                    driverId
   *             int                    local channel-number (0...)
   *             int                    Flag: Need ACK for this packet.
   *             struct sk_buff *skb    Data to send
   */</FONT>
  <FONT COLOR="#298C52">int</FONT> (*writebuf_skb) (<FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">struct</FONT> sk_buff *);

  <FONT COLOR=#0000FF>/* Send raw D-Channel-Commands
   * Parameters:
   *             u_char pointer data
   *             int    length of data
   *             int    Flag: 0 = Call form Kernel-Space (use memcpy,
   *                              no schedule allowed) 
   *                          1 = Data is in User-Space (use memcpy_fromfs,
   *                              may schedule)
   *             int    driverId
   *             int    local channel-number (0 ...)
   */</FONT>
  <FONT COLOR="#298C52">int</FONT> (*writecmd)(<FONT COLOR="#298C52">const</FONT> u_char*, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>);

  <FONT COLOR=#0000FF>/* Read raw Status replies
   *             u_char pointer data (volatile)
   *             int    length of buffer
   *             int    Flag: 0 = Call form Kernel-Space (use memcpy,
   *                              no schedule allowed) 
   *                          1 = Data is in User-Space (use memcpy_fromfs,
   *                              may schedule)
   *             int    driverId
   *             int    local channel-number (0 ...)
   */</FONT>
  <FONT COLOR="#298C52">int</FONT> (*readstat)(u_char*, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>, <FONT COLOR="#298C52">int</FONT>);

  <FONT COLOR="#298C52">char</FONT> id[20];
} <A NAME="isdn_if">isdn_if</A>;

<FONT COLOR=#0000FF>/*
 * Function which must be called by lowlevel-driver at loadtime with
 * the following fields of above struct set:
 *
 * channels     Number of channels that will be supported.
 * hl_hdrlen    Space to preserve in sk_buff's when sending. Drivers, not
 *              supporting sk_buff's should set this to 0.
 * command      Address of Command-Handler.
 * features     Bitwise coded Features of this driver. (use ISDN_FEATURE_...)
 * writebuf_skb Address of Skbuff-Send-Handler.
 * writecmd        "    "  D-Channel  " which accepts raw D-Ch-Commands.
 * readstat        "    "  D-Channel  " which delivers raw Status-Data.
 *
 * The linklevel-driver fills the following fields:
 *
 * channels      Driver-ID assigned to this driver. (Must be used on all
 *               subsequent callbacks.
 * rcvcallb_skb  Address of handler for received Skbuff's.
 * statcallb        "    "     "    for status-changes.
 *
 */</FONT>
<FONT COLOR="#298C52">extern</FONT> <FONT COLOR="#298C52">int</FONT> register_isdn(<A HREF="#isdn_if">isdn_if</A>*);

<FONT COLOR=#A521F7>#ifndef</FONT> LINUX_VERSION_CODE
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/version.h&gt;
<FONT COLOR=#A521F7>#endif</FONT>
<FONT COLOR=#A521F7>#include</FONT> &lt;<FONT COLOR="#298C52">asm</FONT>/uaccess.h&gt;

<FONT COLOR=#A521F7>#endif</FONT> <FONT COLOR=#0000FF>/* __KERNEL__ */</FONT>
<FONT COLOR=#A521F7>#endif</FONT> <FONT COLOR=#0000FF>/* isdnif_h */</FONT>
</BODY>

</HTML>
