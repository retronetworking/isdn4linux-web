<HTML>

<!-- Generated by c2html-1.0, Copyright 1998 by Dave Whittington -->
<HEAD>
<TITLE>isdn_ppp.h</TITLE>
<!--#include virtual="/ssi/js.shtml" -->
<!--#include virtual="/ssi/buttondefs.shtml" -->
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<TABLE WIDTH="100%">
<TR>
<TD ALIGN=LEFT WIDTH="90"><!--#include virtual="/ssi/b_home.shtml" --></TD>
<TD ALIGN=RIGHT WIDTH="90"><!--#include virtual="/ssi/b_up.shtml" --></TD>
</TR>
</TABLE>
<CENTER><H1>isdn_ppp.h</H1></CENTER>

<HR>
<PRE>
<FONT COLOR=#A521F7>#ifndef</FONT> <A HREF="#_LINUX_ISDN_PPP_H">_LINUX_ISDN_PPP_H</A>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="_LINUX_ISDN_PPP_H">_LINUX_ISDN_PPP_H</A>


<FONT COLOR=#A521F7>#define</FONT> <A NAME="CALLTYPE_INCOMING">CALLTYPE_INCOMING</A> 0x1
<FONT COLOR=#A521F7>#define</FONT> <A NAME="CALLTYPE_OUTGOING">CALLTYPE_OUTGOING</A> 0x2
<FONT COLOR=#A521F7>#define</FONT> <A NAME="CALLTYPE_CALLBACK">CALLTYPE_CALLBACK</A> 0x4

<FONT COLOR="#298C52">struct</FONT> pppcallinfo
{
	<FONT COLOR="#298C52">int</FONT> calltype;
	<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> local_num[64];
	<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> remote_num[64];
	<FONT COLOR="#298C52">int</FONT> charge_units;
};

<FONT COLOR=#A521F7>#define</FONT> <A NAME="PPPIOCGCALLINFO">PPPIOCGCALLINFO</A> _IOWR(<FONT COLOR="#FF0000">'t'</FONT>,128,<FONT COLOR="#298C52">struct</FONT> pppcallinfo)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="PPPIOCBUNDLE">PPPIOCBUNDLE</A>   _IOW(<FONT COLOR="#FF0000">'t'</FONT>,129,<FONT COLOR="#298C52">int</FONT>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="PPPIOCGMPFLAGS">PPPIOCGMPFLAGS</A> _IOR(<FONT COLOR="#FF0000">'t'</FONT>,130,<FONT COLOR="#298C52">int</FONT>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="PPPIOCSMPFLAGS">PPPIOCSMPFLAGS</A> _IOW(<FONT COLOR="#FF0000">'t'</FONT>,131,<FONT COLOR="#298C52">int</FONT>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="PPPIOCSMPMTU">PPPIOCSMPMTU</A>   _IOW(<FONT COLOR="#FF0000">'t'</FONT>,132,<FONT COLOR="#298C52">int</FONT>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="PPPIOCSMPMRU">PPPIOCSMPMRU</A>   _IOW(<FONT COLOR="#FF0000">'t'</FONT>,133,<FONT COLOR="#298C52">int</FONT>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="PPPIOCGCOMPRESSORS">PPPIOCGCOMPRESSORS</A> _IOR(<FONT COLOR="#FF0000">'t'</FONT>,134,<FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">long</FONT> [8])
<FONT COLOR=#A521F7>#define</FONT> <A NAME="PPPIOCSCOMPRESSOR">PPPIOCSCOMPRESSOR</A> _IOW(<FONT COLOR="#FF0000">'t'</FONT>,135,<FONT COLOR="#298C52">int</FONT>)
<FONT COLOR=#A521F7>#define</FONT> <A NAME="PPPIOCGIFNAME">PPPIOCGIFNAME</A>      _IOR(<FONT COLOR="#FF0000">'t'</FONT>,136, <FONT COLOR="#298C52">char</FONT> [IFNAMSIZ] )

<FONT COLOR=#A521F7>#define</FONT> <A NAME="PPP_MP">PPP_MP</A>          0x003d
<FONT COLOR=#A521F7>#define</FONT> <A NAME="PPP_LINK_COMP">PPP_LINK_COMP</A>   0x00fb
<FONT COLOR=#A521F7>#define</FONT> <A NAME="PPP_LINK_CCP">PPP_LINK_CCP</A>    0x80fb

<FONT COLOR=#A521F7>#define</FONT> <A NAME="SC_MP_PROT">SC_MP_PROT</A>       0x00000200
<FONT COLOR=#A521F7>#define</FONT> <A NAME="SC_REJ_MP_PROT">SC_REJ_MP_PROT</A>   0x00000400
<FONT COLOR=#A521F7>#define</FONT> <A NAME="SC_OUT_SHORT_SEQ">SC_OUT_SHORT_SEQ</A> 0x00000800
<FONT COLOR=#A521F7>#define</FONT> <A NAME="SC_IN_SHORT_SEQ">SC_IN_SHORT_SEQ</A>  0x00004000

<FONT COLOR=#A521F7>#define</FONT> <A NAME="SC_DECOMP_ON">SC_DECOMP_ON</A>		0x01
<FONT COLOR=#A521F7>#define</FONT> <A NAME="SC_COMP_ON">SC_COMP_ON</A>		0x02
<FONT COLOR=#A521F7>#define</FONT> <A NAME="SC_DECOMP_DISCARD">SC_DECOMP_DISCARD</A>	0x04
<FONT COLOR=#A521F7>#define</FONT> <A NAME="SC_COMP_DISCARD">SC_COMP_DISCARD</A>		0x08
<FONT COLOR=#A521F7>#define</FONT> <A NAME="SC_LINK_DECOMP_ON">SC_LINK_DECOMP_ON</A>	0x10
<FONT COLOR=#A521F7>#define</FONT> <A NAME="SC_LINK_COMP_ON">SC_LINK_COMP_ON</A>		0x20
<FONT COLOR=#A521F7>#define</FONT> <A NAME="SC_LINK_DECOMP_DISCARD">SC_LINK_DECOMP_DISCARD</A>	0x40
<FONT COLOR=#A521F7>#define</FONT> <A NAME="SC_LINK_COMP_DISCARD">SC_LINK_COMP_DISCARD</A>	0x80

<FONT COLOR=#A521F7>#define</FONT> <A NAME="DECOMP_ERR_NOMEM">DECOMP_ERR_NOMEM</A>	(-10)

<FONT COLOR=#A521F7>#define</FONT> <A NAME="MP_END_FRAG">MP_END_FRAG</A>    0x40
<FONT COLOR=#A521F7>#define</FONT> <A NAME="MP_BEGIN_FRAG">MP_BEGIN_FRAG</A>  0x80

<FONT COLOR=#A521F7>#define</FONT> <A NAME="ISDN_PPP_COMP_MAX_OPTIONS">ISDN_PPP_COMP_MAX_OPTIONS</A> 16

<FONT COLOR=#A521F7>#define</FONT> <A NAME="IPPP_COMP_FLAG_XMIT">IPPP_COMP_FLAG_XMIT</A> 0x1
<FONT COLOR=#A521F7>#define</FONT> <A NAME="IPPP_COMP_FLAG_LINK">IPPP_COMP_FLAG_LINK</A> 0x2

<FONT COLOR="#298C52">struct</FONT> isdn_ppp_comp_data {
        <FONT COLOR="#298C52">int</FONT> num;
        <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> options[<A HREF="#ISDN_PPP_COMP_MAX_OPTIONS">ISDN_PPP_COMP_MAX_OPTIONS</A>];
        <FONT COLOR="#298C52">int</FONT> optlen;
        <FONT COLOR="#298C52">int</FONT> flags;
};

<FONT COLOR=#A521F7>#ifdef</FONT> __KERNEL__

<FONT COLOR=#0000FF>/*
 * this is an 'old friend' from ppp-comp.h under a new name 
 * check the original include for more information
 */</FONT>
<FONT COLOR="#298C52">struct</FONT> isdn_ppp_compressor {
	<FONT COLOR="#298C52">struct</FONT> isdn_ppp_compressor *next,*prev;
	<FONT COLOR="#298C52">int</FONT> num; <FONT COLOR=#0000FF>/* CCP compression protocol number */</FONT>
	<FONT COLOR="#298C52">void</FONT> *(*alloc) (<FONT COLOR="#298C52">struct</FONT> isdn_ppp_comp_data *);
	<FONT COLOR="#298C52">void</FONT> (*free) (<FONT COLOR="#298C52">void</FONT> *state);
	<FONT COLOR="#298C52">int</FONT>  (*init) (<FONT COLOR="#298C52">void</FONT> *state, <FONT COLOR="#298C52">struct</FONT> isdn_ppp_comp_data *,<FONT COLOR="#298C52">int</FONT> unit,<FONT COLOR="#298C52">int</FONT> debug);
	<FONT COLOR="#298C52">void</FONT> (*reset) (<FONT COLOR="#298C52">void</FONT> *state);
	<FONT COLOR="#298C52">int</FONT>  (*compress) (<FONT COLOR="#298C52">void</FONT> *state,<FONT COLOR="#298C52">struct</FONT> sk_buff *in, <FONT COLOR="#298C52">struct</FONT> sk_buff *skb_out, <FONT COLOR="#298C52">int</FONT> proto);
	<FONT COLOR="#298C52">int</FONT>  (*decompress) (<FONT COLOR="#298C52">void</FONT> *state,<FONT COLOR="#298C52">struct</FONT> sk_buff *in, <FONT COLOR="#298C52">struct</FONT> sk_buff *skb_out);
	<FONT COLOR="#298C52">void</FONT> (*incomp) (<FONT COLOR="#298C52">void</FONT> *state, <FONT COLOR="#298C52">struct</FONT> sk_buff *in,<FONT COLOR="#298C52">int</FONT> proto);
	<FONT COLOR="#298C52">void</FONT> (*stat) (<FONT COLOR="#298C52">void</FONT> *state, <FONT COLOR="#298C52">struct</FONT> compstat *stats);
};

<FONT COLOR="#298C52">extern</FONT> <FONT COLOR="#298C52">int</FONT> isdn_ppp_register_compressor(<FONT COLOR="#298C52">struct</FONT> isdn_ppp_compressor *);
<FONT COLOR="#298C52">extern</FONT> <FONT COLOR="#298C52">int</FONT> isdn_ppp_unregister_compressor(<FONT COLOR="#298C52">struct</FONT> isdn_ppp_compressor *);
<FONT COLOR="#298C52">extern</FONT> <FONT COLOR="#298C52">int</FONT> isdn_ppp_dial_slave(<FONT COLOR="#298C52">char</FONT> *);
<FONT COLOR="#298C52">extern</FONT> <FONT COLOR="#298C52">int</FONT> isdn_ppp_hangup_slave(<FONT COLOR="#298C52">char</FONT> *);

<FONT COLOR="#298C52">struct</FONT> ippp_bundle {
  <FONT COLOR="#298C52">int</FONT> mp_mrru;                        <FONT COLOR=#0000FF>/* unused                             */</FONT>
  <FONT COLOR="#298C52">struct</FONT> mpqueue *last;               <FONT COLOR=#0000FF>/* currently defined in isdn_net_dev  */</FONT>
  <FONT COLOR="#298C52">int</FONT> min;                            <FONT COLOR=#0000FF>/* currently calculated 'on the fly'  */</FONT>
  <FONT COLOR="#298C52">long</FONT> next_num;                      <FONT COLOR=#0000FF>/* we wanna see this seq.-number next */</FONT>
  <FONT COLOR="#298C52">struct</FONT> sqqueue *sq;
  <FONT COLOR="#298C52">int</FONT> modify:1;                       <FONT COLOR=#0000FF>/* set to 1 while modifying sqqueue   */</FONT>
  <FONT COLOR="#298C52">int</FONT> bundled:1;                      <FONT COLOR=#0000FF>/* bundle active ?                    */</FONT>
};

<FONT COLOR=#A521F7>#define</FONT> <A NAME="NUM_RCV_BUFFS">NUM_RCV_BUFFS</A>     64

<FONT COLOR="#298C52">struct</FONT> sqqueue {
  <FONT COLOR="#298C52">struct</FONT> sqqueue *next;
  <FONT COLOR="#298C52">long</FONT> sqno_start;
  <FONT COLOR="#298C52">long</FONT> sqno_end;
  <FONT COLOR="#298C52">struct</FONT> sk_buff *skb;
  <FONT COLOR="#298C52">long</FONT> timer;
};

<FONT COLOR="#298C52">struct</FONT> mpqueue {
  <FONT COLOR="#298C52">struct</FONT> mpqueue *next;
  <FONT COLOR="#298C52">struct</FONT> mpqueue *last;
  <FONT COLOR="#298C52">long</FONT> sqno;
  <FONT COLOR="#298C52">struct</FONT> sk_buff *skb;
  <FONT COLOR="#298C52">int</FONT> BEbyte;
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">long</FONT> time;
};

<FONT COLOR="#298C52">struct</FONT> ippp_buf_queue {
  <FONT COLOR="#298C52">struct</FONT> ippp_buf_queue *next;
  <FONT COLOR="#298C52">struct</FONT> ippp_buf_queue *last;
  <FONT COLOR="#298C52">char</FONT> *buf;                 <FONT COLOR=#0000FF>/* NULL here indicates end of queue */</FONT>
  <FONT COLOR="#298C52">int</FONT> len;
};

<FONT COLOR="#298C52">struct</FONT> ippp_struct {
  <FONT COLOR="#298C52">struct</FONT> ippp_struct *next_link;
  <FONT COLOR="#298C52">int</FONT> state;
  <FONT COLOR="#298C52">struct</FONT> ippp_buf_queue rq[<A HREF="#NUM_RCV_BUFFS">NUM_RCV_BUFFS</A>]; <FONT COLOR=#0000FF>/* packet queue for isdn_ppp_read() */</FONT>
  <FONT COLOR="#298C52">struct</FONT> ippp_buf_queue *first;  <FONT COLOR=#0000FF>/* pointer to (current) first packet */</FONT>
  <FONT COLOR="#298C52">struct</FONT> ippp_buf_queue *last;   <FONT COLOR=#0000FF>/* pointer to (current) last used packet in queue */</FONT>
  <FONT COLOR="#298C52">struct</FONT> wait_queue *wq;
  <FONT COLOR="#298C52">struct</FONT> task_struct *tk;
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> mpppcfg;
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> pppcfg;
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> mru;
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> mpmru;
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> mpmtu;
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">int</FONT> maxcid;
  <FONT COLOR="#298C52">struct</FONT> <A HREF="isdn.h.shtml#isdn_net_local_s">isdn_net_local_s</A> *lp;
  <FONT COLOR="#298C52">int</FONT> unit;
  <FONT COLOR="#298C52">int</FONT> minor;
  <FONT COLOR="#298C52">long</FONT> last_link_seqno;
  <FONT COLOR="#298C52">long</FONT> mp_seqno;
  <FONT COLOR="#298C52">long</FONT> range;
<FONT COLOR=#A521F7>#ifdef</FONT> CONFIG_ISDN_PPP_VJ
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">char</FONT> *cbuf;
  <FONT COLOR="#298C52">struct</FONT> slcompress *slcomp;
<FONT COLOR=#A521F7>#endif</FONT>
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">long</FONT> debug;
  <FONT COLOR="#298C52">struct</FONT> isdn_ppp_compressor *compressor,*decompressor;
  <FONT COLOR="#298C52">struct</FONT> isdn_ppp_compressor *link_compressor,*link_decompressor;
  <FONT COLOR="#298C52">void</FONT> *decomp_stat,*comp_stat,*link_decomp_stat,*link_comp_stat;
  <FONT COLOR="#298C52">unsigned</FONT> <FONT COLOR="#298C52">long</FONT> compflags;
};

<FONT COLOR=#A521F7>#endif</FONT> <FONT COLOR=#0000FF>/* __KERNEL__ */</FONT>

<FONT COLOR=#A521F7>#endif</FONT> <FONT COLOR=#0000FF>/* _LINUX_ISDN_PPP_H */</FONT>

</BODY>

</HTML>
