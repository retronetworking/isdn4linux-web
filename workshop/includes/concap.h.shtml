<HTML>

<!-- Generated by c2html-1.0, Copyright 1998 by Dave Whittington -->
<HEAD>
<TITLE>concap.h</TITLE>
<!--#include virtual="/ssi/js.shtml" -->
<!--#include virtual="/ssi/buttondefs.shtml" -->
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<TABLE WIDTH="100%">
<TR>
<TD ALIGN=LEFT WIDTH="90"><!--#include virtual="/ssi/b_home.shtml" --></TD>
<TD ALIGN=RIGHT WIDTH="90"><!--#include virtual="/ssi/b_up.shtml" --></TD>
</TR>
</TABLE>
<CENTER><H1>concap.h</H1></CENTER>

<HR>
<PRE>
<FONT COLOR=#0000FF>/* $Id$
*/</FONT>
<FONT COLOR=#A521F7>#ifndef</FONT> <A HREF="#_LINUX_CONCAP_H">_LINUX_CONCAP_H</A>
<FONT COLOR=#A521F7>#define</FONT> <A NAME="_LINUX_CONCAP_H">_LINUX_CONCAP_H</A>
<FONT COLOR=#A521F7>#ifdef</FONT> __KERNEL__
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/skbuff.h&gt;
<FONT COLOR=#A521F7>#include</FONT> &lt;linux/netdevice.h&gt;

<FONT COLOR=#0000FF>/* Stuff to support encapsulation protocols genericly. The encapsulation
   protocol is processed at the uppermost layer of the network interface.

   (c) 1997 by Henner Eisen &lt;eis@baty.hanse.de&gt;
   This software is subject to the GNU General Public License.

   Based on a ideas developed in a 'synchronous device' thread in the
   linux-x25 mailing list contributed by Alan Cox, Thomasz Motylewski
   and Jonathan Naylor.

   For more documetation on this refer to Documentation/isdn/README.concap
   */</FONT>

<FONT COLOR="#298C52">struct</FONT> concap_proto_ops;
<FONT COLOR="#298C52">struct</FONT> concap_device_ops;

<FONT COLOR=#0000FF>/* this manages all data needed by the encapsulation protocol
 */</FONT>
<FONT COLOR="#298C52">struct</FONT> concap_proto{
	<FONT COLOR="#298C52">struct</FONT> device *net_dev;		<FONT COLOR=#0000FF>/* net device using our service  */</FONT>
	<FONT COLOR="#298C52">struct</FONT> concap_device_ops *dops; <FONT COLOR=#0000FF>/* callbacks provided by device */</FONT>
 	<FONT COLOR="#298C52">struct</FONT> concap_proto_ops  *pops; <FONT COLOR=#0000FF>/* callbacks provided by us */</FONT>
	<FONT COLOR="#298C52">int</FONT> flags;
	<FONT COLOR="#298C52">void</FONT> *proto_data;               <FONT COLOR=#0000FF>/* protocol specific private data, to
					   be accessed via *pops methods only*/</FONT>
	<FONT COLOR=#0000FF>/*
	  :
	  whatever 
	  :
	  */</FONT>
};

<FONT COLOR=#0000FF>/* Operations to be supported by the net device. Called by the encapsulation
 * protocol entity. No receive method is offered because the encapsulation
 * protocol directly calls netif_rx().
 */</FONT>
<FONT COLOR="#298C52">struct</FONT> concap_device_ops{

	<FONT COLOR=#0000FF>/* to request data is submitted by device*/</FONT> 
	<FONT COLOR="#298C52">int</FONT> (*data_req)(<FONT COLOR="#298C52">struct</FONT> concap_proto *, <FONT COLOR="#298C52">struct</FONT> sk_buff *);

	<FONT COLOR=#0000FF>/* Control methods must be set to NULL by devices which do not
	   support connection control.*/</FONT>
	<FONT COLOR=#0000FF>/* to request a connection is set up */</FONT> 
	<FONT COLOR="#298C52">int</FONT> (*connect_req)(<FONT COLOR="#298C52">struct</FONT> concap_proto *);

	<FONT COLOR=#0000FF>/* to request a connection is released */</FONT>
	<FONT COLOR="#298C52">int</FONT> (*disconn_req)(<FONT COLOR="#298C52">struct</FONT> concap_proto *);	
};

<FONT COLOR=#0000FF>/* Operations to be supported by the encapsulation protocol. Called by
 * device driver.
 */</FONT>
<FONT COLOR="#298C52">struct</FONT> concap_proto_ops{

	<FONT COLOR=#0000FF>/* create a new encapsulation protocol instance of same type */</FONT>
	<FONT COLOR="#298C52">struct</FONT> concap_proto *  (*proto_new) (<FONT COLOR="#298C52">void</FONT>);

	<FONT COLOR=#0000FF>/* delete encapsulation protocol instance and free all its resources.
	   cprot may no loger be referenced after calling this */</FONT>
	<FONT COLOR="#298C52">void</FONT> (*proto_del)(<FONT COLOR="#298C52">struct</FONT> concap_proto *cprot);

	<FONT COLOR=#0000FF>/* initialize the protocol's data. To be called at interface startup
	   or when the device driver resets the interface. All services of the
	   encapsulation protocol may be used after this*/</FONT>
	<FONT COLOR="#298C52">int</FONT> (*restart)(<FONT COLOR="#298C52">struct</FONT> concap_proto *cprot, 
		       <FONT COLOR="#298C52">struct</FONT> device *ndev,
		       <FONT COLOR="#298C52">struct</FONT> concap_device_ops *dops);

	<FONT COLOR=#0000FF>/* inactivate an encapsulation protocol instance. The encapsulation
	   protocol may not call any *dops methods after this. */</FONT>
	<FONT COLOR="#298C52">int</FONT> (*close)(<FONT COLOR="#298C52">struct</FONT> concap_proto *cprot);

	<FONT COLOR=#0000FF>/* process a frame handed down to us by upper layer */</FONT>
	<FONT COLOR="#298C52">int</FONT> (*encap_and_xmit)(<FONT COLOR="#298C52">struct</FONT> concap_proto *cprot, <FONT COLOR="#298C52">struct</FONT> sk_buff *skb);

	<FONT COLOR=#0000FF>/* to be called for each data entity received from lower layer*/</FONT> 
	<FONT COLOR="#298C52">int</FONT> (*data_ind)(<FONT COLOR="#298C52">struct</FONT> concap_proto *cprot, <FONT COLOR="#298C52">struct</FONT> sk_buff *skb);

	<FONT COLOR=#0000FF>/* to be called when a connection was set up/down.
	   Protocols that don't process these primitives might fill in
	   dummy methods here */</FONT>
	<FONT COLOR="#298C52">int</FONT> (*connect_ind)(<FONT COLOR="#298C52">struct</FONT> concap_proto *cprot);
	<FONT COLOR="#298C52">int</FONT> (*disconn_ind)(<FONT COLOR="#298C52">struct</FONT> concap_proto *cprot);
  <FONT COLOR=#0000FF>/*
    Some network device support functions, like net_header(), rebuild_header(),
    and others, that depend solely on the encapsulation protocol, might
    be provided here, too. The net device would just fill them in its
    corresponding fields when it is opened.
    */</FONT>
};

<FONT COLOR=#0000FF>/* dummy restart/close/connect/reset/disconn methods
 */</FONT>
<FONT COLOR="#298C52">extern</FONT> <FONT COLOR="#298C52">int</FONT> concap_nop(<FONT COLOR="#298C52">struct</FONT> concap_proto *cprot); 

<FONT COLOR=#0000FF>/* dummy submit method
 */</FONT>
<FONT COLOR="#298C52">extern</FONT> <FONT COLOR="#298C52">int</FONT> concap_drop_skb(<FONT COLOR="#298C52">struct</FONT> concap_proto *cprot, <FONT COLOR="#298C52">struct</FONT> sk_buff *skb);
<FONT COLOR=#A521F7>#endif</FONT>
<FONT COLOR=#A521F7>#endif</FONT>




</BODY>

</HTML>
